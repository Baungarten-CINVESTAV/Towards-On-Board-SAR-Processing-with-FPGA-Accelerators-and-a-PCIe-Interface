// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Reorder_fft.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Reorder_fft::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Reorder_fft::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> Reorder_fft::ap_ST_fsm_state1 = "1";
const sc_lv<17> Reorder_fft::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<17> Reorder_fft::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<17> Reorder_fft::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<17> Reorder_fft::ap_ST_fsm_pp0_stage3 = "10000";
const sc_lv<17> Reorder_fft::ap_ST_fsm_pp0_stage4 = "100000";
const sc_lv<17> Reorder_fft::ap_ST_fsm_pp0_stage5 = "1000000";
const sc_lv<17> Reorder_fft::ap_ST_fsm_pp0_stage6 = "10000000";
const sc_lv<17> Reorder_fft::ap_ST_fsm_pp0_stage7 = "100000000";
const sc_lv<17> Reorder_fft::ap_ST_fsm_pp0_stage8 = "1000000000";
const sc_lv<17> Reorder_fft::ap_ST_fsm_pp0_stage9 = "10000000000";
const sc_lv<17> Reorder_fft::ap_ST_fsm_state29 = "100000000000";
const sc_lv<17> Reorder_fft::ap_ST_fsm_pp1_stage0 = "1000000000000";
const sc_lv<17> Reorder_fft::ap_ST_fsm_pp1_stage1 = "10000000000000";
const sc_lv<17> Reorder_fft::ap_ST_fsm_pp1_stage2 = "100000000000000";
const sc_lv<17> Reorder_fft::ap_ST_fsm_pp1_stage3 = "1000000000000000";
const sc_lv<17> Reorder_fft::ap_ST_fsm_state35 = "10000000000000000";
const sc_lv<32> Reorder_fft::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Reorder_fft::ap_const_boolean_1 = true;
const int Reorder_fft::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> Reorder_fft::ap_const_lv32_2 = "10";
const bool Reorder_fft::ap_const_boolean_0 = false;
const sc_lv<1> Reorder_fft::ap_const_lv1_0 = "0";
const sc_lv<32> Reorder_fft::ap_const_lv32_E = "1110";
const sc_lv<32> Reorder_fft::ap_const_lv32_3 = "11";
const sc_lv<32> Reorder_fft::ap_const_lv32_5 = "101";
const sc_lv<32> Reorder_fft::ap_const_lv32_8 = "1000";
const sc_lv<32> Reorder_fft::ap_const_lv32_7 = "111";
const sc_lv<32> Reorder_fft::ap_const_lv32_9 = "1001";
const sc_lv<32> Reorder_fft::ap_const_lv32_4 = "100";
const sc_lv<32> Reorder_fft::ap_const_lv32_A = "1010";
const sc_lv<32> Reorder_fft::ap_const_lv32_1 = "1";
const sc_lv<32> Reorder_fft::ap_const_lv32_6 = "110";
const sc_lv<32> Reorder_fft::ap_const_lv32_C = "1100";
const sc_lv<32> Reorder_fft::ap_const_lv32_D = "1101";
const sc_lv<1> Reorder_fft::ap_const_lv1_1 = "1";
const sc_lv<32> Reorder_fft::ap_const_lv32_B = "1011";
const sc_lv<32> Reorder_fft::ap_const_lv32_F = "1111";
const sc_lv<11> Reorder_fft::ap_const_lv11_0 = "00000000000";
const sc_lv<9> Reorder_fft::ap_const_lv9_0 = "000000000";
const sc_lv<4> Reorder_fft::ap_const_lv4_0 = "0000";
const sc_lv<4> Reorder_fft::ap_const_lv4_F = "1111";
const sc_lv<10> Reorder_fft::ap_const_lv10_1 = "1";
const sc_lv<10> Reorder_fft::ap_const_lv10_2 = "10";
const sc_lv<10> Reorder_fft::ap_const_lv10_3 = "11";
const sc_lv<32> Reorder_fft::ap_const_lv32_80000000 = "10000000000000000000000000000000";
const sc_lv<11> Reorder_fft::ap_const_lv11_4 = "100";
const sc_lv<9> Reorder_fft::ap_const_lv9_1E0 = "111100000";
const sc_lv<9> Reorder_fft::ap_const_lv9_1 = "1";
const sc_lv<32> Reorder_fft::ap_const_lv32_10 = "10000";

Reorder_fft::Reorder_fft(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lut_reorder_I_U = new Reorder_fft_lut_rbkb("lut_reorder_I_U");
    lut_reorder_I_U->clk(ap_clk);
    lut_reorder_I_U->reset(ap_rst_n_inv);
    lut_reorder_I_U->address0(lut_reorder_I_address0);
    lut_reorder_I_U->ce0(lut_reorder_I_ce0);
    lut_reorder_I_U->q0(lut_reorder_I_q0);
    lut_reorder_J_U = new Reorder_fft_lut_rcud("lut_reorder_J_U");
    lut_reorder_J_U->clk(ap_clk);
    lut_reorder_J_U->reset(ap_rst_n_inv);
    lut_reorder_J_U->address0(lut_reorder_J_address0);
    lut_reorder_J_U->ce0(lut_reorder_J_ce0);
    lut_reorder_J_U->q0(lut_reorder_J_q0);
    Reorder_fft_AXILiteS_s_axi_U = new Reorder_fft_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("Reorder_fft_AXILiteS_s_axi_U");
    Reorder_fft_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    Reorder_fft_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    Reorder_fft_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    Reorder_fft_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    Reorder_fft_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    Reorder_fft_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    Reorder_fft_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    Reorder_fft_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    Reorder_fft_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    Reorder_fft_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    Reorder_fft_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    Reorder_fft_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    Reorder_fft_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    Reorder_fft_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    Reorder_fft_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    Reorder_fft_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    Reorder_fft_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    Reorder_fft_AXILiteS_s_axi_U->ACLK(ap_clk);
    Reorder_fft_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    Reorder_fft_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    Reorder_fft_AXILiteS_s_axi_U->ap_start(ap_start);
    Reorder_fft_AXILiteS_s_axi_U->interrupt(interrupt);
    Reorder_fft_AXILiteS_s_axi_U->ap_ready(ap_ready);
    Reorder_fft_AXILiteS_s_axi_U->ap_done(ap_done);
    Reorder_fft_AXILiteS_s_axi_U->ap_idle(ap_idle);
    Reorder_fft_fadd_dEe_U1 = new Reorder_fft_fadd_dEe<1,5,32,32,32>("Reorder_fft_fadd_dEe_U1");
    Reorder_fft_fadd_dEe_U1->clk(ap_clk);
    Reorder_fft_fadd_dEe_U1->reset(ap_rst_n_inv);
    Reorder_fft_fadd_dEe_U1->din0(grp_fu_225_p0);
    Reorder_fft_fadd_dEe_U1->din1(grp_fu_225_p1);
    Reorder_fft_fadd_dEe_U1->ce(ap_var_for_const0);
    Reorder_fft_fadd_dEe_U1->dout(grp_fu_225_p2);
    Reorder_fft_fadd_dEe_U2 = new Reorder_fft_fadd_dEe<1,5,32,32,32>("Reorder_fft_fadd_dEe_U2");
    Reorder_fft_fadd_dEe_U2->clk(ap_clk);
    Reorder_fft_fadd_dEe_U2->reset(ap_rst_n_inv);
    Reorder_fft_fadd_dEe_U2->din0(grp_fu_229_p0);
    Reorder_fft_fadd_dEe_U2->din1(grp_fu_229_p1);
    Reorder_fft_fadd_dEe_U2->ce(ap_var_for_const0);
    Reorder_fft_fadd_dEe_U2->dout(grp_fu_229_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Imag_Addr_A);
    sensitive << ( Imag_Addr_A_orig );

    SC_METHOD(thread_Imag_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( Imag_addr_reg_499 );
    sensitive << ( Imag_addr_reg_499_pp0_iter1_reg );
    sensitive << ( Imag_addr_2_reg_504 );
    sensitive << ( Imag_addr_2_reg_504_pp0_iter1_reg );
    sensitive << ( Imag_addr_1_reg_519 );
    sensitive << ( Imag_addr_1_reg_519_pp0_iter2_reg );
    sensitive << ( Imag_addr_3_reg_524 );
    sensitive << ( Imag_addr_3_reg_524_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( Imag_addr_4_reg_684 );
    sensitive << ( Imag_addr_5_reg_694 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln54_fu_301_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln56_fu_323_p1 );
    sensitive << ( zext_ln101_fu_468_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( zext_ln103_fu_474_p1 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage9 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Imag_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_Imag_Din_A);
    sensitive << ( Imag_Dout_A );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( reg_240 );
    sensitive << ( reg_251 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( reg_265 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( reg_272 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage9 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Imag_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Imag_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_Imag_WEN_A);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln94_reg_655 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_6_reg_479_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_6_reg_479_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Real_r_Addr_A);
    sensitive << ( Real_r_Addr_A_orig );

    SC_METHOD(thread_Real_r_Addr_A_orig);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( Real_addr_reg_489_pp0_iter1_reg );
    sensitive << ( Real_addr_2_reg_494 );
    sensitive << ( Real_addr_2_reg_494_pp0_iter1_reg );
    sensitive << ( Real_addr_1_reg_509_pp0_iter1_reg );
    sensitive << ( Real_addr_3_reg_514 );
    sensitive << ( Real_addr_3_reg_514_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( Real_addr_4_reg_679 );
    sensitive << ( Real_addr_5_reg_689 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln52_fu_295_p1 );
    sensitive << ( zext_ln53_fu_317_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln101_fu_468_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( zext_ln103_fu_474_p1 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage9 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Real_r_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_Real_r_Din_A);
    sensitive << ( Real_r_Dout_A );
    sensitive << ( reg_233 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( reg_251 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( reg_259 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( tmp_5_3_reg_640 );
    sensitive << ( tmp_5_2_reg_645 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage9 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Real_r_EN_A);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage4_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage5_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Real_r_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_Real_r_WEN_A);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln94_reg_655 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage7_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_6_reg_479_pp0_iter1_reg );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage6_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage8 );
    sensitive << ( ap_block_pp0_stage8_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_block_pp0_stage9_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);

    SC_METHOD(thread_ap_block_pp0_stage4);

    SC_METHOD(thread_ap_block_pp0_stage4_11001);

    SC_METHOD(thread_ap_block_pp0_stage4_subdone);

    SC_METHOD(thread_ap_block_pp0_stage5);

    SC_METHOD(thread_ap_block_pp0_stage5_11001);

    SC_METHOD(thread_ap_block_pp0_stage5_subdone);

    SC_METHOD(thread_ap_block_pp0_stage6);

    SC_METHOD(thread_ap_block_pp0_stage6_11001);

    SC_METHOD(thread_ap_block_pp0_stage6_subdone);

    SC_METHOD(thread_ap_block_pp0_stage7);

    SC_METHOD(thread_ap_block_pp0_stage7_11001);

    SC_METHOD(thread_ap_block_pp0_stage7_subdone);

    SC_METHOD(thread_ap_block_pp0_stage8);

    SC_METHOD(thread_ap_block_pp0_stage8_11001);

    SC_METHOD(thread_ap_block_pp0_stage8_subdone);

    SC_METHOD(thread_ap_block_pp0_stage9);

    SC_METHOD(thread_ap_block_pp0_stage9_11001);

    SC_METHOD(thread_ap_block_pp0_stage9_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage1);

    SC_METHOD(thread_ap_block_pp1_stage1_11001);

    SC_METHOD(thread_ap_block_pp1_stage1_subdone);

    SC_METHOD(thread_ap_block_pp1_stage2);

    SC_METHOD(thread_ap_block_pp1_stage2_11001);

    SC_METHOD(thread_ap_block_pp1_stage2_subdone);

    SC_METHOD(thread_ap_block_pp1_stage3);

    SC_METHOD(thread_ap_block_pp1_stage3_11001);

    SC_METHOD(thread_ap_block_pp1_stage3_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage8_iter0);

    SC_METHOD(thread_ap_block_state11_pp0_stage9_iter0);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state13_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state14_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state15_pp0_stage3_iter1);

    SC_METHOD(thread_ap_block_state16_pp0_stage4_iter1);

    SC_METHOD(thread_ap_block_state17_pp0_stage5_iter1);

    SC_METHOD(thread_ap_block_state18_pp0_stage6_iter1);

    SC_METHOD(thread_ap_block_state19_pp0_stage7_iter1);

    SC_METHOD(thread_ap_block_state20_pp0_stage8_iter1);

    SC_METHOD(thread_ap_block_state21_pp0_stage9_iter1);

    SC_METHOD(thread_ap_block_state22_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state23_pp0_stage1_iter2);

    SC_METHOD(thread_ap_block_state24_pp0_stage2_iter2);

    SC_METHOD(thread_ap_block_state25_pp0_stage3_iter2);

    SC_METHOD(thread_ap_block_state26_pp0_stage4_iter2);

    SC_METHOD(thread_ap_block_state27_pp0_stage5_iter2);

    SC_METHOD(thread_ap_block_state28_pp0_stage6_iter2);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state30_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state31_pp1_stage1_iter0);

    SC_METHOD(thread_ap_block_state32_pp1_stage2_iter0);

    SC_METHOD(thread_ap_block_state33_pp1_stage3_iter0);

    SC_METHOD(thread_ap_block_state34_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage3_iter0);

    SC_METHOD(thread_ap_block_state6_pp0_stage4_iter0);

    SC_METHOD(thread_ap_block_state7_pp0_stage5_iter0);

    SC_METHOD(thread_ap_block_state8_pp0_stage6_iter0);

    SC_METHOD(thread_ap_block_state9_pp0_stage7_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( tmp_6_fu_277_p3 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state30);
    sensitive << ( icmp_ln94_fu_450_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_phi_mux_c_0_phi_fu_206_p4);
    sensitive << ( c_0_reg_202 );
    sensitive << ( tmp_6_reg_479 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( c_reg_608 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_218_p4);
    sensitive << ( i_0_reg_214 );
    sensitive << ( icmp_ln94_reg_655 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( i_reg_659 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bitcast_ln77_1_fu_338_p1);
    sensitive << ( xor_ln77_fu_332_p2 );

    SC_METHOD(thread_bitcast_ln77_fu_329_p1);
    sensitive << ( RE_vec_128_b_reg_529 );

    SC_METHOD(thread_bitcast_ln78_1_fu_353_p1);
    sensitive << ( xor_ln78_fu_347_p2 );

    SC_METHOD(thread_bitcast_ln78_fu_343_p1);
    sensitive << ( reg_246 );

    SC_METHOD(thread_bitcast_ln79_1_fu_417_p1);
    sensitive << ( xor_ln79_fu_411_p2 );

    SC_METHOD(thread_bitcast_ln79_2_fu_387_p1);
    sensitive << ( reg_259 );

    SC_METHOD(thread_bitcast_ln79_3_fu_397_p1);
    sensitive << ( xor_ln79_1_fu_391_p2 );

    SC_METHOD(thread_bitcast_ln79_fu_408_p1);
    sensitive << ( tmp_3_reg_597 );

    SC_METHOD(thread_bitcast_ln83_1_fu_368_p1);
    sensitive << ( xor_ln83_fu_362_p2 );

    SC_METHOD(thread_bitcast_ln83_fu_358_p1);
    sensitive << ( reg_246 );

    SC_METHOD(thread_bitcast_ln84_1_fu_382_p1);
    sensitive << ( xor_ln84_fu_376_p2 );

    SC_METHOD(thread_bitcast_ln84_fu_373_p1);
    sensitive << ( Real_load_3_reg_576 );

    SC_METHOD(thread_bitcast_ln85_1_fu_431_p1);
    sensitive << ( xor_ln85_fu_425_p2 );

    SC_METHOD(thread_bitcast_ln85_2_fu_436_p1);
    sensitive << ( tmp_9_reg_623 );

    SC_METHOD(thread_bitcast_ln85_3_fu_445_p1);
    sensitive << ( xor_ln85_1_fu_439_p2 );

    SC_METHOD(thread_bitcast_ln85_fu_422_p1);
    sensitive << ( tmp_9_1_reg_629 );

    SC_METHOD(thread_c_fu_402_p2);
    sensitive << ( c_0_reg_202 );

    SC_METHOD(thread_grp_fu_225_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( reg_259 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( RE_vec_128_b_reg_529 );
    sensitive << ( Real_load_1_reg_551 );
    sensitive << ( bitcast_ln78_1_fu_353_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( Imag_load_5_reg_571 );
    sensitive << ( bitcast_ln83_1_fu_368_p1 );
    sensitive << ( tmp_3_reg_597 );
    sensitive << ( tmp_9_reg_623 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage9 );

    SC_METHOD(thread_grp_fu_225_p1);
    sensitive << ( reg_233 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( reg_240 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( reg_251 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( reg_265 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( Real_load_reg_535 );
    sensitive << ( IM_vec_128_a_reg_540 );
    sensitive << ( Imag_load_4_reg_561 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( tmp_1_1_reg_586 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage9 );

    SC_METHOD(thread_grp_fu_229_p0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( reg_246 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( bitcast_ln77_1_fu_338_p1 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( bitcast_ln84_1_fu_382_p1 );
    sensitive << ( bitcast_ln79_3_fu_397_p1 );
    sensitive << ( bitcast_ln79_1_fu_417_p1 );
    sensitive << ( tmp_9_1_reg_629 );
    sensitive << ( bitcast_ln85_1_fu_431_p1 );
    sensitive << ( bitcast_ln85_3_fu_445_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage9 );

    SC_METHOD(thread_grp_fu_229_p1);
    sensitive << ( reg_233 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage4 );
    sensitive << ( reg_251 );
    sensitive << ( ap_CS_fsm_pp0_stage7 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( reg_265 );
    sensitive << ( ap_CS_fsm_pp0_stage9 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( IM_vec_128_a_reg_540 );
    sensitive << ( ap_CS_fsm_pp0_stage5 );
    sensitive << ( Real_load_2_reg_566 );
    sensitive << ( tmp_1_1_reg_586 );
    sensitive << ( tmp_7_1_reg_613 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage4 );
    sensitive << ( ap_block_pp0_stage5 );
    sensitive << ( ap_block_pp0_stage6 );
    sensitive << ( ap_block_pp0_stage7 );
    sensitive << ( ap_block_pp0_stage9 );

    SC_METHOD(thread_i_fu_456_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_218_p4 );

    SC_METHOD(thread_icmp_ln94_fu_450_p2);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_218_p4 );

    SC_METHOD(thread_ind1_fu_289_p2);
    sensitive << ( trunc_ln44_fu_285_p1 );

    SC_METHOD(thread_ind2_fu_307_p2);
    sensitive << ( trunc_ln44_reg_483 );

    SC_METHOD(thread_ind3_fu_312_p2);
    sensitive << ( trunc_ln44_reg_483 );

    SC_METHOD(thread_lut_reorder_I_address0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln98_fu_462_p1 );

    SC_METHOD(thread_lut_reorder_I_ce0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_lut_reorder_J_address0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln98_fu_462_p1 );

    SC_METHOD(thread_lut_reorder_J_ce0);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_tmp_6_fu_277_p3);
    sensitive << ( ap_phi_mux_c_0_phi_fu_206_p4 );

    SC_METHOD(thread_trunc_ln44_fu_285_p1);
    sensitive << ( ap_phi_mux_c_0_phi_fu_206_p4 );

    SC_METHOD(thread_xor_ln77_fu_332_p2);
    sensitive << ( bitcast_ln77_fu_329_p1 );

    SC_METHOD(thread_xor_ln78_fu_347_p2);
    sensitive << ( bitcast_ln78_fu_343_p1 );

    SC_METHOD(thread_xor_ln79_1_fu_391_p2);
    sensitive << ( bitcast_ln79_2_fu_387_p1 );

    SC_METHOD(thread_xor_ln79_fu_411_p2);
    sensitive << ( bitcast_ln79_fu_408_p1 );

    SC_METHOD(thread_xor_ln83_fu_362_p2);
    sensitive << ( bitcast_ln83_fu_358_p1 );

    SC_METHOD(thread_xor_ln84_fu_376_p2);
    sensitive << ( bitcast_ln84_fu_373_p1 );

    SC_METHOD(thread_xor_ln85_1_fu_439_p2);
    sensitive << ( bitcast_ln85_2_fu_436_p1 );

    SC_METHOD(thread_xor_ln85_fu_425_p2);
    sensitive << ( bitcast_ln85_fu_422_p1 );

    SC_METHOD(thread_zext_ln101_fu_468_p1);
    sensitive << ( lut_reorder_I_q0 );

    SC_METHOD(thread_zext_ln103_fu_474_p1);
    sensitive << ( indexJ_reg_674 );

    SC_METHOD(thread_zext_ln52_fu_295_p1);
    sensitive << ( ap_phi_mux_c_0_phi_fu_206_p4 );

    SC_METHOD(thread_zext_ln53_fu_317_p1);
    sensitive << ( ind2_fu_307_p2 );

    SC_METHOD(thread_zext_ln54_fu_301_p1);
    sensitive << ( ind1_fu_289_p2 );

    SC_METHOD(thread_zext_ln56_fu_323_p1);
    sensitive << ( ind3_fu_312_p2 );

    SC_METHOD(thread_zext_ln98_fu_462_p1);
    sensitive << ( ap_phi_mux_i_0_phi_fu_218_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp0_stage6 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_6_fu_277_p3 );
    sensitive << ( icmp_ln94_fu_450_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage9_subdone );
    sensitive << ( ap_block_pp0_stage6_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp1_stage3_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage4_subdone );
    sensitive << ( ap_block_pp0_stage5_subdone );
    sensitive << ( ap_block_pp0_stage7_subdone );
    sensitive << ( ap_block_pp0_stage8_subdone );
    sensitive << ( ap_block_pp1_stage1_subdone );
    sensitive << ( ap_block_pp1_stage2_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Reorder_fft_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, Real_r_Addr_A, "(port)Real_r_Addr_A");
    sc_trace(mVcdFile, Real_r_EN_A, "(port)Real_r_EN_A");
    sc_trace(mVcdFile, Real_r_WEN_A, "(port)Real_r_WEN_A");
    sc_trace(mVcdFile, Real_r_Din_A, "(port)Real_r_Din_A");
    sc_trace(mVcdFile, Real_r_Dout_A, "(port)Real_r_Dout_A");
    sc_trace(mVcdFile, Real_r_Clk_A, "(port)Real_r_Clk_A");
    sc_trace(mVcdFile, Real_r_Rst_A, "(port)Real_r_Rst_A");
    sc_trace(mVcdFile, Imag_Addr_A, "(port)Imag_Addr_A");
    sc_trace(mVcdFile, Imag_EN_A, "(port)Imag_EN_A");
    sc_trace(mVcdFile, Imag_WEN_A, "(port)Imag_WEN_A");
    sc_trace(mVcdFile, Imag_Din_A, "(port)Imag_Din_A");
    sc_trace(mVcdFile, Imag_Dout_A, "(port)Imag_Dout_A");
    sc_trace(mVcdFile, Imag_Clk_A, "(port)Imag_Clk_A");
    sc_trace(mVcdFile, Imag_Rst_A, "(port)Imag_Rst_A");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, lut_reorder_I_address0, "lut_reorder_I_address0");
    sc_trace(mVcdFile, lut_reorder_I_ce0, "lut_reorder_I_ce0");
    sc_trace(mVcdFile, lut_reorder_I_q0, "lut_reorder_I_q0");
    sc_trace(mVcdFile, lut_reorder_J_address0, "lut_reorder_J_address0");
    sc_trace(mVcdFile, lut_reorder_J_ce0, "lut_reorder_J_ce0");
    sc_trace(mVcdFile, lut_reorder_J_q0, "lut_reorder_J_q0");
    sc_trace(mVcdFile, c_0_reg_202, "c_0_reg_202");
    sc_trace(mVcdFile, i_0_reg_214, "i_0_reg_214");
    sc_trace(mVcdFile, reg_233, "reg_233");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage1_iter1, "ap_block_state13_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage1_iter2, "ap_block_state23_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, tmp_6_reg_479, "tmp_6_reg_479");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage2, "ap_CS_fsm_pp1_stage2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_state32_pp1_stage2_iter0, "ap_block_state32_pp1_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage2_11001, "ap_block_pp1_stage2_11001");
    sc_trace(mVcdFile, icmp_ln94_reg_655, "icmp_ln94_reg_655");
    sc_trace(mVcdFile, reg_240, "reg_240");
    sc_trace(mVcdFile, reg_246, "reg_246");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage2_iter1, "ap_block_state14_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage2_iter2, "ap_block_state24_pp0_stage2_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage4, "ap_CS_fsm_pp0_stage4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage4_iter0, "ap_block_state6_pp0_stage4_iter0");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage4_iter1, "ap_block_state16_pp0_stage4_iter1");
    sc_trace(mVcdFile, ap_block_state26_pp0_stage4_iter2, "ap_block_state26_pp0_stage4_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage4_11001, "ap_block_pp0_stage4_11001");
    sc_trace(mVcdFile, grp_fu_225_p2, "grp_fu_225_p2");
    sc_trace(mVcdFile, reg_251, "reg_251");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage7, "ap_CS_fsm_pp0_stage7");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage7_iter0, "ap_block_state9_pp0_stage7_iter0");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage7_iter1, "ap_block_state19_pp0_stage7_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage7_11001, "ap_block_pp0_stage7_11001");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, tmp_6_reg_479_pp0_iter1_reg, "tmp_6_reg_479_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage6, "ap_CS_fsm_pp0_stage6");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage6_iter0, "ap_block_state8_pp0_stage6_iter0");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage6_iter1, "ap_block_state18_pp0_stage6_iter1");
    sc_trace(mVcdFile, ap_block_state28_pp0_stage6_iter2, "ap_block_state28_pp0_stage6_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage6_11001, "ap_block_pp0_stage6_11001");
    sc_trace(mVcdFile, reg_259, "reg_259");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage8, "ap_CS_fsm_pp0_stage8");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage8_iter0, "ap_block_state10_pp0_stage8_iter0");
    sc_trace(mVcdFile, ap_block_state20_pp0_stage8_iter1, "ap_block_state20_pp0_stage8_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage8_11001, "ap_block_pp0_stage8_11001");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage3_iter0, "ap_block_state5_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage3_iter1, "ap_block_state15_pp0_stage3_iter1");
    sc_trace(mVcdFile, ap_block_state25_pp0_stage3_iter2, "ap_block_state25_pp0_stage3_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, grp_fu_229_p2, "grp_fu_229_p2");
    sc_trace(mVcdFile, reg_265, "reg_265");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage9, "ap_CS_fsm_pp0_stage9");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage9_iter0, "ap_block_state11_pp0_stage9_iter0");
    sc_trace(mVcdFile, ap_block_state21_pp0_stage9_iter1, "ap_block_state21_pp0_stage9_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage9_11001, "ap_block_pp0_stage9_11001");
    sc_trace(mVcdFile, reg_272, "reg_272");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter1, "ap_block_state12_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state22_pp0_stage0_iter2, "ap_block_state22_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, tmp_6_fu_277_p3, "tmp_6_fu_277_p3");
    sc_trace(mVcdFile, tmp_6_reg_479_pp0_iter2_reg, "tmp_6_reg_479_pp0_iter2_reg");
    sc_trace(mVcdFile, trunc_ln44_fu_285_p1, "trunc_ln44_fu_285_p1");
    sc_trace(mVcdFile, trunc_ln44_reg_483, "trunc_ln44_reg_483");
    sc_trace(mVcdFile, Real_addr_reg_489, "Real_addr_reg_489");
    sc_trace(mVcdFile, Real_addr_reg_489_pp0_iter1_reg, "Real_addr_reg_489_pp0_iter1_reg");
    sc_trace(mVcdFile, Real_addr_2_reg_494, "Real_addr_2_reg_494");
    sc_trace(mVcdFile, Real_addr_2_reg_494_pp0_iter1_reg, "Real_addr_2_reg_494_pp0_iter1_reg");
    sc_trace(mVcdFile, Imag_addr_reg_499, "Imag_addr_reg_499");
    sc_trace(mVcdFile, Imag_addr_reg_499_pp0_iter1_reg, "Imag_addr_reg_499_pp0_iter1_reg");
    sc_trace(mVcdFile, Imag_addr_2_reg_504, "Imag_addr_2_reg_504");
    sc_trace(mVcdFile, Imag_addr_2_reg_504_pp0_iter1_reg, "Imag_addr_2_reg_504_pp0_iter1_reg");
    sc_trace(mVcdFile, Real_addr_1_reg_509, "Real_addr_1_reg_509");
    sc_trace(mVcdFile, Real_addr_1_reg_509_pp0_iter1_reg, "Real_addr_1_reg_509_pp0_iter1_reg");
    sc_trace(mVcdFile, Real_addr_3_reg_514, "Real_addr_3_reg_514");
    sc_trace(mVcdFile, Real_addr_3_reg_514_pp0_iter1_reg, "Real_addr_3_reg_514_pp0_iter1_reg");
    sc_trace(mVcdFile, Imag_addr_1_reg_519, "Imag_addr_1_reg_519");
    sc_trace(mVcdFile, Imag_addr_1_reg_519_pp0_iter1_reg, "Imag_addr_1_reg_519_pp0_iter1_reg");
    sc_trace(mVcdFile, Imag_addr_1_reg_519_pp0_iter2_reg, "Imag_addr_1_reg_519_pp0_iter2_reg");
    sc_trace(mVcdFile, Imag_addr_3_reg_524, "Imag_addr_3_reg_524");
    sc_trace(mVcdFile, Imag_addr_3_reg_524_pp0_iter1_reg, "Imag_addr_3_reg_524_pp0_iter1_reg");
    sc_trace(mVcdFile, RE_vec_128_b_reg_529, "RE_vec_128_b_reg_529");
    sc_trace(mVcdFile, Real_load_reg_535, "Real_load_reg_535");
    sc_trace(mVcdFile, IM_vec_128_a_reg_540, "IM_vec_128_a_reg_540");
    sc_trace(mVcdFile, bitcast_ln77_1_fu_338_p1, "bitcast_ln77_1_fu_338_p1");
    sc_trace(mVcdFile, Real_load_1_reg_551, "Real_load_1_reg_551");
    sc_trace(mVcdFile, bitcast_ln78_1_fu_353_p1, "bitcast_ln78_1_fu_353_p1");
    sc_trace(mVcdFile, Imag_load_4_reg_561, "Imag_load_4_reg_561");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage5, "ap_CS_fsm_pp0_stage5");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage5_iter0, "ap_block_state7_pp0_stage5_iter0");
    sc_trace(mVcdFile, ap_block_state17_pp0_stage5_iter1, "ap_block_state17_pp0_stage5_iter1");
    sc_trace(mVcdFile, ap_block_state27_pp0_stage5_iter2, "ap_block_state27_pp0_stage5_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage5_11001, "ap_block_pp0_stage5_11001");
    sc_trace(mVcdFile, Real_load_2_reg_566, "Real_load_2_reg_566");
    sc_trace(mVcdFile, Imag_load_5_reg_571, "Imag_load_5_reg_571");
    sc_trace(mVcdFile, Real_load_3_reg_576, "Real_load_3_reg_576");
    sc_trace(mVcdFile, bitcast_ln83_1_fu_368_p1, "bitcast_ln83_1_fu_368_p1");
    sc_trace(mVcdFile, tmp_1_1_reg_586, "tmp_1_1_reg_586");
    sc_trace(mVcdFile, bitcast_ln84_1_fu_382_p1, "bitcast_ln84_1_fu_382_p1");
    sc_trace(mVcdFile, tmp_3_reg_597, "tmp_3_reg_597");
    sc_trace(mVcdFile, bitcast_ln79_3_fu_397_p1, "bitcast_ln79_3_fu_397_p1");
    sc_trace(mVcdFile, c_fu_402_p2, "c_fu_402_p2");
    sc_trace(mVcdFile, c_reg_608, "c_reg_608");
    sc_trace(mVcdFile, tmp_7_1_reg_613, "tmp_7_1_reg_613");
    sc_trace(mVcdFile, bitcast_ln79_1_fu_417_p1, "bitcast_ln79_1_fu_417_p1");
    sc_trace(mVcdFile, tmp_9_reg_623, "tmp_9_reg_623");
    sc_trace(mVcdFile, tmp_9_1_reg_629, "tmp_9_1_reg_629");
    sc_trace(mVcdFile, bitcast_ln85_1_fu_431_p1, "bitcast_ln85_1_fu_431_p1");
    sc_trace(mVcdFile, tmp_5_3_reg_640, "tmp_5_3_reg_640");
    sc_trace(mVcdFile, tmp_5_2_reg_645, "tmp_5_2_reg_645");
    sc_trace(mVcdFile, bitcast_ln85_3_fu_445_p1, "bitcast_ln85_3_fu_445_p1");
    sc_trace(mVcdFile, icmp_ln94_fu_450_p2, "icmp_ln94_fu_450_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state30_pp1_stage0_iter0, "ap_block_state30_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state34_pp1_stage0_iter1, "ap_block_state34_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, i_fu_456_p2, "i_fu_456_p2");
    sc_trace(mVcdFile, i_reg_659, "i_reg_659");
    sc_trace(mVcdFile, indexJ_reg_674, "indexJ_reg_674");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage1, "ap_CS_fsm_pp1_stage1");
    sc_trace(mVcdFile, ap_block_state31_pp1_stage1_iter0, "ap_block_state31_pp1_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage1_11001, "ap_block_pp1_stage1_11001");
    sc_trace(mVcdFile, Real_addr_4_reg_679, "Real_addr_4_reg_679");
    sc_trace(mVcdFile, Imag_addr_4_reg_684, "Imag_addr_4_reg_684");
    sc_trace(mVcdFile, Real_addr_5_reg_689, "Real_addr_5_reg_689");
    sc_trace(mVcdFile, Imag_addr_5_reg_694, "Imag_addr_5_reg_694");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_block_pp0_stage9_subdone, "ap_block_pp0_stage9_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage6_subdone, "ap_block_pp0_stage6_subdone");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state30, "ap_condition_pp1_exit_iter0_state30");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_state33_pp1_stage3_iter0, "ap_block_state33_pp1_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage3_subdone, "ap_block_pp1_stage3_subdone");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage3, "ap_CS_fsm_pp1_stage3");
    sc_trace(mVcdFile, ap_phi_mux_c_0_phi_fu_206_p4, "ap_phi_mux_c_0_phi_fu_206_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_218_p4, "ap_phi_mux_i_0_phi_fu_218_p4");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, zext_ln52_fu_295_p1, "zext_ln52_fu_295_p1");
    sc_trace(mVcdFile, zext_ln54_fu_301_p1, "zext_ln54_fu_301_p1");
    sc_trace(mVcdFile, zext_ln53_fu_317_p1, "zext_ln53_fu_317_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, zext_ln56_fu_323_p1, "zext_ln56_fu_323_p1");
    sc_trace(mVcdFile, zext_ln98_fu_462_p1, "zext_ln98_fu_462_p1");
    sc_trace(mVcdFile, zext_ln101_fu_468_p1, "zext_ln101_fu_468_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage1, "ap_block_pp1_stage1");
    sc_trace(mVcdFile, zext_ln103_fu_474_p1, "zext_ln103_fu_474_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage2, "ap_block_pp1_stage2");
    sc_trace(mVcdFile, Real_r_Addr_A_orig, "Real_r_Addr_A_orig");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage4, "ap_block_pp0_stage4");
    sc_trace(mVcdFile, ap_block_pp0_stage5, "ap_block_pp0_stage5");
    sc_trace(mVcdFile, ap_block_pp0_stage6, "ap_block_pp0_stage6");
    sc_trace(mVcdFile, ap_block_pp0_stage7, "ap_block_pp0_stage7");
    sc_trace(mVcdFile, ap_block_pp0_stage8, "ap_block_pp0_stage8");
    sc_trace(mVcdFile, ap_block_pp0_stage9, "ap_block_pp0_stage9");
    sc_trace(mVcdFile, ap_block_pp1_stage3_11001, "ap_block_pp1_stage3_11001");
    sc_trace(mVcdFile, ap_block_pp1_stage3, "ap_block_pp1_stage3");
    sc_trace(mVcdFile, Imag_Addr_A_orig, "Imag_Addr_A_orig");
    sc_trace(mVcdFile, grp_fu_225_p0, "grp_fu_225_p0");
    sc_trace(mVcdFile, grp_fu_225_p1, "grp_fu_225_p1");
    sc_trace(mVcdFile, grp_fu_229_p0, "grp_fu_229_p0");
    sc_trace(mVcdFile, grp_fu_229_p1, "grp_fu_229_p1");
    sc_trace(mVcdFile, ind1_fu_289_p2, "ind1_fu_289_p2");
    sc_trace(mVcdFile, ind2_fu_307_p2, "ind2_fu_307_p2");
    sc_trace(mVcdFile, ind3_fu_312_p2, "ind3_fu_312_p2");
    sc_trace(mVcdFile, bitcast_ln77_fu_329_p1, "bitcast_ln77_fu_329_p1");
    sc_trace(mVcdFile, xor_ln77_fu_332_p2, "xor_ln77_fu_332_p2");
    sc_trace(mVcdFile, bitcast_ln78_fu_343_p1, "bitcast_ln78_fu_343_p1");
    sc_trace(mVcdFile, xor_ln78_fu_347_p2, "xor_ln78_fu_347_p2");
    sc_trace(mVcdFile, bitcast_ln83_fu_358_p1, "bitcast_ln83_fu_358_p1");
    sc_trace(mVcdFile, xor_ln83_fu_362_p2, "xor_ln83_fu_362_p2");
    sc_trace(mVcdFile, bitcast_ln84_fu_373_p1, "bitcast_ln84_fu_373_p1");
    sc_trace(mVcdFile, xor_ln84_fu_376_p2, "xor_ln84_fu_376_p2");
    sc_trace(mVcdFile, bitcast_ln79_2_fu_387_p1, "bitcast_ln79_2_fu_387_p1");
    sc_trace(mVcdFile, xor_ln79_1_fu_391_p2, "xor_ln79_1_fu_391_p2");
    sc_trace(mVcdFile, bitcast_ln79_fu_408_p1, "bitcast_ln79_fu_408_p1");
    sc_trace(mVcdFile, xor_ln79_fu_411_p2, "xor_ln79_fu_411_p2");
    sc_trace(mVcdFile, bitcast_ln85_fu_422_p1, "bitcast_ln85_fu_422_p1");
    sc_trace(mVcdFile, xor_ln85_fu_425_p2, "xor_ln85_fu_425_p2");
    sc_trace(mVcdFile, bitcast_ln85_2_fu_436_p1, "bitcast_ln85_2_fu_436_p1");
    sc_trace(mVcdFile, xor_ln85_1_fu_439_p2, "xor_ln85_1_fu_439_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage4_subdone, "ap_block_pp0_stage4_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage5_subdone, "ap_block_pp0_stage5_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage7_subdone, "ap_block_pp0_stage7_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage8_subdone, "ap_block_pp0_stage8_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage1_subdone, "ap_block_pp1_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage2_subdone, "ap_block_pp1_stage2_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
    mHdltvinHandle.open("Reorder_fft.hdltvin.dat");
    mHdltvoutHandle.open("Reorder_fft.hdltvout.dat");
}

Reorder_fft::~Reorder_fft() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete lut_reorder_I_U;
    delete lut_reorder_J_U;
    delete Reorder_fft_AXILiteS_s_axi_U;
    delete Reorder_fft_fadd_dEe_U1;
    delete Reorder_fft_fadd_dEe_U2;
}

void Reorder_fft::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Reorder_fft::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage9_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage9_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage6_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state30.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_block_pp1_stage3_subdone.read(), ap_const_boolean_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read())))) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        c_0_reg_202 = c_reg_608.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c_0_reg_202 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        i_0_reg_214 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln94_reg_655.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        i_0_reg_214 = i_reg_659.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        IM_vec_128_a_reg_540 = Imag_Dout_A.read();
        Real_load_reg_535 = Real_r_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0))) {
        Imag_addr_1_reg_519 =  (sc_lv<10>) (zext_ln56_fu_323_p1.read());
        Imag_addr_3_reg_524 =  (sc_lv<10>) (zext_ln53_fu_317_p1.read());
        Real_addr_1_reg_509 =  (sc_lv<10>) (zext_ln53_fu_317_p1.read());
        Real_addr_3_reg_514 =  (sc_lv<10>) (zext_ln56_fu_323_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        Imag_addr_1_reg_519_pp0_iter1_reg = Imag_addr_1_reg_519.read();
        Imag_addr_1_reg_519_pp0_iter2_reg = Imag_addr_1_reg_519_pp0_iter1_reg.read();
        Imag_addr_3_reg_524_pp0_iter1_reg = Imag_addr_3_reg_524.read();
        Real_addr_1_reg_509_pp0_iter1_reg = Real_addr_1_reg_509.read();
        Real_addr_3_reg_514_pp0_iter1_reg = Real_addr_3_reg_514.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_fu_277_p3.read()))) {
        Imag_addr_2_reg_504 =  (sc_lv<10>) (zext_ln52_fu_295_p1.read());
        Imag_addr_reg_499 =  (sc_lv<10>) (zext_ln54_fu_301_p1.read());
        Real_addr_2_reg_494 =  (sc_lv<10>) (zext_ln54_fu_301_p1.read());
        Real_addr_reg_489 =  (sc_lv<10>) (zext_ln52_fu_295_p1.read());
        trunc_ln44_reg_483 = trunc_ln44_fu_285_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        Imag_addr_2_reg_504_pp0_iter1_reg = Imag_addr_2_reg_504.read();
        Imag_addr_reg_499_pp0_iter1_reg = Imag_addr_reg_499.read();
        Real_addr_2_reg_494_pp0_iter1_reg = Real_addr_2_reg_494.read();
        Real_addr_reg_489_pp0_iter1_reg = Real_addr_reg_489.read();
        tmp_6_reg_479 = ap_phi_mux_c_0_phi_fu_206_p4.read().range(10, 10);
        tmp_6_reg_479_pp0_iter1_reg = tmp_6_reg_479.read();
        tmp_6_reg_479_pp0_iter2_reg = tmp_6_reg_479_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln94_reg_655.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0))) {
        Imag_addr_4_reg_684 =  (sc_lv<10>) (zext_ln101_fu_468_p1.read());
        Real_addr_4_reg_679 =  (sc_lv<10>) (zext_ln101_fu_468_p1.read());
        indexJ_reg_674 = lut_reorder_J_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln94_reg_655.read()))) {
        Imag_addr_5_reg_694 =  (sc_lv<10>) (zext_ln103_fu_474_p1.read());
        Real_addr_5_reg_689 =  (sc_lv<10>) (zext_ln103_fu_474_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0))) {
        Imag_load_4_reg_561 = Imag_Dout_A.read();
        Real_load_2_reg_566 = Real_r_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0))) {
        Imag_load_5_reg_571 = Imag_Dout_A.read();
        Real_load_3_reg_576 = Real_r_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        RE_vec_128_b_reg_529 = Real_r_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0))) {
        Real_load_1_reg_551 = Real_r_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0))) {
        c_reg_608 = c_fu_402_p2.read();
        tmp_3_reg_597 = grp_fu_225_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        i_reg_659 = i_fu_456_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln94_reg_655 = icmp_ln94_fu_450_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln94_reg_655.read())))) {
        reg_233 = Real_r_Dout_A.read();
        reg_240 = Imag_Dout_A.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)))) {
        reg_246 = Imag_Dout_A.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)))) {
        reg_251 = grp_fu_225_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)))) {
        reg_259 = grp_fu_225_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)))) {
        reg_265 = grp_fu_229_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        reg_272 = grp_fu_229_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0))) {
        tmp_1_1_reg_586 = grp_fu_229_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read()))) {
        tmp_5_2_reg_645 = grp_fu_229_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_5_3_reg_640 = grp_fu_229_p2.read();
    }
    if ((esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_7_1_reg_613 = grp_fu_225_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read()))) {
        tmp_9_1_reg_629 = grp_fu_229_p2.read();
        tmp_9_reg_623 = grp_fu_225_p2.read();
    }
}

void Reorder_fft::thread_Imag_Addr_A() {
    Imag_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): Imag_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void Reorder_fft::thread_Imag_Addr_A_orig() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Imag_Addr_A_orig =  (sc_lv<32>) (Imag_addr_5_reg_694.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Imag_Addr_A_orig =  (sc_lv<32>) (Imag_addr_4_reg_684.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        Imag_Addr_A_orig =  (sc_lv<32>) (zext_ln103_fu_474_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        Imag_Addr_A_orig =  (sc_lv<32>) (zext_ln101_fu_468_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        Imag_Addr_A_orig =  (sc_lv<32>) (Imag_addr_1_reg_519_pp0_iter2_reg.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0))) {
        Imag_Addr_A_orig =  (sc_lv<32>) (Imag_addr_3_reg_524_pp0_iter1_reg.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0))) {
        Imag_Addr_A_orig =  (sc_lv<32>) (Imag_addr_reg_499_pp0_iter1_reg.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        Imag_Addr_A_orig =  (sc_lv<32>) (Imag_addr_2_reg_504_pp0_iter1_reg.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        Imag_Addr_A_orig =  (sc_lv<32>) (Imag_addr_1_reg_519.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        Imag_Addr_A_orig =  (sc_lv<32>) (Imag_addr_reg_499.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        Imag_Addr_A_orig =  (sc_lv<32>) (Imag_addr_3_reg_524.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        Imag_Addr_A_orig =  (sc_lv<32>) (Imag_addr_2_reg_504.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        Imag_Addr_A_orig =  (sc_lv<32>) (zext_ln56_fu_323_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        Imag_Addr_A_orig =  (sc_lv<32>) (zext_ln54_fu_301_p1.read());
    } else {
        Imag_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_Imag_Clk_A() {
    Imag_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void Reorder_fft::thread_Imag_Din_A() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Imag_Din_A = reg_240.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Imag_Din_A = Imag_Dout_A.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0))) {
        Imag_Din_A = reg_265.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0)))) {
        Imag_Din_A = reg_272.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        Imag_Din_A = reg_251.read();
    } else {
        Imag_Din_A = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_Imag_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read())))) {
        Imag_EN_A = ap_const_logic_1;
    } else {
        Imag_EN_A = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Imag_Rst_A() {
    Imag_Rst_A = ap_rst_n_inv.read();
}

void Reorder_fft::thread_Imag_WEN_A() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln94_reg_655.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln94_reg_655.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter2_reg.read())))) {
        Imag_WEN_A = ap_const_lv4_F;
    } else {
        Imag_WEN_A = ap_const_lv4_0;
    }
}

void Reorder_fft::thread_Real_r_Addr_A() {
    Real_r_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): Real_r_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void Reorder_fft::thread_Real_r_Addr_A_orig() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (Real_addr_5_reg_689.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (Real_addr_4_reg_679.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (zext_ln103_fu_474_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (zext_ln101_fu_468_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0))) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (Real_addr_3_reg_514_pp0_iter1_reg.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0))) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (Real_addr_1_reg_509_pp0_iter1_reg.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (Real_addr_2_reg_494_pp0_iter1_reg.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (Real_addr_reg_489_pp0_iter1_reg.read());
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0)))) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (Real_addr_3_reg_514.read());
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0)))) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (Real_addr_2_reg_494.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (zext_ln53_fu_317_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (zext_ln52_fu_295_p1.read());
    } else {
        Real_r_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_Real_r_Clk_A() {
    Real_r_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void Reorder_fft::thread_Real_r_Din_A() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Real_r_Din_A = reg_233.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Real_r_Din_A = Real_r_Dout_A.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0))) {
        Real_r_Din_A = tmp_5_3_reg_640.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage8.read(), ap_const_boolean_0))) {
        Real_r_Din_A = tmp_5_2_reg_645.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        Real_r_Din_A = reg_259.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        Real_r_Din_A = reg_251.read();
    } else {
        Real_r_Din_A = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_Real_r_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage4_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage5_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0)))) {
        Real_r_EN_A = ap_const_logic_1;
    } else {
        Real_r_EN_A = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Real_r_Rst_A() {
    Real_r_Rst_A = ap_rst_n_inv.read();
}

void Reorder_fft::thread_Real_r_WEN_A() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage6_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage8.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage8_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln94_reg_655.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage7_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_6_reg_479_pp0_iter1_reg.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage9_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln94_reg_655.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0)))) {
        Real_r_WEN_A = ap_const_lv4_F;
    } else {
        Real_r_WEN_A = ap_const_lv4_0;
    }
}

void Reorder_fft::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Reorder_fft::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void Reorder_fft::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void Reorder_fft::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[4];
}

void Reorder_fft::thread_ap_CS_fsm_pp0_stage4() {
    ap_CS_fsm_pp0_stage4 = ap_CS_fsm.read()[5];
}

void Reorder_fft::thread_ap_CS_fsm_pp0_stage5() {
    ap_CS_fsm_pp0_stage5 = ap_CS_fsm.read()[6];
}

void Reorder_fft::thread_ap_CS_fsm_pp0_stage6() {
    ap_CS_fsm_pp0_stage6 = ap_CS_fsm.read()[7];
}

void Reorder_fft::thread_ap_CS_fsm_pp0_stage7() {
    ap_CS_fsm_pp0_stage7 = ap_CS_fsm.read()[8];
}

void Reorder_fft::thread_ap_CS_fsm_pp0_stage8() {
    ap_CS_fsm_pp0_stage8 = ap_CS_fsm.read()[9];
}

void Reorder_fft::thread_ap_CS_fsm_pp0_stage9() {
    ap_CS_fsm_pp0_stage9 = ap_CS_fsm.read()[10];
}

void Reorder_fft::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[12];
}

void Reorder_fft::thread_ap_CS_fsm_pp1_stage1() {
    ap_CS_fsm_pp1_stage1 = ap_CS_fsm.read()[13];
}

void Reorder_fft::thread_ap_CS_fsm_pp1_stage2() {
    ap_CS_fsm_pp1_stage2 = ap_CS_fsm.read()[14];
}

void Reorder_fft::thread_ap_CS_fsm_pp1_stage3() {
    ap_CS_fsm_pp1_stage3 = ap_CS_fsm.read()[15];
}

void Reorder_fft::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Reorder_fft::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[11];
}

void Reorder_fft::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[16];
}

void Reorder_fft::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage4() {
    ap_block_pp0_stage4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage4_11001() {
    ap_block_pp0_stage4_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage4_subdone() {
    ap_block_pp0_stage4_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage5() {
    ap_block_pp0_stage5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage5_11001() {
    ap_block_pp0_stage5_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage5_subdone() {
    ap_block_pp0_stage5_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage6() {
    ap_block_pp0_stage6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage6_11001() {
    ap_block_pp0_stage6_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage6_subdone() {
    ap_block_pp0_stage6_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage7() {
    ap_block_pp0_stage7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage7_11001() {
    ap_block_pp0_stage7_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage7_subdone() {
    ap_block_pp0_stage7_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage8() {
    ap_block_pp0_stage8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage8_11001() {
    ap_block_pp0_stage8_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage8_subdone() {
    ap_block_pp0_stage8_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage9() {
    ap_block_pp0_stage9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage9_11001() {
    ap_block_pp0_stage9_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage9_subdone() {
    ap_block_pp0_stage9_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage1() {
    ap_block_pp1_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage1_11001() {
    ap_block_pp1_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage1_subdone() {
    ap_block_pp1_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage2() {
    ap_block_pp1_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage2_11001() {
    ap_block_pp1_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage2_subdone() {
    ap_block_pp1_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage3() {
    ap_block_pp1_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage3_11001() {
    ap_block_pp1_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage3_subdone() {
    ap_block_pp1_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state10_pp0_stage8_iter0() {
    ap_block_state10_pp0_stage8_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state11_pp0_stage9_iter0() {
    ap_block_state11_pp0_stage9_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state12_pp0_stage0_iter1() {
    ap_block_state12_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state13_pp0_stage1_iter1() {
    ap_block_state13_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state14_pp0_stage2_iter1() {
    ap_block_state14_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state15_pp0_stage3_iter1() {
    ap_block_state15_pp0_stage3_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state16_pp0_stage4_iter1() {
    ap_block_state16_pp0_stage4_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state17_pp0_stage5_iter1() {
    ap_block_state17_pp0_stage5_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state18_pp0_stage6_iter1() {
    ap_block_state18_pp0_stage6_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state19_pp0_stage7_iter1() {
    ap_block_state19_pp0_stage7_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state20_pp0_stage8_iter1() {
    ap_block_state20_pp0_stage8_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state21_pp0_stage9_iter1() {
    ap_block_state21_pp0_stage9_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state22_pp0_stage0_iter2() {
    ap_block_state22_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state23_pp0_stage1_iter2() {
    ap_block_state23_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state24_pp0_stage2_iter2() {
    ap_block_state24_pp0_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state25_pp0_stage3_iter2() {
    ap_block_state25_pp0_stage3_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state26_pp0_stage4_iter2() {
    ap_block_state26_pp0_stage4_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state27_pp0_stage5_iter2() {
    ap_block_state27_pp0_stage5_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state28_pp0_stage6_iter2() {
    ap_block_state28_pp0_stage6_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state30_pp1_stage0_iter0() {
    ap_block_state30_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state31_pp1_stage1_iter0() {
    ap_block_state31_pp1_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state32_pp1_stage2_iter0() {
    ap_block_state32_pp1_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state33_pp1_stage3_iter0() {
    ap_block_state33_pp1_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state34_pp1_stage0_iter1() {
    ap_block_state34_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state5_pp0_stage3_iter0() {
    ap_block_state5_pp0_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state6_pp0_stage4_iter0() {
    ap_block_state6_pp0_stage4_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state7_pp0_stage5_iter0() {
    ap_block_state7_pp0_stage5_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state8_pp0_stage6_iter0() {
    ap_block_state8_pp0_stage6_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state9_pp0_stage7_iter0() {
    ap_block_state9_pp0_stage7_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(tmp_6_fu_277_p3.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_condition_pp1_exit_iter0_state30() {
    if (esl_seteq<1,1,1>(icmp_ln94_fu_450_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state30 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state30 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Reorder_fft::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void Reorder_fft::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_phi_mux_c_0_phi_fu_206_p4() {
    if ((esl_seteq<1,1,1>(tmp_6_reg_479.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_c_0_phi_fu_206_p4 = c_reg_608.read();
    } else {
        ap_phi_mux_c_0_phi_fu_206_p4 = c_0_reg_202.read();
    }
}

void Reorder_fft::thread_ap_phi_mux_i_0_phi_fu_218_p4() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln94_reg_655.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_218_p4 = i_reg_659.read();
    } else {
        ap_phi_mux_i_0_phi_fu_218_p4 = i_0_reg_214.read();
    }
}

void Reorder_fft::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void Reorder_fft::thread_bitcast_ln77_1_fu_338_p1() {
    bitcast_ln77_1_fu_338_p1 = xor_ln77_fu_332_p2.read();
}

void Reorder_fft::thread_bitcast_ln77_fu_329_p1() {
    bitcast_ln77_fu_329_p1 = RE_vec_128_b_reg_529.read();
}

void Reorder_fft::thread_bitcast_ln78_1_fu_353_p1() {
    bitcast_ln78_1_fu_353_p1 = xor_ln78_fu_347_p2.read();
}

void Reorder_fft::thread_bitcast_ln78_fu_343_p1() {
    bitcast_ln78_fu_343_p1 = reg_246.read();
}

void Reorder_fft::thread_bitcast_ln79_1_fu_417_p1() {
    bitcast_ln79_1_fu_417_p1 = xor_ln79_fu_411_p2.read();
}

void Reorder_fft::thread_bitcast_ln79_2_fu_387_p1() {
    bitcast_ln79_2_fu_387_p1 = reg_259.read();
}

void Reorder_fft::thread_bitcast_ln79_3_fu_397_p1() {
    bitcast_ln79_3_fu_397_p1 = xor_ln79_1_fu_391_p2.read();
}

void Reorder_fft::thread_bitcast_ln79_fu_408_p1() {
    bitcast_ln79_fu_408_p1 = tmp_3_reg_597.read();
}

void Reorder_fft::thread_bitcast_ln83_1_fu_368_p1() {
    bitcast_ln83_1_fu_368_p1 = xor_ln83_fu_362_p2.read();
}

void Reorder_fft::thread_bitcast_ln83_fu_358_p1() {
    bitcast_ln83_fu_358_p1 = reg_246.read();
}

void Reorder_fft::thread_bitcast_ln84_1_fu_382_p1() {
    bitcast_ln84_1_fu_382_p1 = xor_ln84_fu_376_p2.read();
}

void Reorder_fft::thread_bitcast_ln84_fu_373_p1() {
    bitcast_ln84_fu_373_p1 = Real_load_3_reg_576.read();
}

void Reorder_fft::thread_bitcast_ln85_1_fu_431_p1() {
    bitcast_ln85_1_fu_431_p1 = xor_ln85_fu_425_p2.read();
}

void Reorder_fft::thread_bitcast_ln85_2_fu_436_p1() {
    bitcast_ln85_2_fu_436_p1 = tmp_9_reg_623.read();
}

void Reorder_fft::thread_bitcast_ln85_3_fu_445_p1() {
    bitcast_ln85_3_fu_445_p1 = xor_ln85_1_fu_439_p2.read();
}

void Reorder_fft::thread_bitcast_ln85_fu_422_p1() {
    bitcast_ln85_fu_422_p1 = tmp_9_1_reg_629.read();
}

void Reorder_fft::thread_c_fu_402_p2() {
    c_fu_402_p2 = (!ap_const_lv11_4.is_01() || !c_0_reg_202.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_4) + sc_biguint<11>(c_0_reg_202.read()));
}

void Reorder_fft::thread_grp_fu_225_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_225_p0 = tmp_9_reg_623.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_225_p0 = tmp_3_reg_597.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0))) {
        grp_fu_225_p0 = reg_259.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        grp_fu_225_p0 = Imag_load_5_reg_571.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        grp_fu_225_p0 = bitcast_ln83_1_fu_368_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        grp_fu_225_p0 = Real_load_1_reg_551.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        grp_fu_225_p0 = bitcast_ln78_1_fu_353_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_225_p0 = RE_vec_128_b_reg_529.read();
    } else {
        grp_fu_225_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_grp_fu_225_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_225_p1 = reg_265.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_225_p1 = reg_251.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0))) {
        grp_fu_225_p1 = tmp_1_1_reg_586.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        grp_fu_225_p1 = Imag_load_4_reg_561.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        grp_fu_225_p1 = IM_vec_128_a_reg_540.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        grp_fu_225_p1 = Real_load_reg_535.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        grp_fu_225_p1 = reg_240.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_225_p1 = reg_233.read();
    } else {
        grp_fu_225_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_grp_fu_229_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0))) {
        grp_fu_229_p0 = tmp_9_1_reg_629.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        grp_fu_229_p0 = bitcast_ln85_3_fu_445_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_229_p0 = bitcast_ln85_1_fu_431_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_229_p0 = bitcast_ln79_1_fu_417_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0))) {
        grp_fu_229_p0 = bitcast_ln79_3_fu_397_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        grp_fu_229_p0 = bitcast_ln84_1_fu_382_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        grp_fu_229_p0 = reg_246.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_229_p0 = bitcast_ln77_1_fu_338_p1.read();
    } else {
        grp_fu_229_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_grp_fu_229_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage4.read(), ap_const_boolean_0))) {
        grp_fu_229_p1 = reg_265.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage6.read(), ap_const_boolean_0)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)))) {
        grp_fu_229_p1 = tmp_7_1_reg_613.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_229_p1 = reg_251.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage9.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage9.read(), ap_const_boolean_0))) {
        grp_fu_229_p1 = tmp_1_1_reg_586.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage7.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage7.read(), ap_const_boolean_0))) {
        grp_fu_229_p1 = Real_load_2_reg_566.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage5.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage5.read(), ap_const_boolean_0))) {
        grp_fu_229_p1 = IM_vec_128_a_reg_540.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0))) {
        grp_fu_229_p1 = reg_233.read();
    } else {
        grp_fu_229_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_i_fu_456_p2() {
    i_fu_456_p2 = (!ap_phi_mux_i_0_phi_fu_218_p4.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(ap_phi_mux_i_0_phi_fu_218_p4.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void Reorder_fft::thread_icmp_ln94_fu_450_p2() {
    icmp_ln94_fu_450_p2 = (!ap_phi_mux_i_0_phi_fu_218_p4.read().is_01() || !ap_const_lv9_1E0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_218_p4.read() == ap_const_lv9_1E0);
}

void Reorder_fft::thread_ind1_fu_289_p2() {
    ind1_fu_289_p2 = (trunc_ln44_fu_285_p1.read() | ap_const_lv10_1);
}

void Reorder_fft::thread_ind2_fu_307_p2() {
    ind2_fu_307_p2 = (trunc_ln44_reg_483.read() | ap_const_lv10_2);
}

void Reorder_fft::thread_ind3_fu_312_p2() {
    ind3_fu_312_p2 = (trunc_ln44_reg_483.read() | ap_const_lv10_3);
}

void Reorder_fft::thread_lut_reorder_I_address0() {
    lut_reorder_I_address0 =  (sc_lv<9>) (zext_ln98_fu_462_p1.read());
}

void Reorder_fft::thread_lut_reorder_I_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        lut_reorder_I_ce0 = ap_const_logic_1;
    } else {
        lut_reorder_I_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_lut_reorder_J_address0() {
    lut_reorder_J_address0 =  (sc_lv<9>) (zext_ln98_fu_462_p1.read());
}

void Reorder_fft::thread_lut_reorder_J_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        lut_reorder_J_ce0 = ap_const_logic_1;
    } else {
        lut_reorder_J_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_tmp_6_fu_277_p3() {
    tmp_6_fu_277_p3 = ap_phi_mux_c_0_phi_fu_206_p4.read().range(10, 10);
}

void Reorder_fft::thread_trunc_ln44_fu_285_p1() {
    trunc_ln44_fu_285_p1 = ap_phi_mux_c_0_phi_fu_206_p4.read().range(10-1, 0);
}

void Reorder_fft::thread_xor_ln77_fu_332_p2() {
    xor_ln77_fu_332_p2 = (bitcast_ln77_fu_329_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_xor_ln78_fu_347_p2() {
    xor_ln78_fu_347_p2 = (bitcast_ln78_fu_343_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_xor_ln79_1_fu_391_p2() {
    xor_ln79_1_fu_391_p2 = (bitcast_ln79_2_fu_387_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_xor_ln79_fu_411_p2() {
    xor_ln79_fu_411_p2 = (bitcast_ln79_fu_408_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_xor_ln83_fu_362_p2() {
    xor_ln83_fu_362_p2 = (bitcast_ln83_fu_358_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_xor_ln84_fu_376_p2() {
    xor_ln84_fu_376_p2 = (bitcast_ln84_fu_373_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_xor_ln85_1_fu_439_p2() {
    xor_ln85_1_fu_439_p2 = (bitcast_ln85_2_fu_436_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_xor_ln85_fu_425_p2() {
    xor_ln85_fu_425_p2 = (bitcast_ln85_fu_422_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_zext_ln101_fu_468_p1() {
    zext_ln101_fu_468_p1 = esl_zext<64,10>(lut_reorder_I_q0.read());
}

void Reorder_fft::thread_zext_ln103_fu_474_p1() {
    zext_ln103_fu_474_p1 = esl_zext<64,10>(indexJ_reg_674.read());
}

void Reorder_fft::thread_zext_ln52_fu_295_p1() {
    zext_ln52_fu_295_p1 = esl_zext<64,11>(ap_phi_mux_c_0_phi_fu_206_p4.read());
}

void Reorder_fft::thread_zext_ln53_fu_317_p1() {
    zext_ln53_fu_317_p1 = esl_zext<64,10>(ind2_fu_307_p2.read());
}

void Reorder_fft::thread_zext_ln54_fu_301_p1() {
    zext_ln54_fu_301_p1 = esl_zext<64,10>(ind1_fu_289_p2.read());
}

void Reorder_fft::thread_zext_ln56_fu_323_p1() {
    zext_ln56_fu_323_p1 = esl_zext<64,10>(ind3_fu_312_p2.read());
}

void Reorder_fft::thread_zext_ln98_fu_462_p1() {
    zext_ln98_fu_462_p1 = esl_zext<64,9>(ap_phi_mux_i_0_phi_fu_218_p4.read());
}

void Reorder_fft::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_6_fu_277_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_6_fu_277_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state29;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage4_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage5_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage6_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage6.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage6_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state29;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage7_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            }
            break;
        case 512 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage8_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            }
            break;
        case 1024 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage9_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 4096 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln94_fu_450_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln94_fu_450_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state35;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 8192 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            }
            break;
        case 16384 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            }
            break;
        case 32768 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

void Reorder_fft::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"Real_r_Addr_A\" :  \"" << Real_r_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_r_EN_A\" :  \"" << Real_r_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_r_WEN_A\" :  \"" << Real_r_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_r_Din_A\" :  \"" << Real_r_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Real_r_Dout_A\" :  \"" << Real_r_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_r_Clk_A\" :  \"" << Real_r_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_r_Rst_A\" :  \"" << Real_r_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_Addr_A\" :  \"" << Imag_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_EN_A\" :  \"" << Imag_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_WEN_A\" :  \"" << Imag_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_Din_A\" :  \"" << Imag_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Imag_Dout_A\" :  \"" << Imag_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_Clk_A\" :  \"" << Imag_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_Rst_A\" :  \"" << Imag_Rst_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

