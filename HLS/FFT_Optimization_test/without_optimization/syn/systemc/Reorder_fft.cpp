// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Reorder_fft.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Reorder_fft::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Reorder_fft::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<32> Reorder_fft::ap_ST_fsm_state1 = "1";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state2 = "10";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state3 = "100";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state4 = "1000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state5 = "10000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state6 = "100000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state7 = "1000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<32> Reorder_fft::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<32> Reorder_fft::ap_const_lv32_0 = "00000000000000000000000000000000";
const int Reorder_fft::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> Reorder_fft::ap_const_lv32_2 = "10";
const sc_lv<32> Reorder_fft::ap_const_lv32_1D = "11101";
const sc_lv<32> Reorder_fft::ap_const_lv32_B = "1011";
const sc_lv<32> Reorder_fft::ap_const_lv32_14 = "10100";
const sc_lv<32> Reorder_fft::ap_const_lv32_10 = "10000";
const sc_lv<32> Reorder_fft::ap_const_lv32_19 = "11001";
const sc_lv<32> Reorder_fft::ap_const_lv32_1 = "1";
const sc_lv<1> Reorder_fft::ap_const_lv1_0 = "0";
const sc_lv<32> Reorder_fft::ap_const_lv32_3 = "11";
const sc_lv<32> Reorder_fft::ap_const_lv32_4 = "100";
const sc_lv<32> Reorder_fft::ap_const_lv32_5 = "101";
const sc_lv<32> Reorder_fft::ap_const_lv32_6 = "110";
const sc_lv<32> Reorder_fft::ap_const_lv32_7 = "111";
const sc_lv<32> Reorder_fft::ap_const_lv32_8 = "1000";
const sc_lv<1> Reorder_fft::ap_const_lv1_1 = "1";
const sc_lv<32> Reorder_fft::ap_const_lv32_11 = "10001";
const sc_lv<32> Reorder_fft::ap_const_lv32_1B = "11011";
const sc_lv<32> Reorder_fft::ap_const_lv32_1C = "11100";
const sc_lv<11> Reorder_fft::ap_const_lv11_0 = "00000000000";
const sc_lv<3> Reorder_fft::ap_const_lv3_0 = "000";
const sc_lv<32> Reorder_fft::ap_const_lv32_1A = "11010";
const sc_lv<32> Reorder_fft::ap_const_lv32_1F = "11111";
const sc_lv<9> Reorder_fft::ap_const_lv9_0 = "000000000";
const sc_lv<4> Reorder_fft::ap_const_lv4_0 = "0000";
const sc_lv<4> Reorder_fft::ap_const_lv4_F = "1111";
const sc_lv<32> Reorder_fft::ap_const_lv32_1E = "11110";
const sc_lv<32> Reorder_fft::ap_const_lv32_C = "1100";
const sc_lv<32> Reorder_fft::ap_const_lv32_15 = "10101";
const sc_lv<32> Reorder_fft::ap_const_lv32_A = "1010";
const sc_lv<10> Reorder_fft::ap_const_lv10_1 = "1";
const sc_lv<10> Reorder_fft::ap_const_lv10_2 = "10";
const sc_lv<10> Reorder_fft::ap_const_lv10_3 = "11";
const sc_lv<3> Reorder_fft::ap_const_lv3_4 = "100";
const sc_lv<3> Reorder_fft::ap_const_lv3_1 = "1";
const sc_lv<32> Reorder_fft::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> Reorder_fft::ap_const_lv32_BF800000 = "10111111100000000000000000000000";
const sc_lv<11> Reorder_fft::ap_const_lv11_4 = "100";
const sc_lv<9> Reorder_fft::ap_const_lv9_1E0 = "111100000";
const sc_lv<9> Reorder_fft::ap_const_lv9_1 = "1";
const bool Reorder_fft::ap_const_boolean_1 = true;

Reorder_fft::Reorder_fft(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lut_reorder_I_U = new Reorder_fft_lut_rbkb("lut_reorder_I_U");
    lut_reorder_I_U->clk(ap_clk);
    lut_reorder_I_U->reset(ap_rst_n_inv);
    lut_reorder_I_U->address0(lut_reorder_I_address0);
    lut_reorder_I_U->ce0(lut_reorder_I_ce0);
    lut_reorder_I_U->q0(lut_reorder_I_q0);
    lut_reorder_J_U = new Reorder_fft_lut_rcud("lut_reorder_J_U");
    lut_reorder_J_U->clk(ap_clk);
    lut_reorder_J_U->reset(ap_rst_n_inv);
    lut_reorder_J_U->address0(lut_reorder_J_address0);
    lut_reorder_J_U->ce0(lut_reorder_J_ce0);
    lut_reorder_J_U->q0(lut_reorder_J_q0);
    Reorder_fft_AXILiteS_s_axi_U = new Reorder_fft_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("Reorder_fft_AXILiteS_s_axi_U");
    Reorder_fft_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    Reorder_fft_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    Reorder_fft_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    Reorder_fft_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    Reorder_fft_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    Reorder_fft_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    Reorder_fft_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    Reorder_fft_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    Reorder_fft_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    Reorder_fft_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    Reorder_fft_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    Reorder_fft_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    Reorder_fft_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    Reorder_fft_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    Reorder_fft_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    Reorder_fft_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    Reorder_fft_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    Reorder_fft_AXILiteS_s_axi_U->ACLK(ap_clk);
    Reorder_fft_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    Reorder_fft_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    Reorder_fft_AXILiteS_s_axi_U->ap_start(ap_start);
    Reorder_fft_AXILiteS_s_axi_U->interrupt(interrupt);
    Reorder_fft_AXILiteS_s_axi_U->ap_ready(ap_ready);
    Reorder_fft_AXILiteS_s_axi_U->ap_done(ap_done);
    Reorder_fft_AXILiteS_s_axi_U->ap_idle(ap_idle);
    Reorder_fft_fadd_dEe_U1 = new Reorder_fft_fadd_dEe<1,5,32,32,32>("Reorder_fft_fadd_dEe_U1");
    Reorder_fft_fadd_dEe_U1->clk(ap_clk);
    Reorder_fft_fadd_dEe_U1->reset(ap_rst_n_inv);
    Reorder_fft_fadd_dEe_U1->din0(reg_301);
    Reorder_fft_fadd_dEe_U1->din1(grp_fu_258_p1);
    Reorder_fft_fadd_dEe_U1->ce(ap_var_for_const0);
    Reorder_fft_fadd_dEe_U1->dout(grp_fu_258_p2);
    Reorder_fft_fadd_dEe_U2 = new Reorder_fft_fadd_dEe<1,5,32,32,32>("Reorder_fft_fadd_dEe_U2");
    Reorder_fft_fadd_dEe_U2->clk(ap_clk);
    Reorder_fft_fadd_dEe_U2->reset(ap_rst_n_inv);
    Reorder_fft_fadd_dEe_U2->din0(reg_306);
    Reorder_fft_fadd_dEe_U2->din1(grp_fu_262_p1);
    Reorder_fft_fadd_dEe_U2->ce(ap_var_for_const0);
    Reorder_fft_fadd_dEe_U2->dout(grp_fu_262_p2);
    Reorder_fft_fadd_dEe_U3 = new Reorder_fft_fadd_dEe<1,5,32,32,32>("Reorder_fft_fadd_dEe_U3");
    Reorder_fft_fadd_dEe_U3->clk(ap_clk);
    Reorder_fft_fadd_dEe_U3->reset(ap_rst_n_inv);
    Reorder_fft_fadd_dEe_U3->din0(tmp_6_reg_677);
    Reorder_fft_fadd_dEe_U3->din1(IM_vec_128_a_reg_585);
    Reorder_fft_fadd_dEe_U3->ce(ap_var_for_const0);
    Reorder_fft_fadd_dEe_U3->dout(grp_fu_266_p2);
    Reorder_fft_fadd_dEe_U4 = new Reorder_fft_fadd_dEe<1,5,32,32,32>("Reorder_fft_fadd_dEe_U4");
    Reorder_fft_fadd_dEe_U4->clk(ap_clk);
    Reorder_fft_fadd_dEe_U4->reset(ap_rst_n_inv);
    Reorder_fft_fadd_dEe_U4->din0(tmp_8_reg_682);
    Reorder_fft_fadd_dEe_U4->din1(select_ln83_1_reg_662);
    Reorder_fft_fadd_dEe_U4->ce(ap_var_for_const0);
    Reorder_fft_fadd_dEe_U4->dout(grp_fu_270_p2);
    Reorder_fft_fmul_eOg_U5 = new Reorder_fft_fmul_eOg<1,4,32,32,32>("Reorder_fft_fmul_eOg_U5");
    Reorder_fft_fmul_eOg_U5->clk(ap_clk);
    Reorder_fft_fmul_eOg_U5->reset(ap_rst_n_inv);
    Reorder_fft_fmul_eOg_U5->din0(grp_fu_274_p0);
    Reorder_fft_fmul_eOg_U5->din1(grp_fu_274_p1);
    Reorder_fft_fmul_eOg_U5->ce(ap_var_for_const0);
    Reorder_fft_fmul_eOg_U5->dout(grp_fu_274_p2);
    Reorder_fft_fmul_eOg_U6 = new Reorder_fft_fmul_eOg<1,4,32,32,32>("Reorder_fft_fmul_eOg_U6");
    Reorder_fft_fmul_eOg_U6->clk(ap_clk);
    Reorder_fft_fmul_eOg_U6->reset(ap_rst_n_inv);
    Reorder_fft_fmul_eOg_U6->din0(grp_fu_278_p0);
    Reorder_fft_fmul_eOg_U6->din1(grp_fu_278_p1);
    Reorder_fft_fmul_eOg_U6->ce(ap_var_for_const0);
    Reorder_fft_fmul_eOg_U6->dout(grp_fu_278_p2);
    Reorder_fft_fmul_eOg_U7 = new Reorder_fft_fmul_eOg<1,4,32,32,32>("Reorder_fft_fmul_eOg_U7");
    Reorder_fft_fmul_eOg_U7->clk(ap_clk);
    Reorder_fft_fmul_eOg_U7->reset(ap_rst_n_inv);
    Reorder_fft_fmul_eOg_U7->din0(tmp_11_fu_393_p6);
    Reorder_fft_fmul_eOg_U7->din1(IM_vec_128_b_reg_600);
    Reorder_fft_fmul_eOg_U7->ce(ap_var_for_const0);
    Reorder_fft_fmul_eOg_U7->dout(grp_fu_282_p2);
    Reorder_fft_fmul_eOg_U8 = new Reorder_fft_fmul_eOg<1,4,32,32,32>("Reorder_fft_fmul_eOg_U8");
    Reorder_fft_fmul_eOg_U8->clk(ap_clk);
    Reorder_fft_fmul_eOg_U8->reset(ap_rst_n_inv);
    Reorder_fft_fmul_eOg_U8->din0(tmp_11_fu_393_p6);
    Reorder_fft_fmul_eOg_U8->din1(grp_fu_286_p1);
    Reorder_fft_fmul_eOg_U8->ce(ap_var_for_const0);
    Reorder_fft_fmul_eOg_U8->dout(grp_fu_286_p2);
    Reorder_fft_mux_4fYi_U9 = new Reorder_fft_mux_4fYi<1,1,32,32,32,32,2,32>("Reorder_fft_mux_4fYi_U9");
    Reorder_fft_mux_4fYi_U9->din0(ap_var_for_const1);
    Reorder_fft_mux_4fYi_U9->din1(ap_var_for_const2);
    Reorder_fft_mux_4fYi_U9->din2(ap_var_for_const1);
    Reorder_fft_mux_4fYi_U9->din3(ap_var_for_const2);
    Reorder_fft_mux_4fYi_U9->din4(tmp_11_fu_393_p5);
    Reorder_fft_mux_4fYi_U9->dout(tmp_11_fu_393_p6);
    Reorder_fft_mux_4fYi_U10 = new Reorder_fft_mux_4fYi<1,1,32,32,32,32,2,32>("Reorder_fft_mux_4fYi_U10");
    Reorder_fft_mux_4fYi_U10->din0(ap_var_for_const1);
    Reorder_fft_mux_4fYi_U10->din1(ap_var_for_const1);
    Reorder_fft_mux_4fYi_U10->din2(ap_var_for_const2);
    Reorder_fft_mux_4fYi_U10->din3(ap_var_for_const2);
    Reorder_fft_mux_4fYi_U10->din4(trunc_ln76_reg_633);
    Reorder_fft_mux_4fYi_U10->dout(tmp_12_fu_454_p6);
    Reorder_fft_mux_4fYi_U11 = new Reorder_fft_mux_4fYi<1,1,32,32,32,32,2,32>("Reorder_fft_mux_4fYi_U11");
    Reorder_fft_mux_4fYi_U11->din0(ap_var_for_const1);
    Reorder_fft_mux_4fYi_U11->din1(ap_var_for_const2);
    Reorder_fft_mux_4fYi_U11->din2(ap_var_for_const2);
    Reorder_fft_mux_4fYi_U11->din3(ap_var_for_const1);
    Reorder_fft_mux_4fYi_U11->din4(trunc_ln76_reg_633);
    Reorder_fft_mux_4fYi_U11->dout(tmp_13_fu_468_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Imag_Addr_A);
    sensitive << ( Imag_Addr_A_orig );

    SC_METHOD(thread_Imag_Addr_A_orig);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln50_reg_525 );
    sensitive << ( Imag_addr_reg_540 );
    sensitive << ( zext_ln51_reg_545 );
    sensitive << ( Imag_addr_1_reg_560 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( Imag_addr_4_reg_735 );
    sensitive << ( Imag_addr_5_reg_745 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( zext_ln52_fu_346_p1 );
    sensitive << ( zext_ln54_fu_367_p1 );
    sensitive << ( zext_ln86_fu_482_p1 );
    sensitive << ( zext_ln100_fu_505_p1 );
    sensitive << ( zext_ln102_fu_511_p1 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_Imag_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_Imag_Din_A);
    sensitive << ( Imag_Dout_A );
    sensitive << ( reg_296 );
    sensitive << ( reg_317 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_Imag_EN_A);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_Imag_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_Imag_WEN_A);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_Real_r_Addr_A);
    sensitive << ( Real_r_Addr_A_orig );

    SC_METHOD(thread_Real_r_Addr_A_orig);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln50_fu_341_p1 );
    sensitive << ( Real_addr_2_reg_535 );
    sensitive << ( zext_ln51_fu_362_p1 );
    sensitive << ( Real_addr_3_reg_555 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( Real_addr_4_reg_730 );
    sensitive << ( Real_addr_5_reg_740 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( zext_ln86_fu_482_p1 );
    sensitive << ( zext_ln100_fu_505_p1 );
    sensitive << ( zext_ln102_fu_511_p1 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_Real_r_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_Real_r_Din_A);
    sensitive << ( Real_r_Dout_A );
    sensitive << ( reg_290 );
    sensitive << ( reg_311 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_Real_r_EN_A);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_Real_r_Rst_A);
    sensitive << ( ap_rst_n_inv );

    SC_METHOD(thread_Real_r_WEN_A);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state31 );

    SC_METHOD(thread_add_ln86_fu_442_p2);
    sensitive << ( c_0_reg_224 );
    sensitive << ( zext_ln76_fu_385_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( icmp_ln93_fu_487_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( icmp_ln93_fu_487_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_c_aux_fu_379_p2);
    sensitive << ( c_aux_0_reg_236 );

    SC_METHOD(thread_c_fu_448_p2);
    sensitive << ( c_0_reg_224 );

    SC_METHOD(thread_grp_fu_258_p1);
    sensitive << ( reg_290 );
    sensitive << ( reg_311 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_grp_fu_262_p1);
    sensitive << ( select_ln77_1_reg_652 );
    sensitive << ( tmp_7_reg_687 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_grp_fu_274_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_11_fu_393_p6 );
    sensitive << ( tmp_12_fu_454_p6 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_274_p1);
    sensitive << ( reg_317 );
    sensitive << ( RE_vec_128_b_reg_565 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_278_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_11_fu_393_p6 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( tmp_13_fu_468_p6 );

    SC_METHOD(thread_grp_fu_278_p1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( select_ln77_fu_415_p3 );
    sensitive << ( tmp_9_reg_692 );
    sensitive << ( ap_CS_fsm_state18 );

    SC_METHOD(thread_grp_fu_286_p1);
    sensitive << ( IM_vec_128_d_0_reg_615 );
    sensitive << ( IM_vec_128_d_1_reg_620 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( trunc_ln77_fu_411_p1 );

    SC_METHOD(thread_i_fu_493_p2);
    sensitive << ( i_0_reg_247 );

    SC_METHOD(thread_icmp_ln68_fu_373_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( c_aux_0_reg_236 );

    SC_METHOD(thread_icmp_ln93_fu_487_p2);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( i_0_reg_247 );

    SC_METHOD(thread_ind1_fu_335_p2);
    sensitive << ( trunc_ln42_fu_331_p1 );

    SC_METHOD(thread_ind2_fu_352_p2);
    sensitive << ( trunc_ln42_reg_519 );

    SC_METHOD(thread_ind3_fu_357_p2);
    sensitive << ( trunc_ln42_reg_519 );

    SC_METHOD(thread_lut_reorder_I_address0);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( zext_ln97_fu_499_p1 );

    SC_METHOD(thread_lut_reorder_I_ce0);
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_lut_reorder_J_address0);
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( zext_ln97_fu_499_p1 );

    SC_METHOD(thread_lut_reorder_J_ce0);
    sensitive << ( ap_CS_fsm_state28 );

    SC_METHOD(thread_select_ln77_1_fu_422_p3);
    sensitive << ( reg_296 );
    sensitive << ( RE_vec_128_c_0_reg_580 );
    sensitive << ( trunc_ln77_fu_411_p1 );

    SC_METHOD(thread_select_ln77_fu_415_p3);
    sensitive << ( RE_vec_128_d_1_reg_570 );
    sensitive << ( RE_vec_128_d_0_reg_595 );
    sensitive << ( trunc_ln77_fu_411_p1 );

    SC_METHOD(thread_select_ln83_1_fu_436_p3);
    sensitive << ( IM_vec_128_c_0_reg_605 );
    sensitive << ( IM_vec_128_c_1_reg_610 );
    sensitive << ( trunc_ln77_fu_411_p1 );

    SC_METHOD(thread_tmp_11_fu_393_p5);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( c_aux_0_reg_236 );

    SC_METHOD(thread_tmp_14_fu_323_p3);
    sensitive << ( c_0_reg_224 );

    SC_METHOD(thread_trunc_ln42_fu_331_p1);
    sensitive << ( c_0_reg_224 );

    SC_METHOD(thread_trunc_ln76_fu_389_p1);
    sensitive << ( c_aux_0_reg_236 );

    SC_METHOD(thread_trunc_ln77_fu_411_p1);
    sensitive << ( c_aux_0_reg_236 );

    SC_METHOD(thread_zext_ln100_fu_505_p1);
    sensitive << ( lut_reorder_I_q0 );

    SC_METHOD(thread_zext_ln102_fu_511_p1);
    sensitive << ( indexJ_reg_725 );

    SC_METHOD(thread_zext_ln50_fu_341_p1);
    sensitive << ( c_0_reg_224 );

    SC_METHOD(thread_zext_ln51_fu_362_p1);
    sensitive << ( ind2_fu_352_p2 );

    SC_METHOD(thread_zext_ln52_fu_346_p1);
    sensitive << ( ind1_fu_335_p2 );

    SC_METHOD(thread_zext_ln54_fu_367_p1);
    sensitive << ( ind3_fu_357_p2 );

    SC_METHOD(thread_zext_ln76_fu_385_p1);
    sensitive << ( c_aux_0_reg_236 );

    SC_METHOD(thread_zext_ln86_fu_482_p1);
    sensitive << ( add_ln86_reg_667 );

    SC_METHOD(thread_zext_ln97_fu_499_p1);
    sensitive << ( i_0_reg_247 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_14_fu_323_p3 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln68_fu_373_p2 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( icmp_ln93_fu_487_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "00000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Reorder_fft_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, Real_r_Addr_A, "(port)Real_r_Addr_A");
    sc_trace(mVcdFile, Real_r_EN_A, "(port)Real_r_EN_A");
    sc_trace(mVcdFile, Real_r_WEN_A, "(port)Real_r_WEN_A");
    sc_trace(mVcdFile, Real_r_Din_A, "(port)Real_r_Din_A");
    sc_trace(mVcdFile, Real_r_Dout_A, "(port)Real_r_Dout_A");
    sc_trace(mVcdFile, Real_r_Clk_A, "(port)Real_r_Clk_A");
    sc_trace(mVcdFile, Real_r_Rst_A, "(port)Real_r_Rst_A");
    sc_trace(mVcdFile, Imag_Addr_A, "(port)Imag_Addr_A");
    sc_trace(mVcdFile, Imag_EN_A, "(port)Imag_EN_A");
    sc_trace(mVcdFile, Imag_WEN_A, "(port)Imag_WEN_A");
    sc_trace(mVcdFile, Imag_Din_A, "(port)Imag_Din_A");
    sc_trace(mVcdFile, Imag_Dout_A, "(port)Imag_Dout_A");
    sc_trace(mVcdFile, Imag_Clk_A, "(port)Imag_Clk_A");
    sc_trace(mVcdFile, Imag_Rst_A, "(port)Imag_Rst_A");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, lut_reorder_I_address0, "lut_reorder_I_address0");
    sc_trace(mVcdFile, lut_reorder_I_ce0, "lut_reorder_I_ce0");
    sc_trace(mVcdFile, lut_reorder_I_q0, "lut_reorder_I_q0");
    sc_trace(mVcdFile, lut_reorder_J_address0, "lut_reorder_J_address0");
    sc_trace(mVcdFile, lut_reorder_J_ce0, "lut_reorder_J_ce0");
    sc_trace(mVcdFile, lut_reorder_J_q0, "lut_reorder_J_q0");
    sc_trace(mVcdFile, reg_290, "reg_290");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, reg_296, "reg_296");
    sc_trace(mVcdFile, grp_fu_274_p2, "grp_fu_274_p2");
    sc_trace(mVcdFile, reg_301, "reg_301");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, grp_fu_278_p2, "grp_fu_278_p2");
    sc_trace(mVcdFile, reg_306, "reg_306");
    sc_trace(mVcdFile, grp_fu_258_p2, "grp_fu_258_p2");
    sc_trace(mVcdFile, reg_311, "reg_311");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, grp_fu_262_p2, "grp_fu_262_p2");
    sc_trace(mVcdFile, reg_317, "reg_317");
    sc_trace(mVcdFile, trunc_ln42_fu_331_p1, "trunc_ln42_fu_331_p1");
    sc_trace(mVcdFile, trunc_ln42_reg_519, "trunc_ln42_reg_519");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_14_fu_323_p3, "tmp_14_fu_323_p3");
    sc_trace(mVcdFile, zext_ln50_fu_341_p1, "zext_ln50_fu_341_p1");
    sc_trace(mVcdFile, zext_ln50_reg_525, "zext_ln50_reg_525");
    sc_trace(mVcdFile, Real_addr_2_reg_535, "Real_addr_2_reg_535");
    sc_trace(mVcdFile, Imag_addr_reg_540, "Imag_addr_reg_540");
    sc_trace(mVcdFile, zext_ln51_fu_362_p1, "zext_ln51_fu_362_p1");
    sc_trace(mVcdFile, zext_ln51_reg_545, "zext_ln51_reg_545");
    sc_trace(mVcdFile, Real_addr_3_reg_555, "Real_addr_3_reg_555");
    sc_trace(mVcdFile, Imag_addr_1_reg_560, "Imag_addr_1_reg_560");
    sc_trace(mVcdFile, RE_vec_128_b_reg_565, "RE_vec_128_b_reg_565");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, RE_vec_128_d_1_reg_570, "RE_vec_128_d_1_reg_570");
    sc_trace(mVcdFile, RE_vec_128_c_0_reg_580, "RE_vec_128_c_0_reg_580");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, IM_vec_128_a_reg_585, "IM_vec_128_a_reg_585");
    sc_trace(mVcdFile, RE_vec_128_d_0_reg_595, "RE_vec_128_d_0_reg_595");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, IM_vec_128_b_reg_600, "IM_vec_128_b_reg_600");
    sc_trace(mVcdFile, IM_vec_128_c_0_reg_605, "IM_vec_128_c_0_reg_605");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, IM_vec_128_c_1_reg_610, "IM_vec_128_c_1_reg_610");
    sc_trace(mVcdFile, IM_vec_128_d_0_reg_615, "IM_vec_128_d_0_reg_615");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, IM_vec_128_d_1_reg_620, "IM_vec_128_d_1_reg_620");
    sc_trace(mVcdFile, c_aux_fu_379_p2, "c_aux_fu_379_p2");
    sc_trace(mVcdFile, c_aux_reg_628, "c_aux_reg_628");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, trunc_ln76_fu_389_p1, "trunc_ln76_fu_389_p1");
    sc_trace(mVcdFile, trunc_ln76_reg_633, "trunc_ln76_reg_633");
    sc_trace(mVcdFile, icmp_ln68_fu_373_p2, "icmp_ln68_fu_373_p2");
    sc_trace(mVcdFile, tmp_11_fu_393_p6, "tmp_11_fu_393_p6");
    sc_trace(mVcdFile, select_ln77_fu_415_p3, "select_ln77_fu_415_p3");
    sc_trace(mVcdFile, select_ln77_1_fu_422_p3, "select_ln77_1_fu_422_p3");
    sc_trace(mVcdFile, select_ln77_1_reg_652, "select_ln77_1_reg_652");
    sc_trace(mVcdFile, select_ln83_1_fu_436_p3, "select_ln83_1_fu_436_p3");
    sc_trace(mVcdFile, select_ln83_1_reg_662, "select_ln83_1_reg_662");
    sc_trace(mVcdFile, add_ln86_fu_442_p2, "add_ln86_fu_442_p2");
    sc_trace(mVcdFile, add_ln86_reg_667, "add_ln86_reg_667");
    sc_trace(mVcdFile, c_fu_448_p2, "c_fu_448_p2");
    sc_trace(mVcdFile, grp_fu_282_p2, "grp_fu_282_p2");
    sc_trace(mVcdFile, tmp_6_reg_677, "tmp_6_reg_677");
    sc_trace(mVcdFile, grp_fu_286_p2, "grp_fu_286_p2");
    sc_trace(mVcdFile, tmp_8_reg_682, "tmp_8_reg_682");
    sc_trace(mVcdFile, grp_fu_266_p2, "grp_fu_266_p2");
    sc_trace(mVcdFile, tmp_7_reg_687, "tmp_7_reg_687");
    sc_trace(mVcdFile, grp_fu_270_p2, "grp_fu_270_p2");
    sc_trace(mVcdFile, tmp_9_reg_692, "tmp_9_reg_692");
    sc_trace(mVcdFile, tmp_12_fu_454_p6, "tmp_12_fu_454_p6");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, tmp_13_fu_468_p6, "tmp_13_fu_468_p6");
    sc_trace(mVcdFile, i_fu_493_p2, "i_fu_493_p2");
    sc_trace(mVcdFile, i_reg_710, "i_reg_710");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, icmp_ln93_fu_487_p2, "icmp_ln93_fu_487_p2");
    sc_trace(mVcdFile, indexJ_reg_725, "indexJ_reg_725");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, Real_addr_4_reg_730, "Real_addr_4_reg_730");
    sc_trace(mVcdFile, Imag_addr_4_reg_735, "Imag_addr_4_reg_735");
    sc_trace(mVcdFile, Real_addr_5_reg_740, "Real_addr_5_reg_740");
    sc_trace(mVcdFile, Imag_addr_5_reg_745, "Imag_addr_5_reg_745");
    sc_trace(mVcdFile, c_0_reg_224, "c_0_reg_224");
    sc_trace(mVcdFile, c_aux_0_reg_236, "c_aux_0_reg_236");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, i_0_reg_247, "i_0_reg_247");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, zext_ln52_fu_346_p1, "zext_ln52_fu_346_p1");
    sc_trace(mVcdFile, zext_ln54_fu_367_p1, "zext_ln54_fu_367_p1");
    sc_trace(mVcdFile, zext_ln86_fu_482_p1, "zext_ln86_fu_482_p1");
    sc_trace(mVcdFile, zext_ln97_fu_499_p1, "zext_ln97_fu_499_p1");
    sc_trace(mVcdFile, zext_ln100_fu_505_p1, "zext_ln100_fu_505_p1");
    sc_trace(mVcdFile, zext_ln102_fu_511_p1, "zext_ln102_fu_511_p1");
    sc_trace(mVcdFile, Real_r_Addr_A_orig, "Real_r_Addr_A_orig");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, Imag_Addr_A_orig, "Imag_Addr_A_orig");
    sc_trace(mVcdFile, grp_fu_258_p1, "grp_fu_258_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_fu_262_p1, "grp_fu_262_p1");
    sc_trace(mVcdFile, grp_fu_274_p0, "grp_fu_274_p0");
    sc_trace(mVcdFile, grp_fu_274_p1, "grp_fu_274_p1");
    sc_trace(mVcdFile, grp_fu_278_p0, "grp_fu_278_p0");
    sc_trace(mVcdFile, grp_fu_278_p1, "grp_fu_278_p1");
    sc_trace(mVcdFile, grp_fu_286_p1, "grp_fu_286_p1");
    sc_trace(mVcdFile, ind1_fu_335_p2, "ind1_fu_335_p2");
    sc_trace(mVcdFile, ind2_fu_352_p2, "ind2_fu_352_p2");
    sc_trace(mVcdFile, ind3_fu_357_p2, "ind3_fu_357_p2");
    sc_trace(mVcdFile, tmp_11_fu_393_p5, "tmp_11_fu_393_p5");
    sc_trace(mVcdFile, trunc_ln77_fu_411_p1, "trunc_ln77_fu_411_p1");
    sc_trace(mVcdFile, zext_ln76_fu_385_p1, "zext_ln76_fu_385_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("Reorder_fft.hdltvin.dat");
    mHdltvoutHandle.open("Reorder_fft.hdltvout.dat");
}

Reorder_fft::~Reorder_fft() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete lut_reorder_I_U;
    delete lut_reorder_J_U;
    delete Reorder_fft_AXILiteS_s_axi_U;
    delete Reorder_fft_fadd_dEe_U1;
    delete Reorder_fft_fadd_dEe_U2;
    delete Reorder_fft_fadd_dEe_U3;
    delete Reorder_fft_fadd_dEe_U4;
    delete Reorder_fft_fmul_eOg_U5;
    delete Reorder_fft_fmul_eOg_U6;
    delete Reorder_fft_fmul_eOg_U7;
    delete Reorder_fft_fmul_eOg_U8;
    delete Reorder_fft_mux_4fYi_U9;
    delete Reorder_fft_mux_4fYi_U10;
    delete Reorder_fft_mux_4fYi_U11;
}

void Reorder_fft::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Reorder_fft::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_3F800000;
}

void Reorder_fft::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_BF800000;
}

void Reorder_fft::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(icmp_ln68_fu_373_p2.read(), ap_const_lv1_1))) {
        c_0_reg_224 = c_fu_448_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c_0_reg_224 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        c_aux_0_reg_236 = c_aux_reg_628.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        c_aux_0_reg_236 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_14_fu_323_p3.read(), ap_const_lv1_1))) {
        i_0_reg_247 = ap_const_lv9_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        i_0_reg_247 = i_reg_710.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        IM_vec_128_a_reg_585 = Imag_Dout_A.read();
        RE_vec_128_c_0_reg_580 = Real_r_Dout_A.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        IM_vec_128_b_reg_600 = Imag_Dout_A.read();
        RE_vec_128_d_0_reg_595 = Real_r_Dout_A.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        IM_vec_128_c_0_reg_605 = Imag_Dout_A.read();
        IM_vec_128_c_1_reg_610 = Real_r_Dout_A.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        IM_vec_128_d_0_reg_615 = Imag_Dout_A.read();
        IM_vec_128_d_1_reg_620 = Real_r_Dout_A.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        Imag_addr_1_reg_560 =  (sc_lv<10>) (zext_ln54_fu_367_p1.read());
        Real_addr_3_reg_555 =  (sc_lv<10>) (zext_ln54_fu_367_p1.read());
        zext_ln51_reg_545 = zext_ln51_fu_362_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        Imag_addr_4_reg_735 =  (sc_lv<10>) (zext_ln100_fu_505_p1.read());
        Real_addr_4_reg_730 =  (sc_lv<10>) (zext_ln100_fu_505_p1.read());
        indexJ_reg_725 = lut_reorder_J_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        Imag_addr_5_reg_745 =  (sc_lv<10>) (zext_ln102_fu_511_p1.read());
        Real_addr_5_reg_740 =  (sc_lv<10>) (zext_ln102_fu_511_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_14_fu_323_p3.read(), ap_const_lv1_0))) {
        Imag_addr_reg_540 =  (sc_lv<10>) (zext_ln52_fu_346_p1.read());
        Real_addr_2_reg_535 =  (sc_lv<10>) (zext_ln52_fu_346_p1.read());
        trunc_ln42_reg_519 = trunc_ln42_fu_331_p1.read();
        zext_ln50_reg_525 = zext_ln50_fu_341_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        RE_vec_128_b_reg_565 = Real_r_Dout_A.read();
        RE_vec_128_d_1_reg_570 = Imag_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln68_fu_373_p2.read()))) {
        add_ln86_reg_667 = add_ln86_fu_442_p2.read();
        select_ln77_1_reg_652 = select_ln77_1_fu_422_p3.read();
        select_ln83_1_reg_662 = select_ln83_1_fu_436_p3.read();
        trunc_ln76_reg_633 = trunc_ln76_fu_389_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        c_aux_reg_628 = c_aux_fu_379_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        i_reg_710 = i_fu_493_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        reg_290 = Real_r_Dout_A.read();
        reg_296 = Imag_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        reg_301 = grp_fu_274_p2.read();
        reg_306 = grp_fu_278_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        reg_311 = grp_fu_258_p2.read();
        reg_317 = grp_fu_262_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        tmp_6_reg_677 = grp_fu_282_p2.read();
        tmp_8_reg_682 = grp_fu_286_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        tmp_7_reg_687 = grp_fu_266_p2.read();
        tmp_9_reg_692 = grp_fu_270_p2.read();
    }
}

void Reorder_fft::thread_Imag_Addr_A() {
    Imag_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): Imag_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void Reorder_fft::thread_Imag_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        Imag_Addr_A_orig =  (sc_lv<32>) (Imag_addr_5_reg_745.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        Imag_Addr_A_orig =  (sc_lv<32>) (Imag_addr_4_reg_735.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        Imag_Addr_A_orig =  (sc_lv<32>) (zext_ln102_fu_511_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        Imag_Addr_A_orig =  (sc_lv<32>) (zext_ln100_fu_505_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        Imag_Addr_A_orig =  (sc_lv<32>) (zext_ln86_fu_482_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        Imag_Addr_A_orig =  (sc_lv<32>) (Imag_addr_1_reg_560.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        Imag_Addr_A_orig =  (sc_lv<32>) (Imag_addr_reg_540.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        Imag_Addr_A_orig =  (sc_lv<32>) (zext_ln51_reg_545.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Imag_Addr_A_orig =  (sc_lv<32>) (zext_ln50_reg_525.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        Imag_Addr_A_orig =  (sc_lv<32>) (zext_ln54_fu_367_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        Imag_Addr_A_orig =  (sc_lv<32>) (zext_ln52_fu_346_p1.read());
    } else {
        Imag_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_Imag_Clk_A() {
    Imag_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void Reorder_fft::thread_Imag_Din_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        Imag_Din_A = reg_296.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        Imag_Din_A = Imag_Dout_A.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        Imag_Din_A = reg_317.read();
    } else {
        Imag_Din_A = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_Imag_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        Imag_EN_A = ap_const_logic_1;
    } else {
        Imag_EN_A = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Imag_Rst_A() {
    Imag_Rst_A = ap_rst_n_inv.read();
}

void Reorder_fft::thread_Imag_WEN_A() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        Imag_WEN_A = ap_const_lv4_F;
    } else {
        Imag_WEN_A = ap_const_lv4_0;
    }
}

void Reorder_fft::thread_Real_r_Addr_A() {
    Real_r_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): Real_r_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void Reorder_fft::thread_Real_r_Addr_A_orig() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (Real_addr_5_reg_740.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (Real_addr_4_reg_730.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (zext_ln102_fu_511_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (zext_ln100_fu_505_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (zext_ln86_fu_482_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (Real_addr_3_reg_555.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (Real_addr_2_reg_535.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (zext_ln51_fu_362_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        Real_r_Addr_A_orig =  (sc_lv<32>) (zext_ln50_fu_341_p1.read());
    } else {
        Real_r_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_Real_r_Clk_A() {
    Real_r_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void Reorder_fft::thread_Real_r_Din_A() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        Real_r_Din_A = reg_290.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        Real_r_Din_A = Real_r_Dout_A.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        Real_r_Din_A = reg_311.read();
    } else {
        Real_r_Din_A = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_Real_r_EN_A() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        Real_r_EN_A = ap_const_logic_1;
    } else {
        Real_r_EN_A = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Real_r_Rst_A() {
    Real_r_Rst_A = ap_rst_n_inv.read();
}

void Reorder_fft::thread_Real_r_WEN_A() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()))) {
        Real_r_WEN_A = ap_const_lv4_F;
    } else {
        Real_r_WEN_A = ap_const_lv4_0;
    }
}

void Reorder_fft::thread_add_ln86_fu_442_p2() {
    add_ln86_fu_442_p2 = (!c_0_reg_224.read().is_01() || !zext_ln76_fu_385_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(c_0_reg_224.read()) + sc_biguint<11>(zext_ln76_fu_385_p1.read()));
}

void Reorder_fft::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Reorder_fft::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void Reorder_fft::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void Reorder_fft::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void Reorder_fft::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void Reorder_fft::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Reorder_fft::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void Reorder_fft::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void Reorder_fft::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void Reorder_fft::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void Reorder_fft::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void Reorder_fft::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void Reorder_fft::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Reorder_fft::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void Reorder_fft::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void Reorder_fft::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void Reorder_fft::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Reorder_fft::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Reorder_fft::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Reorder_fft::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Reorder_fft::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Reorder_fft::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void Reorder_fft::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln93_fu_487_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln93_fu_487_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void Reorder_fft::thread_c_aux_fu_379_p2() {
    c_aux_fu_379_p2 = (!c_aux_0_reg_236.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(c_aux_0_reg_236.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Reorder_fft::thread_c_fu_448_p2() {
    c_fu_448_p2 = (!c_0_reg_224.read().is_01() || !ap_const_lv11_4.is_01())? sc_lv<11>(): (sc_biguint<11>(c_0_reg_224.read()) + sc_biguint<11>(ap_const_lv11_4));
}

void Reorder_fft::thread_grp_fu_258_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_258_p1 = reg_311.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_258_p1 = reg_290.read();
    } else {
        grp_fu_258_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_grp_fu_262_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_262_p1 = tmp_7_reg_687.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        grp_fu_262_p1 = select_ln77_1_reg_652.read();
    } else {
        grp_fu_262_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_grp_fu_274_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_274_p0 = tmp_12_fu_454_p6.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_274_p0 = tmp_11_fu_393_p6.read();
    } else {
        grp_fu_274_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_grp_fu_274_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_274_p1 = reg_317.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_274_p1 = RE_vec_128_b_reg_565.read();
    } else {
        grp_fu_274_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_grp_fu_278_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_278_p0 = tmp_13_fu_468_p6.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_278_p0 = tmp_11_fu_393_p6.read();
    } else {
        grp_fu_278_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_grp_fu_278_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_278_p1 = tmp_9_reg_692.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        grp_fu_278_p1 = select_ln77_fu_415_p3.read();
    } else {
        grp_fu_278_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_grp_fu_286_p1() {
    grp_fu_286_p1 = (!trunc_ln77_fu_411_p1.read()[0].is_01())? sc_lv<32>(): ((trunc_ln77_fu_411_p1.read()[0].to_bool())? IM_vec_128_d_1_reg_620.read(): IM_vec_128_d_0_reg_615.read());
}

void Reorder_fft::thread_i_fu_493_p2() {
    i_fu_493_p2 = (!i_0_reg_247.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(i_0_reg_247.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void Reorder_fft::thread_icmp_ln68_fu_373_p2() {
    icmp_ln68_fu_373_p2 = (!c_aux_0_reg_236.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(c_aux_0_reg_236.read() == ap_const_lv3_4);
}

void Reorder_fft::thread_icmp_ln93_fu_487_p2() {
    icmp_ln93_fu_487_p2 = (!i_0_reg_247.read().is_01() || !ap_const_lv9_1E0.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_247.read() == ap_const_lv9_1E0);
}

void Reorder_fft::thread_ind1_fu_335_p2() {
    ind1_fu_335_p2 = (trunc_ln42_fu_331_p1.read() | ap_const_lv10_1);
}

void Reorder_fft::thread_ind2_fu_352_p2() {
    ind2_fu_352_p2 = (trunc_ln42_reg_519.read() | ap_const_lv10_2);
}

void Reorder_fft::thread_ind3_fu_357_p2() {
    ind3_fu_357_p2 = (trunc_ln42_reg_519.read() | ap_const_lv10_3);
}

void Reorder_fft::thread_lut_reorder_I_address0() {
    lut_reorder_I_address0 =  (sc_lv<9>) (zext_ln97_fu_499_p1.read());
}

void Reorder_fft::thread_lut_reorder_I_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        lut_reorder_I_ce0 = ap_const_logic_1;
    } else {
        lut_reorder_I_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_lut_reorder_J_address0() {
    lut_reorder_J_address0 =  (sc_lv<9>) (zext_ln97_fu_499_p1.read());
}

void Reorder_fft::thread_lut_reorder_J_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        lut_reorder_J_ce0 = ap_const_logic_1;
    } else {
        lut_reorder_J_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_select_ln77_1_fu_422_p3() {
    select_ln77_1_fu_422_p3 = (!trunc_ln77_fu_411_p1.read()[0].is_01())? sc_lv<32>(): ((trunc_ln77_fu_411_p1.read()[0].to_bool())? reg_296.read(): RE_vec_128_c_0_reg_580.read());
}

void Reorder_fft::thread_select_ln77_fu_415_p3() {
    select_ln77_fu_415_p3 = (!trunc_ln77_fu_411_p1.read()[0].is_01())? sc_lv<32>(): ((trunc_ln77_fu_411_p1.read()[0].to_bool())? RE_vec_128_d_1_reg_570.read(): RE_vec_128_d_0_reg_595.read());
}

void Reorder_fft::thread_select_ln83_1_fu_436_p3() {
    select_ln83_1_fu_436_p3 = (!trunc_ln77_fu_411_p1.read()[0].is_01())? sc_lv<32>(): ((trunc_ln77_fu_411_p1.read()[0].to_bool())? IM_vec_128_c_1_reg_610.read(): IM_vec_128_c_0_reg_605.read());
}

void Reorder_fft::thread_tmp_11_fu_393_p5() {
    tmp_11_fu_393_p5 = c_aux_0_reg_236.read().range(2-1, 0);
}

void Reorder_fft::thread_tmp_14_fu_323_p3() {
    tmp_14_fu_323_p3 = c_0_reg_224.read().range(10, 10);
}

void Reorder_fft::thread_trunc_ln42_fu_331_p1() {
    trunc_ln42_fu_331_p1 = c_0_reg_224.read().range(10-1, 0);
}

void Reorder_fft::thread_trunc_ln76_fu_389_p1() {
    trunc_ln76_fu_389_p1 = c_aux_0_reg_236.read().range(2-1, 0);
}

void Reorder_fft::thread_trunc_ln77_fu_411_p1() {
    trunc_ln77_fu_411_p1 = c_aux_0_reg_236.read().range(1-1, 0);
}

void Reorder_fft::thread_zext_ln100_fu_505_p1() {
    zext_ln100_fu_505_p1 = esl_zext<64,10>(lut_reorder_I_q0.read());
}

void Reorder_fft::thread_zext_ln102_fu_511_p1() {
    zext_ln102_fu_511_p1 = esl_zext<64,10>(indexJ_reg_725.read());
}

void Reorder_fft::thread_zext_ln50_fu_341_p1() {
    zext_ln50_fu_341_p1 = esl_zext<64,11>(c_0_reg_224.read());
}

void Reorder_fft::thread_zext_ln51_fu_362_p1() {
    zext_ln51_fu_362_p1 = esl_zext<64,10>(ind2_fu_352_p2.read());
}

void Reorder_fft::thread_zext_ln52_fu_346_p1() {
    zext_ln52_fu_346_p1 = esl_zext<64,10>(ind1_fu_335_p2.read());
}

void Reorder_fft::thread_zext_ln54_fu_367_p1() {
    zext_ln54_fu_367_p1 = esl_zext<64,10>(ind3_fu_357_p2.read());
}

void Reorder_fft::thread_zext_ln76_fu_385_p1() {
    zext_ln76_fu_385_p1 = esl_zext<11,3>(c_aux_0_reg_236.read());
}

void Reorder_fft::thread_zext_ln86_fu_482_p1() {
    zext_ln86_fu_482_p1 = esl_zext<64,11>(add_ln86_reg_667.read());
}

void Reorder_fft::thread_zext_ln97_fu_499_p1() {
    zext_ln97_fu_499_p1 = esl_zext<64,9>(i_0_reg_247.read());
}

void Reorder_fft::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_14_fu_323_p3.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state28;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(icmp_ln68_fu_373_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 134217728 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln93_fu_487_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state29;
            }
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

void Reorder_fft::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"Real_r_Addr_A\" :  \"" << Real_r_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_r_EN_A\" :  \"" << Real_r_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_r_WEN_A\" :  \"" << Real_r_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_r_Din_A\" :  \"" << Real_r_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Real_r_Dout_A\" :  \"" << Real_r_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_r_Clk_A\" :  \"" << Real_r_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_r_Rst_A\" :  \"" << Real_r_Rst_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_Addr_A\" :  \"" << Imag_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_EN_A\" :  \"" << Imag_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_WEN_A\" :  \"" << Imag_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_Din_A\" :  \"" << Imag_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Imag_Dout_A\" :  \"" << Imag_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_Clk_A\" :  \"" << Imag_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_Rst_A\" :  \"" << Imag_Rst_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

