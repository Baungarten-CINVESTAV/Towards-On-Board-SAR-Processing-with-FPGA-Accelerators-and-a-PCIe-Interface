// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Reorder_fft,hls_ip_2019_1_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.954000,HLS_SYN_LAT=9411,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=30,HLS_SYN_FF=4779,HLS_SYN_LUT=6982,HLS_VERSION=2019_1_3}" *)

module Reorder_fft (
        ap_clk,
        ap_rst_n,
        Real_r_Addr_A,
        Real_r_EN_A,
        Real_r_WEN_A,
        Real_r_Din_A,
        Real_r_Dout_A,
        Real_r_Clk_A,
        Real_r_Rst_A,
        Imag_Addr_A,
        Imag_EN_A,
        Imag_WEN_A,
        Imag_Din_A,
        Imag_Dout_A,
        Imag_Clk_A,
        Imag_Rst_A,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 39'd1;
parameter    ap_ST_fsm_state2 = 39'd2;
parameter    ap_ST_fsm_state3 = 39'd4;
parameter    ap_ST_fsm_state4 = 39'd8;
parameter    ap_ST_fsm_state5 = 39'd16;
parameter    ap_ST_fsm_state6 = 39'd32;
parameter    ap_ST_fsm_state7 = 39'd64;
parameter    ap_ST_fsm_state8 = 39'd128;
parameter    ap_ST_fsm_pp0_stage0 = 39'd256;
parameter    ap_ST_fsm_state28 = 39'd512;
parameter    ap_ST_fsm_state29 = 39'd1024;
parameter    ap_ST_fsm_state30 = 39'd2048;
parameter    ap_ST_fsm_state31 = 39'd4096;
parameter    ap_ST_fsm_state32 = 39'd8192;
parameter    ap_ST_fsm_state33 = 39'd16384;
parameter    ap_ST_fsm_state34 = 39'd32768;
parameter    ap_ST_fsm_pp1_stage0 = 39'd65536;
parameter    ap_ST_fsm_state54 = 39'd131072;
parameter    ap_ST_fsm_state55 = 39'd262144;
parameter    ap_ST_fsm_state56 = 39'd524288;
parameter    ap_ST_fsm_state57 = 39'd1048576;
parameter    ap_ST_fsm_state58 = 39'd2097152;
parameter    ap_ST_fsm_state59 = 39'd4194304;
parameter    ap_ST_fsm_state60 = 39'd8388608;
parameter    ap_ST_fsm_pp2_stage0 = 39'd16777216;
parameter    ap_ST_fsm_state80 = 39'd33554432;
parameter    ap_ST_fsm_state81 = 39'd67108864;
parameter    ap_ST_fsm_state82 = 39'd134217728;
parameter    ap_ST_fsm_state83 = 39'd268435456;
parameter    ap_ST_fsm_state84 = 39'd536870912;
parameter    ap_ST_fsm_state85 = 39'd1073741824;
parameter    ap_ST_fsm_state86 = 39'd2147483648;
parameter    ap_ST_fsm_pp3_stage0 = 39'd4294967296;
parameter    ap_ST_fsm_state106 = 39'd8589934592;
parameter    ap_ST_fsm_pp4_stage0 = 39'd17179869184;
parameter    ap_ST_fsm_pp4_stage1 = 39'd34359738368;
parameter    ap_ST_fsm_pp4_stage2 = 39'd68719476736;
parameter    ap_ST_fsm_pp4_stage3 = 39'd137438953472;
parameter    ap_ST_fsm_state112 = 39'd274877906944;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [31:0] Real_r_Addr_A;
output   Real_r_EN_A;
output  [3:0] Real_r_WEN_A;
output  [31:0] Real_r_Din_A;
input  [31:0] Real_r_Dout_A;
output   Real_r_Clk_A;
output   Real_r_Rst_A;
output  [31:0] Imag_Addr_A;
output   Imag_EN_A;
output  [3:0] Imag_WEN_A;
output  [31:0] Imag_Din_A;
input  [31:0] Imag_Dout_A;
output   Imag_Clk_A;
output   Imag_Rst_A;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg Real_r_EN_A;
reg[3:0] Real_r_WEN_A;
reg[31:0] Real_r_Din_A;
reg Imag_EN_A;
reg[3:0] Imag_WEN_A;
reg[31:0] Imag_Din_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [38:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [8:0] lut_reorder_I_address0;
reg    lut_reorder_I_ce0;
wire   [9:0] lut_reorder_I_q0;
wire   [8:0] lut_reorder_J_address0;
reg    lut_reorder_J_ce0;
wire   [9:0] lut_reorder_J_q0;
reg   [2:0] c_aux_0_0_reg_516;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state9_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state12_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state14_pp0_stage0_iter5;
wire    ap_block_state15_pp0_stage0_iter6;
wire    ap_block_state16_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state18_pp0_stage0_iter9;
wire    ap_block_state19_pp0_stage0_iter10;
wire    ap_block_state20_pp0_stage0_iter11;
wire    ap_block_state21_pp0_stage0_iter12;
wire    ap_block_state22_pp0_stage0_iter13;
wire    ap_block_state23_pp0_stage0_iter14;
wire    ap_block_state24_pp0_stage0_iter15;
wire    ap_block_state25_pp0_stage0_iter16;
wire    ap_block_state26_pp0_stage0_iter17;
wire    ap_block_state27_pp0_stage0_iter18;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter2_reg;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter3_reg;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter4_reg;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter5_reg;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter6_reg;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter7_reg;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter8_reg;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter9_reg;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter10_reg;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter11_reg;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter12_reg;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter13_reg;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter14_reg;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter15_reg;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter16_reg;
reg   [2:0] c_aux_0_0_reg_516_pp0_iter17_reg;
reg   [2:0] c_aux_0_1_reg_528;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state35_pp1_stage0_iter0;
wire    ap_block_state36_pp1_stage0_iter1;
wire    ap_block_state37_pp1_stage0_iter2;
wire    ap_block_state38_pp1_stage0_iter3;
wire    ap_block_state39_pp1_stage0_iter4;
wire    ap_block_state40_pp1_stage0_iter5;
wire    ap_block_state41_pp1_stage0_iter6;
wire    ap_block_state42_pp1_stage0_iter7;
wire    ap_block_state43_pp1_stage0_iter8;
wire    ap_block_state44_pp1_stage0_iter9;
wire    ap_block_state45_pp1_stage0_iter10;
wire    ap_block_state46_pp1_stage0_iter11;
wire    ap_block_state47_pp1_stage0_iter12;
wire    ap_block_state48_pp1_stage0_iter13;
wire    ap_block_state49_pp1_stage0_iter14;
wire    ap_block_state50_pp1_stage0_iter15;
wire    ap_block_state51_pp1_stage0_iter16;
wire    ap_block_state52_pp1_stage0_iter17;
wire    ap_block_state53_pp1_stage0_iter18;
wire    ap_block_pp1_stage0_11001;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter2_reg;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter3_reg;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter4_reg;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter5_reg;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter6_reg;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter7_reg;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter8_reg;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter9_reg;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter10_reg;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter11_reg;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter12_reg;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter13_reg;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter14_reg;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter15_reg;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter16_reg;
reg   [2:0] c_aux_0_1_reg_528_pp1_iter17_reg;
reg   [2:0] c_aux_0_2_reg_540;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter1_reg;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state61_pp2_stage0_iter0;
wire    ap_block_state62_pp2_stage0_iter1;
wire    ap_block_state63_pp2_stage0_iter2;
wire    ap_block_state64_pp2_stage0_iter3;
wire    ap_block_state65_pp2_stage0_iter4;
wire    ap_block_state66_pp2_stage0_iter5;
wire    ap_block_state67_pp2_stage0_iter6;
wire    ap_block_state68_pp2_stage0_iter7;
wire    ap_block_state69_pp2_stage0_iter8;
wire    ap_block_state70_pp2_stage0_iter9;
wire    ap_block_state71_pp2_stage0_iter10;
wire    ap_block_state72_pp2_stage0_iter11;
wire    ap_block_state73_pp2_stage0_iter12;
wire    ap_block_state74_pp2_stage0_iter13;
wire    ap_block_state75_pp2_stage0_iter14;
wire    ap_block_state76_pp2_stage0_iter15;
wire    ap_block_state77_pp2_stage0_iter16;
wire    ap_block_state78_pp2_stage0_iter17;
wire    ap_block_state79_pp2_stage0_iter18;
wire    ap_block_pp2_stage0_11001;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter2_reg;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter3_reg;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter4_reg;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter5_reg;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter6_reg;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter7_reg;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter8_reg;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter9_reg;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter10_reg;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter11_reg;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter12_reg;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter13_reg;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter14_reg;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter15_reg;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter16_reg;
reg   [2:0] c_aux_0_2_reg_540_pp2_iter17_reg;
reg   [2:0] c_aux_0_3_reg_552;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter1_reg;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state87_pp3_stage0_iter0;
wire    ap_block_state88_pp3_stage0_iter1;
wire    ap_block_state89_pp3_stage0_iter2;
wire    ap_block_state90_pp3_stage0_iter3;
wire    ap_block_state91_pp3_stage0_iter4;
wire    ap_block_state92_pp3_stage0_iter5;
wire    ap_block_state93_pp3_stage0_iter6;
wire    ap_block_state94_pp3_stage0_iter7;
wire    ap_block_state95_pp3_stage0_iter8;
wire    ap_block_state96_pp3_stage0_iter9;
wire    ap_block_state97_pp3_stage0_iter10;
wire    ap_block_state98_pp3_stage0_iter11;
wire    ap_block_state99_pp3_stage0_iter12;
wire    ap_block_state100_pp3_stage0_iter13;
wire    ap_block_state101_pp3_stage0_iter14;
wire    ap_block_state102_pp3_stage0_iter15;
wire    ap_block_state103_pp3_stage0_iter16;
wire    ap_block_state104_pp3_stage0_iter17;
wire    ap_block_state105_pp3_stage0_iter18;
wire    ap_block_pp3_stage0_11001;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter2_reg;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter3_reg;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter4_reg;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter5_reg;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter6_reg;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter7_reg;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter8_reg;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter9_reg;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter10_reg;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter11_reg;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter12_reg;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter13_reg;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter14_reg;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter15_reg;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter16_reg;
reg   [2:0] c_aux_0_3_reg_552_pp3_iter17_reg;
reg   [8:0] i_0_reg_564;
reg   [31:0] reg_623;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_pp4_stage2;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state109_pp4_stage2_iter0;
wire    ap_block_pp4_stage2_11001;
reg   [0:0] icmp_ln91_reg_1911;
reg   [31:0] reg_629;
reg   [31:0] reg_634;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state82;
reg   [31:0] reg_639;
reg   [31:0] reg_643;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state83;
reg   [31:0] reg_647;
reg   [31:0] reg_652;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state84;
reg   [31:0] reg_656;
reg   [31:0] reg_661;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state85;
reg   [31:0] reg_665;
reg   [31:0] reg_669;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state86;
reg   [31:0] reg_673;
wire   [31:0] grp_fu_599_p2;
reg   [31:0] reg_677;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln65_reg_1495;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter2_reg;
reg    ap_enable_reg_pp1_iter3;
reg   [0:0] icmp_ln65_1_reg_1614;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter2_reg;
reg    ap_enable_reg_pp2_iter3;
reg   [0:0] icmp_ln65_2_reg_1728;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter2_reg;
reg    ap_enable_reg_pp3_iter3;
reg   [0:0] icmp_ln65_3_reg_1847;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter2_reg;
wire   [31:0] grp_fu_603_p2;
reg   [31:0] reg_682;
wire   [31:0] grp_fu_607_p2;
reg   [31:0] reg_687;
reg    ap_enable_reg_pp0_iter7;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter6_reg;
reg    ap_enable_reg_pp1_iter7;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter6_reg;
reg    ap_enable_reg_pp2_iter7;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter6_reg;
reg    ap_enable_reg_pp3_iter7;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter6_reg;
wire   [31:0] grp_fu_611_p2;
reg   [31:0] reg_692;
wire   [31:0] grp_fu_575_p2;
reg   [31:0] reg_697;
reg    ap_enable_reg_pp0_iter8;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter7_reg;
reg    ap_enable_reg_pp1_iter8;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter7_reg;
reg    ap_enable_reg_pp2_iter8;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter7_reg;
reg    ap_enable_reg_pp3_iter8;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter7_reg;
wire   [31:0] grp_fu_579_p2;
reg   [31:0] reg_702;
wire   [31:0] grp_fu_583_p2;
reg   [31:0] reg_707;
reg    ap_enable_reg_pp0_iter12;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter11_reg;
reg    ap_enable_reg_pp1_iter12;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter11_reg;
reg    ap_enable_reg_pp2_iter12;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter11_reg;
reg    ap_enable_reg_pp3_iter12;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter11_reg;
wire   [31:0] grp_fu_615_p2;
reg   [31:0] reg_712;
wire   [31:0] grp_fu_587_p2;
reg   [31:0] reg_717;
wire   [31:0] grp_fu_619_p2;
reg   [31:0] reg_722;
wire   [31:0] grp_fu_591_p2;
reg   [31:0] reg_727;
reg    ap_enable_reg_pp0_iter17;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter16_reg;
reg    ap_enable_reg_pp1_iter17;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter16_reg;
reg    ap_enable_reg_pp2_iter17;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter16_reg;
reg    ap_enable_reg_pp3_iter17;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter16_reg;
wire   [31:0] grp_fu_595_p2;
reg   [31:0] reg_732;
wire   [0:0] tmp_37_fu_737_p3;
wire    ap_CS_fsm_state2;
wire   [9:0] empty_19_fu_745_p1;
reg   [9:0] empty_19_reg_1427;
wire   [63:0] zext_ln47_fu_755_p1;
reg   [63:0] zext_ln47_reg_1445;
reg   [9:0] Real_addr_2_reg_1455;
reg   [9:0] Imag_addr_reg_1460;
wire   [63:0] zext_ln48_fu_776_p1;
reg   [63:0] zext_ln48_reg_1465;
reg   [9:0] Real_addr_3_reg_1475;
reg   [9:0] Imag_addr_1_reg_1480;
wire   [0:0] icmp_ln65_fu_787_p2;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter1_reg;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter3_reg;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter4_reg;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter5_reg;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter8_reg;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter9_reg;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter10_reg;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter12_reg;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter13_reg;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter14_reg;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter15_reg;
reg   [0:0] icmp_ln65_reg_1495_pp0_iter17_reg;
wire   [2:0] add_ln65_fu_793_p2;
reg   [2:0] add_ln65_reg_1499;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] trunc_ln74_fu_799_p1;
reg   [1:0] trunc_ln74_reg_1504;
reg   [1:0] trunc_ln74_reg_1504_pp0_iter1_reg;
reg   [1:0] trunc_ln74_reg_1504_pp0_iter2_reg;
reg   [1:0] trunc_ln74_reg_1504_pp0_iter3_reg;
reg   [1:0] trunc_ln74_reg_1504_pp0_iter4_reg;
reg   [1:0] trunc_ln74_reg_1504_pp0_iter5_reg;
reg   [1:0] trunc_ln74_reg_1504_pp0_iter6_reg;
reg   [1:0] trunc_ln74_reg_1504_pp0_iter7_reg;
reg   [1:0] trunc_ln74_reg_1504_pp0_iter8_reg;
wire   [31:0] tmp_4_fu_803_p6;
reg   [31:0] tmp_4_reg_1510;
reg   [31:0] tmp_4_reg_1510_pp0_iter1_reg;
reg   [31:0] tmp_4_reg_1510_pp0_iter2_reg;
reg   [31:0] tmp_4_reg_1510_pp0_iter3_reg;
wire   [0:0] trunc_ln75_fu_819_p1;
reg   [0:0] trunc_ln75_reg_1518;
reg   [0:0] trunc_ln75_reg_1518_pp0_iter1_reg;
reg   [0:0] trunc_ln75_reg_1518_pp0_iter2_reg;
reg   [0:0] trunc_ln75_reg_1518_pp0_iter3_reg;
wire   [31:0] select_ln75_fu_823_p3;
wire   [31:0] select_ln81_fu_832_p3;
wire   [31:0] select_ln75_1_fu_841_p3;
wire   [31:0] select_ln81_1_fu_849_p3;
wire   [31:0] tmp_14_fu_857_p6;
wire   [31:0] tmp_20_fu_871_p6;
wire   [9:0] or_ln41_fu_909_p2;
reg   [9:0] or_ln41_reg_1554;
wire    ap_CS_fsm_state28;
wire   [63:0] zext_ln47_1_fu_919_p1;
reg   [63:0] zext_ln47_1_reg_1559;
reg   [9:0] Real_addr_8_reg_1569;
reg   [9:0] Imag_addr_6_reg_1574;
wire   [63:0] zext_ln48_1_fu_940_p1;
reg   [63:0] zext_ln48_1_reg_1579;
reg   [9:0] Real_addr_9_reg_1589;
reg   [9:0] Imag_addr_7_reg_1594;
wire   [10:0] zext_ln47_4_fu_951_p1;
reg   [10:0] zext_ln47_4_reg_1609;
wire   [0:0] icmp_ln65_1_fu_954_p2;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter1_reg;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter3_reg;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter4_reg;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter5_reg;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter8_reg;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter9_reg;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter10_reg;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter12_reg;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter13_reg;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter14_reg;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter15_reg;
reg   [0:0] icmp_ln65_1_reg_1614_pp1_iter17_reg;
wire   [2:0] add_ln65_1_fu_960_p2;
reg   [2:0] add_ln65_1_reg_1618;
reg    ap_enable_reg_pp1_iter0;
wire   [1:0] trunc_ln74_1_fu_966_p1;
reg   [1:0] trunc_ln74_1_reg_1623;
reg   [1:0] trunc_ln74_1_reg_1623_pp1_iter1_reg;
reg   [1:0] trunc_ln74_1_reg_1623_pp1_iter2_reg;
reg   [1:0] trunc_ln74_1_reg_1623_pp1_iter3_reg;
reg   [1:0] trunc_ln74_1_reg_1623_pp1_iter4_reg;
reg   [1:0] trunc_ln74_1_reg_1623_pp1_iter5_reg;
reg   [1:0] trunc_ln74_1_reg_1623_pp1_iter6_reg;
reg   [1:0] trunc_ln74_1_reg_1623_pp1_iter7_reg;
reg   [1:0] trunc_ln74_1_reg_1623_pp1_iter8_reg;
wire   [31:0] tmp_24_fu_970_p6;
reg   [31:0] tmp_24_reg_1629;
reg   [31:0] tmp_24_reg_1629_pp1_iter1_reg;
reg   [31:0] tmp_24_reg_1629_pp1_iter2_reg;
reg   [31:0] tmp_24_reg_1629_pp1_iter3_reg;
wire   [0:0] trunc_ln75_1_fu_986_p1;
reg   [0:0] trunc_ln75_1_reg_1637;
reg   [0:0] trunc_ln75_1_reg_1637_pp1_iter1_reg;
reg   [0:0] trunc_ln75_1_reg_1637_pp1_iter2_reg;
reg   [0:0] trunc_ln75_1_reg_1637_pp1_iter3_reg;
wire   [31:0] select_ln75_2_fu_990_p3;
wire   [31:0] select_ln81_2_fu_999_p3;
wire   [31:0] select_ln75_3_fu_1008_p3;
wire   [31:0] select_ln81_3_fu_1016_p3;
wire   [31:0] tmp_26_fu_1024_p6;
wire   [31:0] tmp_28_fu_1038_p6;
wire   [9:0] or_ln41_1_fu_1067_p2;
reg   [9:0] or_ln41_1_reg_1673;
wire    ap_CS_fsm_state54;
wire   [63:0] zext_ln47_2_fu_1077_p1;
reg   [63:0] zext_ln47_2_reg_1678;
reg   [9:0] Real_addr_13_reg_1688;
reg   [9:0] Imag_addr_11_reg_1693;
wire   [63:0] zext_ln48_2_fu_1098_p1;
reg   [63:0] zext_ln48_2_reg_1698;
reg   [9:0] Real_addr_14_reg_1708;
reg   [9:0] Imag_addr_12_reg_1713;
wire   [0:0] icmp_ln65_2_fu_1109_p2;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter1_reg;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter3_reg;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter4_reg;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter5_reg;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter8_reg;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter9_reg;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter10_reg;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter12_reg;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter13_reg;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter14_reg;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter15_reg;
reg   [0:0] icmp_ln65_2_reg_1728_pp2_iter17_reg;
wire   [2:0] add_ln65_2_fu_1115_p2;
reg   [2:0] add_ln65_2_reg_1732;
reg    ap_enable_reg_pp2_iter0;
wire   [1:0] trunc_ln74_2_fu_1121_p1;
reg   [1:0] trunc_ln74_2_reg_1737;
reg   [1:0] trunc_ln74_2_reg_1737_pp2_iter1_reg;
reg   [1:0] trunc_ln74_2_reg_1737_pp2_iter2_reg;
reg   [1:0] trunc_ln74_2_reg_1737_pp2_iter3_reg;
reg   [1:0] trunc_ln74_2_reg_1737_pp2_iter4_reg;
reg   [1:0] trunc_ln74_2_reg_1737_pp2_iter5_reg;
reg   [1:0] trunc_ln74_2_reg_1737_pp2_iter6_reg;
reg   [1:0] trunc_ln74_2_reg_1737_pp2_iter7_reg;
reg   [1:0] trunc_ln74_2_reg_1737_pp2_iter8_reg;
wire   [31:0] tmp_29_fu_1125_p6;
reg   [31:0] tmp_29_reg_1743;
reg   [31:0] tmp_29_reg_1743_pp2_iter1_reg;
reg   [31:0] tmp_29_reg_1743_pp2_iter2_reg;
reg   [31:0] tmp_29_reg_1743_pp2_iter3_reg;
wire   [0:0] trunc_ln75_2_fu_1141_p1;
reg   [0:0] trunc_ln75_2_reg_1751;
reg   [0:0] trunc_ln75_2_reg_1751_pp2_iter1_reg;
reg   [0:0] trunc_ln75_2_reg_1751_pp2_iter2_reg;
reg   [0:0] trunc_ln75_2_reg_1751_pp2_iter3_reg;
wire   [31:0] select_ln75_4_fu_1145_p3;
wire   [31:0] select_ln81_4_fu_1154_p3;
wire   [31:0] select_ln75_5_fu_1163_p3;
wire   [31:0] select_ln81_5_fu_1171_p3;
wire   [31:0] tmp_30_fu_1179_p6;
wire   [31:0] tmp_31_fu_1193_p6;
wire   [9:0] or_ln41_2_fu_1230_p2;
reg   [9:0] or_ln41_2_reg_1787;
wire    ap_CS_fsm_state80;
wire   [63:0] zext_ln47_3_fu_1240_p1;
reg   [63:0] zext_ln47_3_reg_1792;
reg   [9:0] Real_addr_18_reg_1802;
reg   [9:0] Imag_addr_16_reg_1807;
wire   [63:0] zext_ln48_3_fu_1261_p1;
reg   [63:0] zext_ln48_3_reg_1812;
reg   [9:0] Real_addr_19_reg_1822;
reg   [9:0] Imag_addr_17_reg_1827;
wire   [10:0] zext_ln47_5_fu_1272_p1;
reg   [10:0] zext_ln47_5_reg_1842;
wire   [0:0] icmp_ln65_3_fu_1275_p2;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter1_reg;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter3_reg;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter4_reg;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter5_reg;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter8_reg;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter9_reg;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter10_reg;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter12_reg;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter13_reg;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter14_reg;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter15_reg;
reg   [0:0] icmp_ln65_3_reg_1847_pp3_iter17_reg;
wire   [2:0] add_ln65_3_fu_1281_p2;
reg   [2:0] add_ln65_3_reg_1851;
reg    ap_enable_reg_pp3_iter0;
wire   [1:0] trunc_ln74_3_fu_1287_p1;
reg   [1:0] trunc_ln74_3_reg_1856;
reg   [1:0] trunc_ln74_3_reg_1856_pp3_iter1_reg;
reg   [1:0] trunc_ln74_3_reg_1856_pp3_iter2_reg;
reg   [1:0] trunc_ln74_3_reg_1856_pp3_iter3_reg;
reg   [1:0] trunc_ln74_3_reg_1856_pp3_iter4_reg;
reg   [1:0] trunc_ln74_3_reg_1856_pp3_iter5_reg;
reg   [1:0] trunc_ln74_3_reg_1856_pp3_iter6_reg;
reg   [1:0] trunc_ln74_3_reg_1856_pp3_iter7_reg;
reg   [1:0] trunc_ln74_3_reg_1856_pp3_iter8_reg;
wire   [31:0] tmp_34_fu_1291_p6;
reg   [31:0] tmp_34_reg_1862;
reg   [31:0] tmp_34_reg_1862_pp3_iter1_reg;
reg   [31:0] tmp_34_reg_1862_pp3_iter2_reg;
reg   [31:0] tmp_34_reg_1862_pp3_iter3_reg;
wire   [0:0] trunc_ln75_3_fu_1307_p1;
reg   [0:0] trunc_ln75_3_reg_1870;
reg   [0:0] trunc_ln75_3_reg_1870_pp3_iter1_reg;
reg   [0:0] trunc_ln75_3_reg_1870_pp3_iter2_reg;
reg   [0:0] trunc_ln75_3_reg_1870_pp3_iter3_reg;
wire   [31:0] select_ln75_6_fu_1311_p3;
wire   [31:0] select_ln81_6_fu_1320_p3;
wire   [31:0] select_ln75_7_fu_1329_p3;
wire   [31:0] select_ln81_7_fu_1337_p3;
wire   [31:0] tmp_35_fu_1345_p6;
wire   [31:0] tmp_36_fu_1359_p6;
wire   [10:0] add_ln41_fu_1388_p2;
wire    ap_CS_fsm_state106;
wire   [0:0] icmp_ln91_fu_1394_p2;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state107_pp4_stage0_iter0;
wire    ap_block_state111_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [8:0] i_fu_1400_p2;
reg   [8:0] i_reg_1915;
reg   [9:0] indexJ_reg_1930;
wire    ap_CS_fsm_pp4_stage1;
wire    ap_block_state108_pp4_stage1_iter0;
wire    ap_block_pp4_stage1_11001;
reg   [9:0] Real_addr_4_reg_1935;
reg   [9:0] Imag_addr_4_reg_1940;
reg   [9:0] Real_addr_5_reg_1945;
reg   [9:0] Imag_addr_5_reg_1950;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter18;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state35;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter13;
reg    ap_enable_reg_pp1_iter14;
reg    ap_enable_reg_pp1_iter15;
reg    ap_enable_reg_pp1_iter16;
reg    ap_enable_reg_pp1_iter18;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state61;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter13;
reg    ap_enable_reg_pp2_iter14;
reg    ap_enable_reg_pp2_iter15;
reg    ap_enable_reg_pp2_iter16;
reg    ap_enable_reg_pp2_iter18;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state87;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter9;
reg    ap_enable_reg_pp3_iter10;
reg    ap_enable_reg_pp3_iter11;
reg    ap_enable_reg_pp3_iter13;
reg    ap_enable_reg_pp3_iter14;
reg    ap_enable_reg_pp3_iter15;
reg    ap_enable_reg_pp3_iter16;
reg    ap_enable_reg_pp3_iter18;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state107;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_state110_pp4_stage3_iter0;
wire    ap_block_pp4_stage3_subdone;
wire    ap_CS_fsm_pp4_stage3;
reg   [10:0] c_0_0_reg_504;
reg   [2:0] ap_phi_mux_c_aux_0_0_phi_fu_520_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_c_aux_0_1_phi_fu_532_p4;
wire    ap_block_pp1_stage0;
reg   [2:0] ap_phi_mux_c_aux_0_2_phi_fu_544_p4;
wire    ap_block_pp2_stage0;
reg   [2:0] ap_phi_mux_c_aux_0_3_phi_fu_556_p4;
wire    ap_block_pp3_stage0;
reg   [8:0] ap_phi_mux_i_0_phi_fu_568_p4;
wire    ap_block_pp4_stage0;
wire   [63:0] zext_ln49_fu_760_p1;
wire   [63:0] zext_ln51_fu_781_p1;
wire   [63:0] zext_ln84_fu_903_p1;
wire   [63:0] zext_ln49_1_fu_924_p1;
wire   [63:0] zext_ln51_1_fu_945_p1;
wire   [63:0] zext_ln84_1_fu_1061_p1;
wire   [63:0] zext_ln49_2_fu_1082_p1;
wire   [63:0] zext_ln51_2_fu_1103_p1;
wire   [63:0] zext_ln84_2_fu_1224_p1;
wire   [63:0] zext_ln49_3_fu_1245_p1;
wire   [63:0] zext_ln51_3_fu_1266_p1;
wire   [63:0] zext_ln84_3_fu_1382_p1;
wire   [63:0] zext_ln96_fu_1406_p1;
wire   [63:0] zext_ln99_fu_1412_p1;
wire    ap_block_pp4_stage1;
wire   [63:0] zext_ln101_fu_1418_p1;
wire    ap_block_pp4_stage2;
reg   [31:0] Real_r_Addr_A_orig;
wire    ap_block_pp4_stage3_11001;
wire    ap_block_pp4_stage3;
reg   [31:0] Imag_Addr_A_orig;
reg   [31:0] grp_fu_575_p1;
reg   [31:0] grp_fu_579_p1;
reg   [31:0] grp_fu_599_p0;
reg   [31:0] grp_fu_599_p1;
reg   [31:0] grp_fu_603_p0;
reg   [31:0] grp_fu_603_p1;
reg   [31:0] grp_fu_607_p0;
reg   [31:0] grp_fu_611_p0;
reg   [31:0] grp_fu_615_p0;
reg   [31:0] grp_fu_619_p0;
wire   [9:0] or_ln43_fu_749_p2;
wire   [9:0] or_ln44_fu_766_p2;
wire   [9:0] or_ln45_fu_771_p2;
wire   [1:0] tmp_4_fu_803_p5;
wire   [7:0] tmp_23_fu_885_p4;
wire   [10:0] add_ln_fu_895_p3;
wire   [9:0] or_ln43_1_fu_914_p2;
wire   [9:0] or_ln44_1_fu_930_p2;
wire   [9:0] or_ln45_1_fu_935_p2;
wire   [1:0] tmp_24_fu_970_p5;
wire   [10:0] zext_ln74_fu_1052_p1;
wire   [10:0] add_ln84_fu_1056_p2;
wire   [9:0] or_ln43_2_fu_1072_p2;
wire   [9:0] or_ln44_2_fu_1088_p2;
wire   [9:0] or_ln45_2_fu_1093_p2;
wire   [1:0] tmp_29_fu_1125_p5;
wire   [6:0] tmp_32_fu_1207_p4;
wire   [9:0] tmp_33_fu_1216_p3;
wire   [9:0] or_ln43_3_fu_1235_p2;
wire   [9:0] or_ln44_3_fu_1251_p2;
wire   [9:0] or_ln45_3_fu_1256_p2;
wire   [1:0] tmp_34_fu_1291_p5;
wire   [10:0] zext_ln74_1_fu_1373_p1;
wire   [10:0] add_ln84_1_fu_1377_p2;
wire    ap_CS_fsm_state112;
reg   [38:0] ap_NS_fsm;
wire    ap_block_pp4_stage1_subdone;
wire    ap_block_pp4_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;

// power-on initialization
initial begin
#0 ap_CS_fsm = 39'd1;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp3_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp3_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp1_iter17 = 1'b0;
#0 ap_enable_reg_pp2_iter17 = 1'b0;
#0 ap_enable_reg_pp3_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp1_iter18 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp2_iter14 = 1'b0;
#0 ap_enable_reg_pp2_iter15 = 1'b0;
#0 ap_enable_reg_pp2_iter16 = 1'b0;
#0 ap_enable_reg_pp2_iter18 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter9 = 1'b0;
#0 ap_enable_reg_pp3_iter10 = 1'b0;
#0 ap_enable_reg_pp3_iter11 = 1'b0;
#0 ap_enable_reg_pp3_iter13 = 1'b0;
#0 ap_enable_reg_pp3_iter14 = 1'b0;
#0 ap_enable_reg_pp3_iter15 = 1'b0;
#0 ap_enable_reg_pp3_iter16 = 1'b0;
#0 ap_enable_reg_pp3_iter18 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
end

Reorder_fft_lut_rbkb #(
    .DataWidth( 10 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
lut_reorder_I_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lut_reorder_I_address0),
    .ce0(lut_reorder_I_ce0),
    .q0(lut_reorder_I_q0)
);

Reorder_fft_lut_rcud #(
    .DataWidth( 10 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
lut_reorder_J_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lut_reorder_J_address0),
    .ce0(lut_reorder_J_ce0),
    .q0(lut_reorder_J_q0)
);

Reorder_fft_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
Reorder_fft_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_677),
    .din1(grp_fu_575_p1),
    .ce(1'b1),
    .dout(grp_fu_575_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_682),
    .din1(grp_fu_579_p1),
    .ce(1'b1),
    .dout(grp_fu_579_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_687),
    .din1(reg_623),
    .ce(1'b1),
    .dout(grp_fu_583_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_692),
    .din1(reg_647),
    .ce(1'b1),
    .dout(grp_fu_587_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_712),
    .din1(reg_707),
    .ce(1'b1),
    .dout(grp_fu_591_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_722),
    .din1(reg_717),
    .ce(1'b1),
    .dout(grp_fu_595_p2)
);

Reorder_fft_fmul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fmul_eOg_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_599_p0),
    .din1(grp_fu_599_p1),
    .ce(1'b1),
    .dout(grp_fu_599_p2)
);

Reorder_fft_fmul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fmul_eOg_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_603_p0),
    .din1(grp_fu_603_p1),
    .ce(1'b1),
    .dout(grp_fu_603_p2)
);

Reorder_fft_fmul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fmul_eOg_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_607_p0),
    .din1(reg_634),
    .ce(1'b1),
    .dout(grp_fu_607_p2)
);

Reorder_fft_fmul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fmul_eOg_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_611_p0),
    .din1(reg_656),
    .ce(1'b1),
    .dout(grp_fu_611_p2)
);

Reorder_fft_fmul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fmul_eOg_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_615_p0),
    .din1(reg_697),
    .ce(1'b1),
    .dout(grp_fu_615_p2)
);

Reorder_fft_fmul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fmul_eOg_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_619_p0),
    .din1(reg_702),
    .ce(1'b1),
    .dout(grp_fu_619_p2)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U13(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd1065353216),
    .din3(32'd3212836864),
    .din4(tmp_4_fu_803_p5),
    .dout(tmp_4_fu_803_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U14(
    .din0(32'd1065353216),
    .din1(32'd1065353216),
    .din2(32'd3212836864),
    .din3(32'd3212836864),
    .din4(trunc_ln74_reg_1504_pp0_iter8_reg),
    .dout(tmp_14_fu_857_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U15(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd3212836864),
    .din3(32'd1065353216),
    .din4(trunc_ln74_reg_1504_pp0_iter8_reg),
    .dout(tmp_20_fu_871_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U16(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd1065353216),
    .din3(32'd3212836864),
    .din4(tmp_24_fu_970_p5),
    .dout(tmp_24_fu_970_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U17(
    .din0(32'd1065353216),
    .din1(32'd1065353216),
    .din2(32'd3212836864),
    .din3(32'd3212836864),
    .din4(trunc_ln74_1_reg_1623_pp1_iter8_reg),
    .dout(tmp_26_fu_1024_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U18(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd3212836864),
    .din3(32'd1065353216),
    .din4(trunc_ln74_1_reg_1623_pp1_iter8_reg),
    .dout(tmp_28_fu_1038_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U19(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd1065353216),
    .din3(32'd3212836864),
    .din4(tmp_29_fu_1125_p5),
    .dout(tmp_29_fu_1125_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U20(
    .din0(32'd1065353216),
    .din1(32'd1065353216),
    .din2(32'd3212836864),
    .din3(32'd3212836864),
    .din4(trunc_ln74_2_reg_1737_pp2_iter8_reg),
    .dout(tmp_30_fu_1179_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U21(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd3212836864),
    .din3(32'd1065353216),
    .din4(trunc_ln74_2_reg_1737_pp2_iter8_reg),
    .dout(tmp_31_fu_1193_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U22(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd1065353216),
    .din3(32'd3212836864),
    .din4(tmp_34_fu_1291_p5),
    .dout(tmp_34_fu_1291_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U23(
    .din0(32'd1065353216),
    .din1(32'd1065353216),
    .din2(32'd3212836864),
    .din3(32'd3212836864),
    .din4(trunc_ln74_3_reg_1856_pp3_iter8_reg),
    .dout(tmp_35_fu_1345_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U24(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd3212836864),
    .din3(32'd1065353216),
    .din4(trunc_ln74_3_reg_1856_pp3_iter8_reg),
    .dout(tmp_36_fu_1359_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state35) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state34)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state35)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state35);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
        end else if ((1'b1 == ap_CS_fsm_state34)) begin
            ap_enable_reg_pp1_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state61) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state60)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state61)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state61);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
        end else if ((1'b1 == ap_CS_fsm_state60)) begin
            ap_enable_reg_pp2_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state87) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state86)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state87)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state87);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter10 <= ap_enable_reg_pp3_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter11 <= ap_enable_reg_pp3_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter12 <= ap_enable_reg_pp3_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter13 <= ap_enable_reg_pp3_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter14 <= ap_enable_reg_pp3_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter15 <= ap_enable_reg_pp3_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter16 <= ap_enable_reg_pp3_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter17 <= ap_enable_reg_pp3_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter18 <= ap_enable_reg_pp3_iter17;
        end else if ((1'b1 == ap_CS_fsm_state86)) begin
            ap_enable_reg_pp3_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter9 <= ap_enable_reg_pp3_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state107) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((tmp_37_fu_737_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_subdone)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if (((tmp_37_fu_737_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        c_0_0_reg_504 <= add_ln41_fu_1388_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        c_0_0_reg_504 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_reg_1495 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_aux_0_0_reg_516 <= add_ln65_reg_1499;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        c_aux_0_0_reg_516 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_1_reg_1614 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        c_aux_0_1_reg_528 <= add_ln65_1_reg_1618;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        c_aux_0_1_reg_528 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_2_reg_1728 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        c_aux_0_2_reg_540 <= add_ln65_2_reg_1732;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        c_aux_0_2_reg_540 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_3_reg_1847 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        c_aux_0_3_reg_552 <= add_ln65_3_reg_1851;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        c_aux_0_3_reg_552 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_37_fu_737_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_564 <= 9'd0;
    end else if (((icmp_ln91_reg_1911 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        i_0_reg_564 <= i_reg_1915;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        Imag_addr_11_reg_1693[2 : 1] <= zext_ln49_2_fu_1082_p1[2 : 1];
Imag_addr_11_reg_1693[9 : 4] <= zext_ln49_2_fu_1082_p1[9 : 4];
        Real_addr_13_reg_1688[2 : 1] <= zext_ln49_2_fu_1082_p1[2 : 1];
Real_addr_13_reg_1688[9 : 4] <= zext_ln49_2_fu_1082_p1[9 : 4];
        or_ln41_1_reg_1673[2 : 0] <= or_ln41_1_fu_1067_p2[2 : 0];
or_ln41_1_reg_1673[9 : 4] <= or_ln41_1_fu_1067_p2[9 : 4];
        zext_ln47_2_reg_1678[2 : 0] <= zext_ln47_2_fu_1077_p1[2 : 0];
zext_ln47_2_reg_1678[9 : 4] <= zext_ln47_2_fu_1077_p1[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        Imag_addr_12_reg_1713[2] <= zext_ln51_2_fu_1103_p1[2];
Imag_addr_12_reg_1713[9 : 4] <= zext_ln51_2_fu_1103_p1[9 : 4];
        Real_addr_14_reg_1708[2] <= zext_ln51_2_fu_1103_p1[2];
Real_addr_14_reg_1708[9 : 4] <= zext_ln51_2_fu_1103_p1[9 : 4];
        zext_ln48_2_reg_1698[0] <= zext_ln48_2_fu_1098_p1[0];
zext_ln48_2_reg_1698[2] <= zext_ln48_2_fu_1098_p1[2];
zext_ln48_2_reg_1698[9 : 4] <= zext_ln48_2_fu_1098_p1[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        Imag_addr_16_reg_1807[1] <= zext_ln49_3_fu_1245_p1[1];
Imag_addr_16_reg_1807[9 : 4] <= zext_ln49_3_fu_1245_p1[9 : 4];
        Real_addr_18_reg_1802[1] <= zext_ln49_3_fu_1245_p1[1];
Real_addr_18_reg_1802[9 : 4] <= zext_ln49_3_fu_1245_p1[9 : 4];
        or_ln41_2_reg_1787[1 : 0] <= or_ln41_2_fu_1230_p2[1 : 0];
or_ln41_2_reg_1787[9 : 4] <= or_ln41_2_fu_1230_p2[9 : 4];
        zext_ln47_3_reg_1792[1 : 0] <= zext_ln47_3_fu_1240_p1[1 : 0];
zext_ln47_3_reg_1792[9 : 4] <= zext_ln47_3_fu_1240_p1[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        Imag_addr_17_reg_1827[9 : 4] <= zext_ln51_3_fu_1266_p1[9 : 4];
        Real_addr_19_reg_1822[9 : 4] <= zext_ln51_3_fu_1266_p1[9 : 4];
        zext_ln48_3_reg_1812[0] <= zext_ln48_3_fu_1261_p1[0];
zext_ln48_3_reg_1812[9 : 4] <= zext_ln48_3_fu_1261_p1[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Imag_addr_1_reg_1480[9 : 2] <= zext_ln51_fu_781_p1[9 : 2];
        Real_addr_3_reg_1475[9 : 2] <= zext_ln51_fu_781_p1[9 : 2];
        zext_ln48_reg_1465[0] <= zext_ln48_fu_776_p1[0];
zext_ln48_reg_1465[9 : 2] <= zext_ln48_fu_776_p1[9 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1911 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_11001))) begin
        Imag_addr_4_reg_1940 <= zext_ln99_fu_1412_p1;
        Real_addr_4_reg_1935 <= zext_ln99_fu_1412_p1;
        indexJ_reg_1930 <= lut_reorder_J_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_reg_1911 == 1'd0) & (1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        Imag_addr_5_reg_1950 <= zext_ln101_fu_1418_p1;
        Real_addr_5_reg_1945 <= zext_ln101_fu_1418_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        Imag_addr_6_reg_1574[1] <= zext_ln49_1_fu_924_p1[1];
Imag_addr_6_reg_1574[9 : 3] <= zext_ln49_1_fu_924_p1[9 : 3];
        Real_addr_8_reg_1569[1] <= zext_ln49_1_fu_924_p1[1];
Real_addr_8_reg_1569[9 : 3] <= zext_ln49_1_fu_924_p1[9 : 3];
        or_ln41_reg_1554[1 : 0] <= or_ln41_fu_909_p2[1 : 0];
or_ln41_reg_1554[9 : 3] <= or_ln41_fu_909_p2[9 : 3];
        zext_ln47_1_reg_1559[1 : 0] <= zext_ln47_1_fu_919_p1[1 : 0];
zext_ln47_1_reg_1559[9 : 3] <= zext_ln47_1_fu_919_p1[9 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        Imag_addr_7_reg_1594[9 : 3] <= zext_ln51_1_fu_945_p1[9 : 3];
        Real_addr_9_reg_1589[9 : 3] <= zext_ln51_1_fu_945_p1[9 : 3];
        zext_ln48_1_reg_1579[0] <= zext_ln48_1_fu_940_p1[0];
zext_ln48_1_reg_1579[9 : 3] <= zext_ln48_1_fu_940_p1[9 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_37_fu_737_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        Imag_addr_reg_1460[9 : 1] <= zext_ln49_fu_760_p1[9 : 1];
        Real_addr_2_reg_1455[9 : 1] <= zext_ln49_fu_760_p1[9 : 1];
        empty_19_reg_1427 <= empty_19_fu_745_p1;
        zext_ln47_reg_1445[10 : 0] <= zext_ln47_fu_755_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln65_1_reg_1618 <= add_ln65_1_fu_960_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        add_ln65_2_reg_1732 <= add_ln65_2_fu_1115_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        add_ln65_3_reg_1851 <= add_ln65_3_fu_1281_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln65_reg_1499 <= add_ln65_fu_793_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        c_aux_0_0_reg_516_pp0_iter10_reg <= c_aux_0_0_reg_516_pp0_iter9_reg;
        c_aux_0_0_reg_516_pp0_iter11_reg <= c_aux_0_0_reg_516_pp0_iter10_reg;
        c_aux_0_0_reg_516_pp0_iter12_reg <= c_aux_0_0_reg_516_pp0_iter11_reg;
        c_aux_0_0_reg_516_pp0_iter13_reg <= c_aux_0_0_reg_516_pp0_iter12_reg;
        c_aux_0_0_reg_516_pp0_iter14_reg <= c_aux_0_0_reg_516_pp0_iter13_reg;
        c_aux_0_0_reg_516_pp0_iter15_reg <= c_aux_0_0_reg_516_pp0_iter14_reg;
        c_aux_0_0_reg_516_pp0_iter16_reg <= c_aux_0_0_reg_516_pp0_iter15_reg;
        c_aux_0_0_reg_516_pp0_iter17_reg <= c_aux_0_0_reg_516_pp0_iter16_reg;
        c_aux_0_0_reg_516_pp0_iter2_reg <= c_aux_0_0_reg_516_pp0_iter1_reg;
        c_aux_0_0_reg_516_pp0_iter3_reg <= c_aux_0_0_reg_516_pp0_iter2_reg;
        c_aux_0_0_reg_516_pp0_iter4_reg <= c_aux_0_0_reg_516_pp0_iter3_reg;
        c_aux_0_0_reg_516_pp0_iter5_reg <= c_aux_0_0_reg_516_pp0_iter4_reg;
        c_aux_0_0_reg_516_pp0_iter6_reg <= c_aux_0_0_reg_516_pp0_iter5_reg;
        c_aux_0_0_reg_516_pp0_iter7_reg <= c_aux_0_0_reg_516_pp0_iter6_reg;
        c_aux_0_0_reg_516_pp0_iter8_reg <= c_aux_0_0_reg_516_pp0_iter7_reg;
        c_aux_0_0_reg_516_pp0_iter9_reg <= c_aux_0_0_reg_516_pp0_iter8_reg;
        icmp_ln65_reg_1495_pp0_iter10_reg <= icmp_ln65_reg_1495_pp0_iter9_reg;
        icmp_ln65_reg_1495_pp0_iter11_reg <= icmp_ln65_reg_1495_pp0_iter10_reg;
        icmp_ln65_reg_1495_pp0_iter12_reg <= icmp_ln65_reg_1495_pp0_iter11_reg;
        icmp_ln65_reg_1495_pp0_iter13_reg <= icmp_ln65_reg_1495_pp0_iter12_reg;
        icmp_ln65_reg_1495_pp0_iter14_reg <= icmp_ln65_reg_1495_pp0_iter13_reg;
        icmp_ln65_reg_1495_pp0_iter15_reg <= icmp_ln65_reg_1495_pp0_iter14_reg;
        icmp_ln65_reg_1495_pp0_iter16_reg <= icmp_ln65_reg_1495_pp0_iter15_reg;
        icmp_ln65_reg_1495_pp0_iter17_reg <= icmp_ln65_reg_1495_pp0_iter16_reg;
        icmp_ln65_reg_1495_pp0_iter2_reg <= icmp_ln65_reg_1495_pp0_iter1_reg;
        icmp_ln65_reg_1495_pp0_iter3_reg <= icmp_ln65_reg_1495_pp0_iter2_reg;
        icmp_ln65_reg_1495_pp0_iter4_reg <= icmp_ln65_reg_1495_pp0_iter3_reg;
        icmp_ln65_reg_1495_pp0_iter5_reg <= icmp_ln65_reg_1495_pp0_iter4_reg;
        icmp_ln65_reg_1495_pp0_iter6_reg <= icmp_ln65_reg_1495_pp0_iter5_reg;
        icmp_ln65_reg_1495_pp0_iter7_reg <= icmp_ln65_reg_1495_pp0_iter6_reg;
        icmp_ln65_reg_1495_pp0_iter8_reg <= icmp_ln65_reg_1495_pp0_iter7_reg;
        icmp_ln65_reg_1495_pp0_iter9_reg <= icmp_ln65_reg_1495_pp0_iter8_reg;
        tmp_4_reg_1510_pp0_iter2_reg <= tmp_4_reg_1510_pp0_iter1_reg;
        tmp_4_reg_1510_pp0_iter3_reg <= tmp_4_reg_1510_pp0_iter2_reg;
        trunc_ln74_reg_1504_pp0_iter2_reg <= trunc_ln74_reg_1504_pp0_iter1_reg;
        trunc_ln74_reg_1504_pp0_iter3_reg <= trunc_ln74_reg_1504_pp0_iter2_reg;
        trunc_ln74_reg_1504_pp0_iter4_reg <= trunc_ln74_reg_1504_pp0_iter3_reg;
        trunc_ln74_reg_1504_pp0_iter5_reg <= trunc_ln74_reg_1504_pp0_iter4_reg;
        trunc_ln74_reg_1504_pp0_iter6_reg <= trunc_ln74_reg_1504_pp0_iter5_reg;
        trunc_ln74_reg_1504_pp0_iter7_reg <= trunc_ln74_reg_1504_pp0_iter6_reg;
        trunc_ln74_reg_1504_pp0_iter8_reg <= trunc_ln74_reg_1504_pp0_iter7_reg;
        trunc_ln75_reg_1518_pp0_iter2_reg <= trunc_ln75_reg_1518_pp0_iter1_reg;
        trunc_ln75_reg_1518_pp0_iter3_reg <= trunc_ln75_reg_1518_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_aux_0_0_reg_516_pp0_iter1_reg <= c_aux_0_0_reg_516;
        icmp_ln65_reg_1495 <= icmp_ln65_fu_787_p2;
        icmp_ln65_reg_1495_pp0_iter1_reg <= icmp_ln65_reg_1495;
        tmp_4_reg_1510_pp0_iter1_reg <= tmp_4_reg_1510;
        trunc_ln74_reg_1504_pp0_iter1_reg <= trunc_ln74_reg_1504;
        trunc_ln75_reg_1518_pp0_iter1_reg <= trunc_ln75_reg_1518;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        c_aux_0_1_reg_528_pp1_iter10_reg <= c_aux_0_1_reg_528_pp1_iter9_reg;
        c_aux_0_1_reg_528_pp1_iter11_reg <= c_aux_0_1_reg_528_pp1_iter10_reg;
        c_aux_0_1_reg_528_pp1_iter12_reg <= c_aux_0_1_reg_528_pp1_iter11_reg;
        c_aux_0_1_reg_528_pp1_iter13_reg <= c_aux_0_1_reg_528_pp1_iter12_reg;
        c_aux_0_1_reg_528_pp1_iter14_reg <= c_aux_0_1_reg_528_pp1_iter13_reg;
        c_aux_0_1_reg_528_pp1_iter15_reg <= c_aux_0_1_reg_528_pp1_iter14_reg;
        c_aux_0_1_reg_528_pp1_iter16_reg <= c_aux_0_1_reg_528_pp1_iter15_reg;
        c_aux_0_1_reg_528_pp1_iter17_reg <= c_aux_0_1_reg_528_pp1_iter16_reg;
        c_aux_0_1_reg_528_pp1_iter2_reg <= c_aux_0_1_reg_528_pp1_iter1_reg;
        c_aux_0_1_reg_528_pp1_iter3_reg <= c_aux_0_1_reg_528_pp1_iter2_reg;
        c_aux_0_1_reg_528_pp1_iter4_reg <= c_aux_0_1_reg_528_pp1_iter3_reg;
        c_aux_0_1_reg_528_pp1_iter5_reg <= c_aux_0_1_reg_528_pp1_iter4_reg;
        c_aux_0_1_reg_528_pp1_iter6_reg <= c_aux_0_1_reg_528_pp1_iter5_reg;
        c_aux_0_1_reg_528_pp1_iter7_reg <= c_aux_0_1_reg_528_pp1_iter6_reg;
        c_aux_0_1_reg_528_pp1_iter8_reg <= c_aux_0_1_reg_528_pp1_iter7_reg;
        c_aux_0_1_reg_528_pp1_iter9_reg <= c_aux_0_1_reg_528_pp1_iter8_reg;
        icmp_ln65_1_reg_1614_pp1_iter10_reg <= icmp_ln65_1_reg_1614_pp1_iter9_reg;
        icmp_ln65_1_reg_1614_pp1_iter11_reg <= icmp_ln65_1_reg_1614_pp1_iter10_reg;
        icmp_ln65_1_reg_1614_pp1_iter12_reg <= icmp_ln65_1_reg_1614_pp1_iter11_reg;
        icmp_ln65_1_reg_1614_pp1_iter13_reg <= icmp_ln65_1_reg_1614_pp1_iter12_reg;
        icmp_ln65_1_reg_1614_pp1_iter14_reg <= icmp_ln65_1_reg_1614_pp1_iter13_reg;
        icmp_ln65_1_reg_1614_pp1_iter15_reg <= icmp_ln65_1_reg_1614_pp1_iter14_reg;
        icmp_ln65_1_reg_1614_pp1_iter16_reg <= icmp_ln65_1_reg_1614_pp1_iter15_reg;
        icmp_ln65_1_reg_1614_pp1_iter17_reg <= icmp_ln65_1_reg_1614_pp1_iter16_reg;
        icmp_ln65_1_reg_1614_pp1_iter2_reg <= icmp_ln65_1_reg_1614_pp1_iter1_reg;
        icmp_ln65_1_reg_1614_pp1_iter3_reg <= icmp_ln65_1_reg_1614_pp1_iter2_reg;
        icmp_ln65_1_reg_1614_pp1_iter4_reg <= icmp_ln65_1_reg_1614_pp1_iter3_reg;
        icmp_ln65_1_reg_1614_pp1_iter5_reg <= icmp_ln65_1_reg_1614_pp1_iter4_reg;
        icmp_ln65_1_reg_1614_pp1_iter6_reg <= icmp_ln65_1_reg_1614_pp1_iter5_reg;
        icmp_ln65_1_reg_1614_pp1_iter7_reg <= icmp_ln65_1_reg_1614_pp1_iter6_reg;
        icmp_ln65_1_reg_1614_pp1_iter8_reg <= icmp_ln65_1_reg_1614_pp1_iter7_reg;
        icmp_ln65_1_reg_1614_pp1_iter9_reg <= icmp_ln65_1_reg_1614_pp1_iter8_reg;
        tmp_24_reg_1629_pp1_iter2_reg <= tmp_24_reg_1629_pp1_iter1_reg;
        tmp_24_reg_1629_pp1_iter3_reg <= tmp_24_reg_1629_pp1_iter2_reg;
        trunc_ln74_1_reg_1623_pp1_iter2_reg <= trunc_ln74_1_reg_1623_pp1_iter1_reg;
        trunc_ln74_1_reg_1623_pp1_iter3_reg <= trunc_ln74_1_reg_1623_pp1_iter2_reg;
        trunc_ln74_1_reg_1623_pp1_iter4_reg <= trunc_ln74_1_reg_1623_pp1_iter3_reg;
        trunc_ln74_1_reg_1623_pp1_iter5_reg <= trunc_ln74_1_reg_1623_pp1_iter4_reg;
        trunc_ln74_1_reg_1623_pp1_iter6_reg <= trunc_ln74_1_reg_1623_pp1_iter5_reg;
        trunc_ln74_1_reg_1623_pp1_iter7_reg <= trunc_ln74_1_reg_1623_pp1_iter6_reg;
        trunc_ln74_1_reg_1623_pp1_iter8_reg <= trunc_ln74_1_reg_1623_pp1_iter7_reg;
        trunc_ln75_1_reg_1637_pp1_iter2_reg <= trunc_ln75_1_reg_1637_pp1_iter1_reg;
        trunc_ln75_1_reg_1637_pp1_iter3_reg <= trunc_ln75_1_reg_1637_pp1_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c_aux_0_1_reg_528_pp1_iter1_reg <= c_aux_0_1_reg_528;
        icmp_ln65_1_reg_1614 <= icmp_ln65_1_fu_954_p2;
        icmp_ln65_1_reg_1614_pp1_iter1_reg <= icmp_ln65_1_reg_1614;
        tmp_24_reg_1629_pp1_iter1_reg <= tmp_24_reg_1629;
        trunc_ln74_1_reg_1623_pp1_iter1_reg <= trunc_ln74_1_reg_1623;
        trunc_ln75_1_reg_1637_pp1_iter1_reg <= trunc_ln75_1_reg_1637;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        c_aux_0_2_reg_540_pp2_iter10_reg <= c_aux_0_2_reg_540_pp2_iter9_reg;
        c_aux_0_2_reg_540_pp2_iter11_reg <= c_aux_0_2_reg_540_pp2_iter10_reg;
        c_aux_0_2_reg_540_pp2_iter12_reg <= c_aux_0_2_reg_540_pp2_iter11_reg;
        c_aux_0_2_reg_540_pp2_iter13_reg <= c_aux_0_2_reg_540_pp2_iter12_reg;
        c_aux_0_2_reg_540_pp2_iter14_reg <= c_aux_0_2_reg_540_pp2_iter13_reg;
        c_aux_0_2_reg_540_pp2_iter15_reg <= c_aux_0_2_reg_540_pp2_iter14_reg;
        c_aux_0_2_reg_540_pp2_iter16_reg <= c_aux_0_2_reg_540_pp2_iter15_reg;
        c_aux_0_2_reg_540_pp2_iter17_reg <= c_aux_0_2_reg_540_pp2_iter16_reg;
        c_aux_0_2_reg_540_pp2_iter2_reg <= c_aux_0_2_reg_540_pp2_iter1_reg;
        c_aux_0_2_reg_540_pp2_iter3_reg <= c_aux_0_2_reg_540_pp2_iter2_reg;
        c_aux_0_2_reg_540_pp2_iter4_reg <= c_aux_0_2_reg_540_pp2_iter3_reg;
        c_aux_0_2_reg_540_pp2_iter5_reg <= c_aux_0_2_reg_540_pp2_iter4_reg;
        c_aux_0_2_reg_540_pp2_iter6_reg <= c_aux_0_2_reg_540_pp2_iter5_reg;
        c_aux_0_2_reg_540_pp2_iter7_reg <= c_aux_0_2_reg_540_pp2_iter6_reg;
        c_aux_0_2_reg_540_pp2_iter8_reg <= c_aux_0_2_reg_540_pp2_iter7_reg;
        c_aux_0_2_reg_540_pp2_iter9_reg <= c_aux_0_2_reg_540_pp2_iter8_reg;
        icmp_ln65_2_reg_1728_pp2_iter10_reg <= icmp_ln65_2_reg_1728_pp2_iter9_reg;
        icmp_ln65_2_reg_1728_pp2_iter11_reg <= icmp_ln65_2_reg_1728_pp2_iter10_reg;
        icmp_ln65_2_reg_1728_pp2_iter12_reg <= icmp_ln65_2_reg_1728_pp2_iter11_reg;
        icmp_ln65_2_reg_1728_pp2_iter13_reg <= icmp_ln65_2_reg_1728_pp2_iter12_reg;
        icmp_ln65_2_reg_1728_pp2_iter14_reg <= icmp_ln65_2_reg_1728_pp2_iter13_reg;
        icmp_ln65_2_reg_1728_pp2_iter15_reg <= icmp_ln65_2_reg_1728_pp2_iter14_reg;
        icmp_ln65_2_reg_1728_pp2_iter16_reg <= icmp_ln65_2_reg_1728_pp2_iter15_reg;
        icmp_ln65_2_reg_1728_pp2_iter17_reg <= icmp_ln65_2_reg_1728_pp2_iter16_reg;
        icmp_ln65_2_reg_1728_pp2_iter2_reg <= icmp_ln65_2_reg_1728_pp2_iter1_reg;
        icmp_ln65_2_reg_1728_pp2_iter3_reg <= icmp_ln65_2_reg_1728_pp2_iter2_reg;
        icmp_ln65_2_reg_1728_pp2_iter4_reg <= icmp_ln65_2_reg_1728_pp2_iter3_reg;
        icmp_ln65_2_reg_1728_pp2_iter5_reg <= icmp_ln65_2_reg_1728_pp2_iter4_reg;
        icmp_ln65_2_reg_1728_pp2_iter6_reg <= icmp_ln65_2_reg_1728_pp2_iter5_reg;
        icmp_ln65_2_reg_1728_pp2_iter7_reg <= icmp_ln65_2_reg_1728_pp2_iter6_reg;
        icmp_ln65_2_reg_1728_pp2_iter8_reg <= icmp_ln65_2_reg_1728_pp2_iter7_reg;
        icmp_ln65_2_reg_1728_pp2_iter9_reg <= icmp_ln65_2_reg_1728_pp2_iter8_reg;
        tmp_29_reg_1743_pp2_iter2_reg <= tmp_29_reg_1743_pp2_iter1_reg;
        tmp_29_reg_1743_pp2_iter3_reg <= tmp_29_reg_1743_pp2_iter2_reg;
        trunc_ln74_2_reg_1737_pp2_iter2_reg <= trunc_ln74_2_reg_1737_pp2_iter1_reg;
        trunc_ln74_2_reg_1737_pp2_iter3_reg <= trunc_ln74_2_reg_1737_pp2_iter2_reg;
        trunc_ln74_2_reg_1737_pp2_iter4_reg <= trunc_ln74_2_reg_1737_pp2_iter3_reg;
        trunc_ln74_2_reg_1737_pp2_iter5_reg <= trunc_ln74_2_reg_1737_pp2_iter4_reg;
        trunc_ln74_2_reg_1737_pp2_iter6_reg <= trunc_ln74_2_reg_1737_pp2_iter5_reg;
        trunc_ln74_2_reg_1737_pp2_iter7_reg <= trunc_ln74_2_reg_1737_pp2_iter6_reg;
        trunc_ln74_2_reg_1737_pp2_iter8_reg <= trunc_ln74_2_reg_1737_pp2_iter7_reg;
        trunc_ln75_2_reg_1751_pp2_iter2_reg <= trunc_ln75_2_reg_1751_pp2_iter1_reg;
        trunc_ln75_2_reg_1751_pp2_iter3_reg <= trunc_ln75_2_reg_1751_pp2_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        c_aux_0_2_reg_540_pp2_iter1_reg <= c_aux_0_2_reg_540;
        icmp_ln65_2_reg_1728 <= icmp_ln65_2_fu_1109_p2;
        icmp_ln65_2_reg_1728_pp2_iter1_reg <= icmp_ln65_2_reg_1728;
        tmp_29_reg_1743_pp2_iter1_reg <= tmp_29_reg_1743;
        trunc_ln74_2_reg_1737_pp2_iter1_reg <= trunc_ln74_2_reg_1737;
        trunc_ln75_2_reg_1751_pp2_iter1_reg <= trunc_ln75_2_reg_1751;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        c_aux_0_3_reg_552_pp3_iter10_reg <= c_aux_0_3_reg_552_pp3_iter9_reg;
        c_aux_0_3_reg_552_pp3_iter11_reg <= c_aux_0_3_reg_552_pp3_iter10_reg;
        c_aux_0_3_reg_552_pp3_iter12_reg <= c_aux_0_3_reg_552_pp3_iter11_reg;
        c_aux_0_3_reg_552_pp3_iter13_reg <= c_aux_0_3_reg_552_pp3_iter12_reg;
        c_aux_0_3_reg_552_pp3_iter14_reg <= c_aux_0_3_reg_552_pp3_iter13_reg;
        c_aux_0_3_reg_552_pp3_iter15_reg <= c_aux_0_3_reg_552_pp3_iter14_reg;
        c_aux_0_3_reg_552_pp3_iter16_reg <= c_aux_0_3_reg_552_pp3_iter15_reg;
        c_aux_0_3_reg_552_pp3_iter17_reg <= c_aux_0_3_reg_552_pp3_iter16_reg;
        c_aux_0_3_reg_552_pp3_iter2_reg <= c_aux_0_3_reg_552_pp3_iter1_reg;
        c_aux_0_3_reg_552_pp3_iter3_reg <= c_aux_0_3_reg_552_pp3_iter2_reg;
        c_aux_0_3_reg_552_pp3_iter4_reg <= c_aux_0_3_reg_552_pp3_iter3_reg;
        c_aux_0_3_reg_552_pp3_iter5_reg <= c_aux_0_3_reg_552_pp3_iter4_reg;
        c_aux_0_3_reg_552_pp3_iter6_reg <= c_aux_0_3_reg_552_pp3_iter5_reg;
        c_aux_0_3_reg_552_pp3_iter7_reg <= c_aux_0_3_reg_552_pp3_iter6_reg;
        c_aux_0_3_reg_552_pp3_iter8_reg <= c_aux_0_3_reg_552_pp3_iter7_reg;
        c_aux_0_3_reg_552_pp3_iter9_reg <= c_aux_0_3_reg_552_pp3_iter8_reg;
        icmp_ln65_3_reg_1847_pp3_iter10_reg <= icmp_ln65_3_reg_1847_pp3_iter9_reg;
        icmp_ln65_3_reg_1847_pp3_iter11_reg <= icmp_ln65_3_reg_1847_pp3_iter10_reg;
        icmp_ln65_3_reg_1847_pp3_iter12_reg <= icmp_ln65_3_reg_1847_pp3_iter11_reg;
        icmp_ln65_3_reg_1847_pp3_iter13_reg <= icmp_ln65_3_reg_1847_pp3_iter12_reg;
        icmp_ln65_3_reg_1847_pp3_iter14_reg <= icmp_ln65_3_reg_1847_pp3_iter13_reg;
        icmp_ln65_3_reg_1847_pp3_iter15_reg <= icmp_ln65_3_reg_1847_pp3_iter14_reg;
        icmp_ln65_3_reg_1847_pp3_iter16_reg <= icmp_ln65_3_reg_1847_pp3_iter15_reg;
        icmp_ln65_3_reg_1847_pp3_iter17_reg <= icmp_ln65_3_reg_1847_pp3_iter16_reg;
        icmp_ln65_3_reg_1847_pp3_iter2_reg <= icmp_ln65_3_reg_1847_pp3_iter1_reg;
        icmp_ln65_3_reg_1847_pp3_iter3_reg <= icmp_ln65_3_reg_1847_pp3_iter2_reg;
        icmp_ln65_3_reg_1847_pp3_iter4_reg <= icmp_ln65_3_reg_1847_pp3_iter3_reg;
        icmp_ln65_3_reg_1847_pp3_iter5_reg <= icmp_ln65_3_reg_1847_pp3_iter4_reg;
        icmp_ln65_3_reg_1847_pp3_iter6_reg <= icmp_ln65_3_reg_1847_pp3_iter5_reg;
        icmp_ln65_3_reg_1847_pp3_iter7_reg <= icmp_ln65_3_reg_1847_pp3_iter6_reg;
        icmp_ln65_3_reg_1847_pp3_iter8_reg <= icmp_ln65_3_reg_1847_pp3_iter7_reg;
        icmp_ln65_3_reg_1847_pp3_iter9_reg <= icmp_ln65_3_reg_1847_pp3_iter8_reg;
        tmp_34_reg_1862_pp3_iter2_reg <= tmp_34_reg_1862_pp3_iter1_reg;
        tmp_34_reg_1862_pp3_iter3_reg <= tmp_34_reg_1862_pp3_iter2_reg;
        trunc_ln74_3_reg_1856_pp3_iter2_reg <= trunc_ln74_3_reg_1856_pp3_iter1_reg;
        trunc_ln74_3_reg_1856_pp3_iter3_reg <= trunc_ln74_3_reg_1856_pp3_iter2_reg;
        trunc_ln74_3_reg_1856_pp3_iter4_reg <= trunc_ln74_3_reg_1856_pp3_iter3_reg;
        trunc_ln74_3_reg_1856_pp3_iter5_reg <= trunc_ln74_3_reg_1856_pp3_iter4_reg;
        trunc_ln74_3_reg_1856_pp3_iter6_reg <= trunc_ln74_3_reg_1856_pp3_iter5_reg;
        trunc_ln74_3_reg_1856_pp3_iter7_reg <= trunc_ln74_3_reg_1856_pp3_iter6_reg;
        trunc_ln74_3_reg_1856_pp3_iter8_reg <= trunc_ln74_3_reg_1856_pp3_iter7_reg;
        trunc_ln75_3_reg_1870_pp3_iter2_reg <= trunc_ln75_3_reg_1870_pp3_iter1_reg;
        trunc_ln75_3_reg_1870_pp3_iter3_reg <= trunc_ln75_3_reg_1870_pp3_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        c_aux_0_3_reg_552_pp3_iter1_reg <= c_aux_0_3_reg_552;
        icmp_ln65_3_reg_1847 <= icmp_ln65_3_fu_1275_p2;
        icmp_ln65_3_reg_1847_pp3_iter1_reg <= icmp_ln65_3_reg_1847;
        tmp_34_reg_1862_pp3_iter1_reg <= tmp_34_reg_1862;
        trunc_ln74_3_reg_1856_pp3_iter1_reg <= trunc_ln74_3_reg_1856;
        trunc_ln75_3_reg_1870_pp3_iter1_reg <= trunc_ln75_3_reg_1870;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        i_reg_1915 <= i_fu_1400_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln91_reg_1911 <= icmp_ln91_fu_1394_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state3) | ((icmp_ln91_reg_1911 == 1'd0) & (1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)))) begin
        reg_623 <= Real_r_Dout_A;
        reg_629 <= Imag_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_634 <= Real_r_Dout_A;
        reg_639 <= Imag_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_643 <= Real_r_Dout_A;
        reg_647 <= Imag_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_652 <= Real_r_Dout_A;
        reg_656 <= Imag_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_661 <= Imag_Dout_A;
        reg_665 <= Real_r_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_669 <= Imag_Dout_A;
        reg_673 <= Real_r_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln65_3_reg_1847_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((icmp_ln65_2_reg_1728_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((icmp_ln65_1_reg_1614_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((icmp_ln65_reg_1495_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_677 <= grp_fu_599_p2;
        reg_682 <= grp_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln65_3_reg_1847_pp3_iter6_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter7 == 1'b1)) | ((icmp_ln65_2_reg_1728_pp2_iter6_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter7 == 1'b1)) | ((icmp_ln65_1_reg_1614_pp1_iter6_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((icmp_ln65_reg_1495_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_687 <= grp_fu_607_p2;
        reg_692 <= grp_fu_611_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln65_3_reg_1847_pp3_iter7_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter8 == 1'b1)) | ((icmp_ln65_2_reg_1728_pp2_iter7_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter8 == 1'b1)) | ((icmp_ln65_1_reg_1614_pp1_iter7_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1)) | ((icmp_ln65_reg_1495_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_697 <= grp_fu_575_p2;
        reg_702 <= grp_fu_579_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln65_3_reg_1847_pp3_iter11_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter12 == 1'b1)) | ((icmp_ln65_2_reg_1728_pp2_iter11_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter12 == 1'b1)) | ((icmp_ln65_1_reg_1614_pp1_iter11_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter12 == 1'b1)) | ((icmp_ln65_reg_1495_pp0_iter11_reg == 1'd0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_707 <= grp_fu_583_p2;
        reg_712 <= grp_fu_615_p2;
        reg_717 <= grp_fu_587_p2;
        reg_722 <= grp_fu_619_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln65_3_reg_1847_pp3_iter16_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter17 == 1'b1)) | ((icmp_ln65_2_reg_1728_pp2_iter16_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter17 == 1'b1)) | ((icmp_ln65_1_reg_1614_pp1_iter16_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter17 == 1'b1)) | ((icmp_ln65_reg_1495_pp0_iter16_reg == 1'd0) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_727 <= grp_fu_591_p2;
        reg_732 <= grp_fu_595_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_1_fu_954_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_24_reg_1629 <= tmp_24_fu_970_p6;
        trunc_ln74_1_reg_1623 <= trunc_ln74_1_fu_966_p1;
        trunc_ln75_1_reg_1637 <= trunc_ln75_1_fu_986_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_2_fu_1109_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_29_reg_1743 <= tmp_29_fu_1125_p6;
        trunc_ln74_2_reg_1737 <= trunc_ln74_2_fu_1121_p1;
        trunc_ln75_2_reg_1751 <= trunc_ln75_2_fu_1141_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_3_fu_1275_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_34_reg_1862 <= tmp_34_fu_1291_p6;
        trunc_ln74_3_reg_1856 <= trunc_ln74_3_fu_1287_p1;
        trunc_ln75_3_reg_1870 <= trunc_ln75_3_fu_1307_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln65_fu_787_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_4_reg_1510 <= tmp_4_fu_803_p6;
        trunc_ln74_reg_1504 <= trunc_ln74_fu_799_p1;
        trunc_ln75_reg_1518 <= trunc_ln75_fu_819_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        zext_ln47_4_reg_1609[1 : 0] <= zext_ln47_4_fu_951_p1[1 : 0];
zext_ln47_4_reg_1609[9 : 3] <= zext_ln47_4_fu_951_p1[9 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        zext_ln47_5_reg_1842[1 : 0] <= zext_ln47_5_fu_1272_p1[1 : 0];
zext_ln47_5_reg_1842[9 : 4] <= zext_ln47_5_fu_1272_p1[9 : 4];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        Imag_Addr_A_orig = Imag_addr_5_reg_1950;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3))) begin
        Imag_Addr_A_orig = Imag_addr_4_reg_1940;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2))) begin
        Imag_Addr_A_orig = zext_ln101_fu_1418_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1))) begin
        Imag_Addr_A_orig = zext_ln99_fu_1412_p1;
    end else if (((ap_enable_reg_pp3_iter18 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        Imag_Addr_A_orig = zext_ln84_3_fu_1382_p1;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        Imag_Addr_A_orig = Imag_addr_17_reg_1827;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        Imag_Addr_A_orig = Imag_addr_16_reg_1807;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        Imag_Addr_A_orig = zext_ln48_3_reg_1812;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        Imag_Addr_A_orig = zext_ln47_3_reg_1792;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        Imag_Addr_A_orig = zext_ln51_3_fu_1266_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        Imag_Addr_A_orig = zext_ln49_3_fu_1245_p1;
    end else if (((ap_enable_reg_pp2_iter18 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        Imag_Addr_A_orig = zext_ln84_2_fu_1224_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        Imag_Addr_A_orig = Imag_addr_12_reg_1713;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        Imag_Addr_A_orig = Imag_addr_11_reg_1693;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        Imag_Addr_A_orig = zext_ln48_2_reg_1698;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        Imag_Addr_A_orig = zext_ln47_2_reg_1678;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        Imag_Addr_A_orig = zext_ln51_2_fu_1103_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        Imag_Addr_A_orig = zext_ln49_2_fu_1082_p1;
    end else if (((ap_enable_reg_pp1_iter18 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        Imag_Addr_A_orig = zext_ln84_1_fu_1061_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        Imag_Addr_A_orig = Imag_addr_7_reg_1594;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        Imag_Addr_A_orig = Imag_addr_6_reg_1574;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        Imag_Addr_A_orig = zext_ln48_1_reg_1579;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        Imag_Addr_A_orig = zext_ln47_1_reg_1559;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        Imag_Addr_A_orig = zext_ln51_1_fu_945_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        Imag_Addr_A_orig = zext_ln49_1_fu_924_p1;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        Imag_Addr_A_orig = zext_ln84_fu_903_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Imag_Addr_A_orig = Imag_addr_1_reg_1480;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Imag_Addr_A_orig = Imag_addr_reg_1460;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Imag_Addr_A_orig = zext_ln48_reg_1465;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Imag_Addr_A_orig = zext_ln47_reg_1445;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Imag_Addr_A_orig = zext_ln51_fu_781_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        Imag_Addr_A_orig = zext_ln49_fu_760_p1;
    end else begin
        Imag_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        Imag_Din_A = reg_629;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3))) begin
        Imag_Din_A = Imag_Dout_A;
    end else if ((((ap_enable_reg_pp3_iter18 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp2_iter18 == 1'b1) & (1'b0 == ap_block_pp2_stage0)) | ((ap_enable_reg_pp1_iter18 == 1'b1) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        Imag_Din_A = reg_732;
    end else begin
        Imag_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state54) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_11001)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_11001)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter18 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter18 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        Imag_EN_A = 1'b1;
    end else begin
        Imag_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln91_reg_1911 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((icmp_ln91_reg_1911 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_11001)) | ((icmp_ln65_3_reg_1847_pp3_iter17_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter18 == 1'b1)) | ((icmp_ln65_2_reg_1728_pp2_iter17_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter18 == 1'b1)) | ((icmp_ln65_1_reg_1614_pp1_iter17_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1)) | ((icmp_ln65_reg_1495_pp0_iter17_reg == 1'd0) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        Imag_WEN_A = 4'd15;
    end else begin
        Imag_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        Real_r_Addr_A_orig = Real_addr_5_reg_1945;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3))) begin
        Real_r_Addr_A_orig = Real_addr_4_reg_1935;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2))) begin
        Real_r_Addr_A_orig = zext_ln101_fu_1418_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1))) begin
        Real_r_Addr_A_orig = zext_ln99_fu_1412_p1;
    end else if (((ap_enable_reg_pp3_iter18 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        Real_r_Addr_A_orig = zext_ln84_3_fu_1382_p1;
    end else if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state83))) begin
        Real_r_Addr_A_orig = Real_addr_19_reg_1822;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82))) begin
        Real_r_Addr_A_orig = Real_addr_18_reg_1802;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        Real_r_Addr_A_orig = zext_ln48_3_fu_1261_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        Real_r_Addr_A_orig = zext_ln47_3_fu_1240_p1;
    end else if (((ap_enable_reg_pp2_iter18 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        Real_r_Addr_A_orig = zext_ln84_2_fu_1224_p1;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57))) begin
        Real_r_Addr_A_orig = Real_addr_14_reg_1708;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56))) begin
        Real_r_Addr_A_orig = Real_addr_13_reg_1688;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        Real_r_Addr_A_orig = zext_ln48_2_fu_1098_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        Real_r_Addr_A_orig = zext_ln47_2_fu_1077_p1;
    end else if (((ap_enable_reg_pp1_iter18 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        Real_r_Addr_A_orig = zext_ln84_1_fu_1061_p1;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31))) begin
        Real_r_Addr_A_orig = Real_addr_9_reg_1589;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30))) begin
        Real_r_Addr_A_orig = Real_addr_8_reg_1569;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        Real_r_Addr_A_orig = zext_ln48_1_fu_940_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        Real_r_Addr_A_orig = zext_ln47_1_fu_919_p1;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        Real_r_Addr_A_orig = zext_ln84_fu_903_p1;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        Real_r_Addr_A_orig = Real_addr_3_reg_1475;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        Real_r_Addr_A_orig = Real_addr_2_reg_1455;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Real_r_Addr_A_orig = zext_ln48_fu_776_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        Real_r_Addr_A_orig = zext_ln47_fu_755_p1;
    end else begin
        Real_r_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        Real_r_Din_A = reg_623;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3))) begin
        Real_r_Din_A = Real_r_Dout_A;
    end else if ((((ap_enable_reg_pp3_iter18 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp2_iter18 == 1'b1) & (1'b0 == ap_block_pp2_stage0)) | ((ap_enable_reg_pp1_iter18 == 1'b1) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        Real_r_Din_A = reg_727;
    end else begin
        Real_r_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state54) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_11001)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_11001)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter18 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter18 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        Real_r_EN_A = 1'b1;
    end else begin
        Real_r_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln91_reg_1911 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((icmp_ln91_reg_1911 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_11001)) | ((icmp_ln65_3_reg_1847_pp3_iter17_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter18 == 1'b1)) | ((icmp_ln65_2_reg_1728_pp2_iter17_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter18 == 1'b1)) | ((icmp_ln65_1_reg_1614_pp1_iter17_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1)) | ((icmp_ln65_reg_1495_pp0_iter17_reg == 1'd0) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        Real_r_WEN_A = 4'd15;
    end else begin
        Real_r_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if ((icmp_ln65_fu_787_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln65_1_fu_954_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state35 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state35 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln65_2_fu_1109_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state61 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state61 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln65_3_fu_1275_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state87 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state87 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln91_fu_1394_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state107 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state107 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b0) & (ap_enable_reg_pp2_iter16 == 1'b0) & (ap_enable_reg_pp2_iter15 == 1'b0) & (ap_enable_reg_pp2_iter14 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter17 == 1'b0) & (ap_enable_reg_pp3_iter12 == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter18 == 1'b0) & (ap_enable_reg_pp3_iter16 == 1'b0) & (ap_enable_reg_pp3_iter15 == 1'b0) & (ap_enable_reg_pp3_iter14 == 1'b0) & (ap_enable_reg_pp3_iter13 == 1'b0) & (ap_enable_reg_pp3_iter11 == 1'b0) & (ap_enable_reg_pp3_iter10 == 1'b0) & (ap_enable_reg_pp3_iter9 == 1'b0) & (ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln65_reg_1495 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_c_aux_0_0_phi_fu_520_p4 = add_ln65_reg_1499;
    end else begin
        ap_phi_mux_c_aux_0_0_phi_fu_520_p4 = c_aux_0_0_reg_516;
    end
end

always @ (*) begin
    if (((icmp_ln65_1_reg_1614 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_c_aux_0_1_phi_fu_532_p4 = add_ln65_1_reg_1618;
    end else begin
        ap_phi_mux_c_aux_0_1_phi_fu_532_p4 = c_aux_0_1_reg_528;
    end
end

always @ (*) begin
    if (((icmp_ln65_2_reg_1728 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_c_aux_0_2_phi_fu_544_p4 = add_ln65_2_reg_1732;
    end else begin
        ap_phi_mux_c_aux_0_2_phi_fu_544_p4 = c_aux_0_2_reg_540;
    end
end

always @ (*) begin
    if (((icmp_ln65_3_reg_1847 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_c_aux_0_3_phi_fu_556_p4 = add_ln65_3_reg_1851;
    end else begin
        ap_phi_mux_c_aux_0_3_phi_fu_556_p4 = c_aux_0_3_reg_552;
    end
end

always @ (*) begin
    if (((icmp_ln91_reg_1911 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_i_0_phi_fu_568_p4 = i_reg_1915;
    end else begin
        ap_phi_mux_i_0_phi_fu_568_p4 = i_0_reg_564;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_575_p1 = select_ln75_7_fu_1329_p3;
    end else if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_575_p1 = select_ln75_5_fu_1163_p3;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_575_p1 = select_ln75_3_fu_1008_p3;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_575_p1 = select_ln75_1_fu_841_p3;
    end else begin
        grp_fu_575_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_579_p1 = select_ln81_7_fu_1337_p3;
    end else if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_579_p1 = select_ln81_5_fu_1171_p3;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_579_p1 = select_ln81_3_fu_1016_p3;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_579_p1 = select_ln81_1_fu_849_p3;
    end else begin
        grp_fu_579_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_599_p0 = tmp_34_fu_1291_p6;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_599_p0 = tmp_29_fu_1125_p6;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_599_p0 = tmp_24_fu_970_p6;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_599_p0 = tmp_4_fu_803_p6;
    end else begin
        grp_fu_599_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_599_p1 = select_ln75_6_fu_1311_p3;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_599_p1 = select_ln75_4_fu_1145_p3;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_599_p1 = select_ln75_2_fu_990_p3;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_599_p1 = select_ln75_fu_823_p3;
    end else begin
        grp_fu_599_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_603_p0 = tmp_34_fu_1291_p6;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_603_p0 = tmp_29_fu_1125_p6;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_603_p0 = tmp_24_fu_970_p6;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_603_p0 = tmp_4_fu_803_p6;
    end else begin
        grp_fu_603_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_603_p1 = select_ln81_6_fu_1320_p3;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_603_p1 = select_ln81_4_fu_1154_p3;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_603_p1 = select_ln81_2_fu_999_p3;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_603_p1 = select_ln81_fu_832_p3;
    end else begin
        grp_fu_603_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_607_p0 = tmp_34_reg_1862_pp3_iter3_reg;
    end else if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_607_p0 = tmp_29_reg_1743_pp2_iter3_reg;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_607_p0 = tmp_24_reg_1629_pp1_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_607_p0 = tmp_4_reg_1510_pp0_iter3_reg;
    end else begin
        grp_fu_607_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_611_p0 = tmp_34_reg_1862_pp3_iter3_reg;
    end else if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_611_p0 = tmp_29_reg_1743_pp2_iter3_reg;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_611_p0 = tmp_24_reg_1629_pp1_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_611_p0 = tmp_4_reg_1510_pp0_iter3_reg;
    end else begin
        grp_fu_611_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter9 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_615_p0 = tmp_35_fu_1345_p6;
    end else if (((ap_enable_reg_pp2_iter9 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_615_p0 = tmp_30_fu_1179_p6;
    end else if (((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_615_p0 = tmp_26_fu_1024_p6;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_615_p0 = tmp_14_fu_857_p6;
    end else begin
        grp_fu_615_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter9 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_619_p0 = tmp_36_fu_1359_p6;
    end else if (((ap_enable_reg_pp2_iter9 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_619_p0 = tmp_31_fu_1193_p6;
    end else if (((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_619_p0 = tmp_28_fu_1038_p6;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_619_p0 = tmp_20_fu_871_p6;
    end else begin
        grp_fu_619_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        lut_reorder_I_ce0 = 1'b1;
    end else begin
        lut_reorder_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        lut_reorder_J_ce0 = 1'b1;
    end else begin
        lut_reorder_J_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_37_fu_737_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln65_fu_787_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln65_fu_787_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln65_1_fu_954_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((icmp_ln65_1_fu_954_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln65_2_fu_1109_p2 == 1'd1)) & ~((ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln65_2_fu_1109_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln65_3_fu_1275_p2 == 1'd1)) & ~((ap_enable_reg_pp3_iter17 == 1'b0) & (ap_enable_reg_pp3_iter18 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter17 == 1'b0) & (ap_enable_reg_pp3_iter18 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln65_3_fu_1275_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln91_fu_1394_p2 == 1'd1)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln91_fu_1394_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((1'b0 == ap_block_pp4_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_pp4_stage2 : begin
            if ((1'b0 == ap_block_pp4_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end
        end
        ap_ST_fsm_pp4_stage3 : begin
            if ((1'b0 == ap_block_pp4_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Imag_Addr_A = Imag_Addr_A_orig << 32'd2;

assign Imag_Clk_A = ap_clk;

assign Imag_Rst_A = ap_rst_n_inv;

assign Real_r_Addr_A = Real_r_Addr_A_orig << 32'd2;

assign Real_r_Clk_A = ap_clk;

assign Real_r_Rst_A = ap_rst_n_inv;

assign add_ln41_fu_1388_p2 = (c_0_0_reg_504 + 11'd16);

assign add_ln65_1_fu_960_p2 = (ap_phi_mux_c_aux_0_1_phi_fu_532_p4 + 3'd1);

assign add_ln65_2_fu_1115_p2 = (ap_phi_mux_c_aux_0_2_phi_fu_544_p4 + 3'd1);

assign add_ln65_3_fu_1281_p2 = (ap_phi_mux_c_aux_0_3_phi_fu_556_p4 + 3'd1);

assign add_ln65_fu_793_p2 = (ap_phi_mux_c_aux_0_0_phi_fu_520_p4 + 3'd1);

assign add_ln84_1_fu_1377_p2 = (zext_ln47_5_reg_1842 + zext_ln74_1_fu_1373_p1);

assign add_ln84_fu_1056_p2 = (zext_ln47_4_reg_1609 + zext_ln74_fu_1052_p1);

assign add_ln_fu_895_p3 = {{tmp_23_fu_885_p4}, {c_aux_0_0_reg_516_pp0_iter17_reg}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd31];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp3_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp3_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp3_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp3_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp3_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp3_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp4_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp4_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp1_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp1_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp1_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp2_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp2_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp2_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp2_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp2_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp2_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp3_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp3_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp3_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp3_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp3_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp3_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_19_fu_745_p1 = c_0_0_reg_504[9:0];

assign i_fu_1400_p2 = (ap_phi_mux_i_0_phi_fu_568_p4 + 9'd1);

assign icmp_ln65_1_fu_954_p2 = ((ap_phi_mux_c_aux_0_1_phi_fu_532_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln65_2_fu_1109_p2 = ((ap_phi_mux_c_aux_0_2_phi_fu_544_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln65_3_fu_1275_p2 = ((ap_phi_mux_c_aux_0_3_phi_fu_556_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_787_p2 = ((ap_phi_mux_c_aux_0_0_phi_fu_520_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln91_fu_1394_p2 = ((ap_phi_mux_i_0_phi_fu_568_p4 == 9'd480) ? 1'b1 : 1'b0);

assign lut_reorder_I_address0 = zext_ln96_fu_1406_p1;

assign lut_reorder_J_address0 = zext_ln96_fu_1406_p1;

assign or_ln41_1_fu_1067_p2 = (empty_19_reg_1427 | 10'd8);

assign or_ln41_2_fu_1230_p2 = (empty_19_reg_1427 | 10'd12);

assign or_ln41_fu_909_p2 = (empty_19_reg_1427 | 10'd4);

assign or_ln43_1_fu_914_p2 = (empty_19_reg_1427 | 10'd5);

assign or_ln43_2_fu_1072_p2 = (empty_19_reg_1427 | 10'd9);

assign or_ln43_3_fu_1235_p2 = (empty_19_reg_1427 | 10'd13);

assign or_ln43_fu_749_p2 = (empty_19_fu_745_p1 | 10'd1);

assign or_ln44_1_fu_930_p2 = (empty_19_reg_1427 | 10'd6);

assign or_ln44_2_fu_1088_p2 = (empty_19_reg_1427 | 10'd10);

assign or_ln44_3_fu_1251_p2 = (empty_19_reg_1427 | 10'd14);

assign or_ln44_fu_766_p2 = (empty_19_reg_1427 | 10'd2);

assign or_ln45_1_fu_935_p2 = (empty_19_reg_1427 | 10'd7);

assign or_ln45_2_fu_1093_p2 = (empty_19_reg_1427 | 10'd11);

assign or_ln45_3_fu_1256_p2 = (empty_19_reg_1427 | 10'd15);

assign or_ln45_fu_771_p2 = (empty_19_reg_1427 | 10'd3);

assign select_ln75_1_fu_841_p3 = ((trunc_ln75_reg_1518_pp0_iter3_reg[0:0] === 1'b1) ? reg_629 : reg_643);

assign select_ln75_2_fu_990_p3 = ((trunc_ln75_1_fu_986_p1[0:0] === 1'b1) ? reg_639 : reg_652);

assign select_ln75_3_fu_1008_p3 = ((trunc_ln75_1_reg_1637_pp1_iter3_reg[0:0] === 1'b1) ? reg_629 : reg_643);

assign select_ln75_4_fu_1145_p3 = ((trunc_ln75_2_fu_1141_p1[0:0] === 1'b1) ? reg_639 : reg_652);

assign select_ln75_5_fu_1163_p3 = ((trunc_ln75_2_reg_1751_pp2_iter3_reg[0:0] === 1'b1) ? reg_629 : reg_643);

assign select_ln75_6_fu_1311_p3 = ((trunc_ln75_3_fu_1307_p1[0:0] === 1'b1) ? reg_639 : reg_652);

assign select_ln75_7_fu_1329_p3 = ((trunc_ln75_3_reg_1870_pp3_iter3_reg[0:0] === 1'b1) ? reg_629 : reg_643);

assign select_ln75_fu_823_p3 = ((trunc_ln75_fu_819_p1[0:0] === 1'b1) ? reg_639 : reg_652);

assign select_ln81_1_fu_849_p3 = ((trunc_ln75_reg_1518_pp0_iter3_reg[0:0] === 1'b1) ? reg_665 : reg_661);

assign select_ln81_2_fu_999_p3 = ((trunc_ln75_1_fu_986_p1[0:0] === 1'b1) ? reg_673 : reg_669);

assign select_ln81_3_fu_1016_p3 = ((trunc_ln75_1_reg_1637_pp1_iter3_reg[0:0] === 1'b1) ? reg_665 : reg_661);

assign select_ln81_4_fu_1154_p3 = ((trunc_ln75_2_fu_1141_p1[0:0] === 1'b1) ? reg_673 : reg_669);

assign select_ln81_5_fu_1171_p3 = ((trunc_ln75_2_reg_1751_pp2_iter3_reg[0:0] === 1'b1) ? reg_665 : reg_661);

assign select_ln81_6_fu_1320_p3 = ((trunc_ln75_3_fu_1307_p1[0:0] === 1'b1) ? reg_673 : reg_669);

assign select_ln81_7_fu_1337_p3 = ((trunc_ln75_3_reg_1870_pp3_iter3_reg[0:0] === 1'b1) ? reg_665 : reg_661);

assign select_ln81_fu_832_p3 = ((trunc_ln75_fu_819_p1[0:0] === 1'b1) ? reg_673 : reg_669);

assign tmp_23_fu_885_p4 = {{c_0_0_reg_504[10:3]}};

assign tmp_24_fu_970_p5 = ap_phi_mux_c_aux_0_1_phi_fu_532_p4[1:0];

assign tmp_29_fu_1125_p5 = ap_phi_mux_c_aux_0_2_phi_fu_544_p4[1:0];

assign tmp_32_fu_1207_p4 = {{or_ln41_1_reg_1673[9:3]}};

assign tmp_33_fu_1216_p3 = {{tmp_32_fu_1207_p4}, {c_aux_0_2_reg_540_pp2_iter17_reg}};

assign tmp_34_fu_1291_p5 = ap_phi_mux_c_aux_0_3_phi_fu_556_p4[1:0];

assign tmp_37_fu_737_p3 = c_0_0_reg_504[32'd10];

assign tmp_4_fu_803_p5 = ap_phi_mux_c_aux_0_0_phi_fu_520_p4[1:0];

assign trunc_ln74_1_fu_966_p1 = ap_phi_mux_c_aux_0_1_phi_fu_532_p4[1:0];

assign trunc_ln74_2_fu_1121_p1 = ap_phi_mux_c_aux_0_2_phi_fu_544_p4[1:0];

assign trunc_ln74_3_fu_1287_p1 = ap_phi_mux_c_aux_0_3_phi_fu_556_p4[1:0];

assign trunc_ln74_fu_799_p1 = ap_phi_mux_c_aux_0_0_phi_fu_520_p4[1:0];

assign trunc_ln75_1_fu_986_p1 = ap_phi_mux_c_aux_0_1_phi_fu_532_p4[0:0];

assign trunc_ln75_2_fu_1141_p1 = ap_phi_mux_c_aux_0_2_phi_fu_544_p4[0:0];

assign trunc_ln75_3_fu_1307_p1 = ap_phi_mux_c_aux_0_3_phi_fu_556_p4[0:0];

assign trunc_ln75_fu_819_p1 = ap_phi_mux_c_aux_0_0_phi_fu_520_p4[0:0];

assign zext_ln101_fu_1418_p1 = indexJ_reg_1930;

assign zext_ln47_1_fu_919_p1 = or_ln41_fu_909_p2;

assign zext_ln47_2_fu_1077_p1 = or_ln41_1_fu_1067_p2;

assign zext_ln47_3_fu_1240_p1 = or_ln41_2_fu_1230_p2;

assign zext_ln47_4_fu_951_p1 = or_ln41_reg_1554;

assign zext_ln47_5_fu_1272_p1 = or_ln41_2_reg_1787;

assign zext_ln47_fu_755_p1 = c_0_0_reg_504;

assign zext_ln48_1_fu_940_p1 = or_ln44_1_fu_930_p2;

assign zext_ln48_2_fu_1098_p1 = or_ln44_2_fu_1088_p2;

assign zext_ln48_3_fu_1261_p1 = or_ln44_3_fu_1251_p2;

assign zext_ln48_fu_776_p1 = or_ln44_fu_766_p2;

assign zext_ln49_1_fu_924_p1 = or_ln43_1_fu_914_p2;

assign zext_ln49_2_fu_1082_p1 = or_ln43_2_fu_1072_p2;

assign zext_ln49_3_fu_1245_p1 = or_ln43_3_fu_1235_p2;

assign zext_ln49_fu_760_p1 = or_ln43_fu_749_p2;

assign zext_ln51_1_fu_945_p1 = or_ln45_1_fu_935_p2;

assign zext_ln51_2_fu_1103_p1 = or_ln45_2_fu_1093_p2;

assign zext_ln51_3_fu_1266_p1 = or_ln45_3_fu_1256_p2;

assign zext_ln51_fu_781_p1 = or_ln45_fu_771_p2;

assign zext_ln74_1_fu_1373_p1 = c_aux_0_3_reg_552_pp3_iter17_reg;

assign zext_ln74_fu_1052_p1 = c_aux_0_1_reg_528_pp1_iter17_reg;

assign zext_ln84_1_fu_1061_p1 = add_ln84_fu_1056_p2;

assign zext_ln84_2_fu_1224_p1 = tmp_33_fu_1216_p3;

assign zext_ln84_3_fu_1382_p1 = add_ln84_1_fu_1377_p2;

assign zext_ln84_fu_903_p1 = add_ln_fu_895_p3;

assign zext_ln96_fu_1406_p1 = ap_phi_mux_i_0_phi_fu_568_p4;

assign zext_ln99_fu_1412_p1 = lut_reorder_I_q0;

always @ (posedge ap_clk) begin
    zext_ln47_reg_1445[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    Real_addr_2_reg_1455[0] <= 1'b1;
    Imag_addr_reg_1460[0] <= 1'b1;
    zext_ln48_reg_1465[1] <= 1'b1;
    zext_ln48_reg_1465[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    Real_addr_3_reg_1475[1:0] <= 2'b11;
    Imag_addr_1_reg_1480[1:0] <= 2'b11;
    or_ln41_reg_1554[2] <= 1'b1;
    zext_ln47_1_reg_1559[2] <= 1'b1;
    zext_ln47_1_reg_1559[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    Real_addr_8_reg_1569[0] <= 1'b1;
    Real_addr_8_reg_1569[2] <= 1'b1;
    Imag_addr_6_reg_1574[0] <= 1'b1;
    Imag_addr_6_reg_1574[2] <= 1'b1;
    zext_ln48_1_reg_1579[2:1] <= 2'b11;
    zext_ln48_1_reg_1579[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    Real_addr_9_reg_1589[2:0] <= 3'b111;
    Imag_addr_7_reg_1594[2:0] <= 3'b111;
    zext_ln47_4_reg_1609[2] <= 1'b1;
    zext_ln47_4_reg_1609[10] <= 1'b0;
    or_ln41_1_reg_1673[3] <= 1'b1;
    zext_ln47_2_reg_1678[3] <= 1'b1;
    zext_ln47_2_reg_1678[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    Real_addr_13_reg_1688[0] <= 1'b1;
    Real_addr_13_reg_1688[3] <= 1'b1;
    Imag_addr_11_reg_1693[0] <= 1'b1;
    Imag_addr_11_reg_1693[3] <= 1'b1;
    zext_ln48_2_reg_1698[1] <= 1'b1;
    zext_ln48_2_reg_1698[3:3] <= 1'b1;
    zext_ln48_2_reg_1698[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    Real_addr_14_reg_1708[1:0] <= 2'b11;
    Real_addr_14_reg_1708[3] <= 1'b1;
    Imag_addr_12_reg_1713[1:0] <= 2'b11;
    Imag_addr_12_reg_1713[3] <= 1'b1;
    or_ln41_2_reg_1787[3:2] <= 2'b11;
    zext_ln47_3_reg_1792[3:2] <= 2'b11;
    zext_ln47_3_reg_1792[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    Real_addr_18_reg_1802[0] <= 1'b1;
    Real_addr_18_reg_1802[3:2] <= 2'b11;
    Imag_addr_16_reg_1807[0] <= 1'b1;
    Imag_addr_16_reg_1807[3:2] <= 2'b11;
    zext_ln48_3_reg_1812[3:1] <= 3'b111;
    zext_ln48_3_reg_1812[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    Real_addr_19_reg_1822[3:0] <= 4'b1111;
    Imag_addr_17_reg_1827[3:0] <= 4'b1111;
    zext_ln47_5_reg_1842[3:2] <= 2'b11;
    zext_ln47_5_reg_1842[10] <= 1'b0;
end

endmodule //Reorder_fft
