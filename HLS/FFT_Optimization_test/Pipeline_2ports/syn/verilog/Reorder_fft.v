// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Reorder_fft,hls_ip_2019_1_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.249000,HLS_SYN_LAT=2738,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=8,HLS_SYN_FF=2467,HLS_SYN_LUT=2840,HLS_VERSION=2019_1_3}" *)

module Reorder_fft (
        ap_clk,
        ap_rst_n,
        Real_r_Addr_A,
        Real_r_EN_A,
        Real_r_WEN_A,
        Real_r_Din_A,
        Real_r_Dout_A,
        Real_r_Clk_A,
        Real_r_Rst_A,
        Real_r_Addr_B,
        Real_r_EN_B,
        Real_r_WEN_B,
        Real_r_Din_B,
        Real_r_Dout_B,
        Real_r_Clk_B,
        Real_r_Rst_B,
        Imag_Addr_A,
        Imag_EN_A,
        Imag_WEN_A,
        Imag_Din_A,
        Imag_Dout_A,
        Imag_Clk_A,
        Imag_Rst_A,
        Imag_Addr_B,
        Imag_EN_B,
        Imag_WEN_B,
        Imag_Din_B,
        Imag_Dout_B,
        Imag_Clk_B,
        Imag_Rst_B,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_pp0_stage0 = 11'd2;
parameter    ap_ST_fsm_pp0_stage1 = 11'd4;
parameter    ap_ST_fsm_pp0_stage2 = 11'd8;
parameter    ap_ST_fsm_pp0_stage3 = 11'd16;
parameter    ap_ST_fsm_pp0_stage4 = 11'd32;
parameter    ap_ST_fsm_state22 = 11'd64;
parameter    ap_ST_fsm_pp1_stage0 = 11'd128;
parameter    ap_ST_fsm_pp1_stage1 = 11'd256;
parameter    ap_ST_fsm_pp1_stage2 = 11'd512;
parameter    ap_ST_fsm_state27 = 11'd1024;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [31:0] Real_r_Addr_A;
output   Real_r_EN_A;
output  [3:0] Real_r_WEN_A;
output  [31:0] Real_r_Din_A;
input  [31:0] Real_r_Dout_A;
output   Real_r_Clk_A;
output   Real_r_Rst_A;
output  [31:0] Real_r_Addr_B;
output   Real_r_EN_B;
output  [3:0] Real_r_WEN_B;
output  [31:0] Real_r_Din_B;
input  [31:0] Real_r_Dout_B;
output   Real_r_Clk_B;
output   Real_r_Rst_B;
output  [31:0] Imag_Addr_A;
output   Imag_EN_A;
output  [3:0] Imag_WEN_A;
output  [31:0] Imag_Din_A;
input  [31:0] Imag_Dout_A;
output   Imag_Clk_A;
output   Imag_Rst_A;
output  [31:0] Imag_Addr_B;
output   Imag_EN_B;
output  [3:0] Imag_WEN_B;
output  [31:0] Imag_Din_B;
input  [31:0] Imag_Dout_B;
output   Imag_Clk_B;
output   Imag_Rst_B;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg Real_r_EN_A;
reg[3:0] Real_r_WEN_A;
reg[31:0] Real_r_Din_A;
reg Real_r_EN_B;
reg[3:0] Real_r_WEN_B;
reg[31:0] Real_r_Din_B;
reg Imag_EN_A;
reg[3:0] Imag_WEN_A;
reg[31:0] Imag_Din_A;
reg Imag_EN_B;
reg[3:0] Imag_WEN_B;
reg[31:0] Imag_Din_B;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [8:0] lut_reorder_I_address0;
reg    lut_reorder_I_ce0;
wire   [9:0] lut_reorder_I_q0;
wire   [8:0] lut_reorder_J_address0;
reg    lut_reorder_J_ce0;
wire   [9:0] lut_reorder_J_q0;
reg   [10:0] c_0_reg_206;
reg   [8:0] i_0_reg_218;
reg   [31:0] reg_245;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state13_pp0_stage1_iter2;
wire    ap_block_state18_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] tmp_6_reg_468;
wire    ap_CS_fsm_pp1_stage2;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state25_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
reg   [0:0] icmp_ln91_reg_691;
reg   [31:0] reg_253;
wire   [31:0] grp_fu_241_p2;
reg   [31:0] reg_260;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] tmp_6_reg_468_pp0_iter2_reg;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_state15_pp0_stage3_iter2;
wire    ap_block_state20_pp0_stage3_iter3;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] tmp_6_fu_266_p3;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_state17_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_6_reg_468_pp0_iter1_reg;
reg   [0:0] tmp_6_reg_468_pp0_iter3_reg;
reg   [9:0] Real_addr_reg_472;
reg   [9:0] Real_addr_reg_472_pp0_iter1_reg;
reg   [9:0] Real_addr_reg_472_pp0_iter2_reg;
reg   [9:0] Real_addr_1_reg_477;
reg   [9:0] Real_addr_1_reg_477_pp0_iter1_reg;
reg   [9:0] Real_addr_1_reg_477_pp0_iter2_reg;
reg   [9:0] Real_addr_1_reg_477_pp0_iter3_reg;
reg   [9:0] Real_addr_2_reg_483;
reg   [9:0] Real_addr_2_reg_483_pp0_iter1_reg;
reg   [9:0] Real_addr_2_reg_483_pp0_iter2_reg;
reg   [9:0] Imag_addr_reg_489;
reg   [9:0] Imag_addr_reg_489_pp0_iter1_reg;
reg   [9:0] Imag_addr_reg_489_pp0_iter2_reg;
reg   [9:0] Real_addr_3_reg_495;
reg   [9:0] Real_addr_3_reg_495_pp0_iter1_reg;
reg   [9:0] Real_addr_3_reg_495_pp0_iter2_reg;
reg   [9:0] Real_addr_3_reg_495_pp0_iter3_reg;
reg   [9:0] Imag_addr_1_reg_500;
reg   [9:0] Imag_addr_1_reg_500_pp0_iter1_reg;
reg   [9:0] Imag_addr_1_reg_500_pp0_iter2_reg;
reg   [9:0] Imag_addr_1_reg_500_pp0_iter3_reg;
reg   [9:0] Imag_addr_2_reg_505;
reg   [9:0] Imag_addr_2_reg_505_pp0_iter1_reg;
reg   [9:0] Imag_addr_2_reg_505_pp0_iter2_reg;
reg   [9:0] Imag_addr_3_reg_510;
reg   [9:0] Imag_addr_3_reg_510_pp0_iter1_reg;
reg   [9:0] Imag_addr_3_reg_510_pp0_iter2_reg;
reg   [9:0] Imag_addr_3_reg_510_pp0_iter3_reg;
reg   [31:0] RE_vec_128_b_reg_516;
reg   [31:0] Imag_load_1_reg_522;
reg   [31:0] Real_load_reg_527;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_state14_pp0_stage2_iter2;
wire    ap_block_state19_pp0_stage2_iter3;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] Real_load_1_reg_532;
reg   [31:0] IM_vec_128_a_reg_537;
reg   [31:0] IM_vec_128_b_reg_543;
wire   [31:0] bitcast_ln74_1_fu_329_p1;
wire   [31:0] bitcast_ln75_1_fu_343_p1;
reg   [31:0] Imag_load_4_reg_559;
reg   [31:0] Real_load_2_reg_564;
reg   [31:0] Imag_load_5_reg_569;
reg   [31:0] Real_load_3_reg_574;
wire   [31:0] bitcast_ln80_1_fu_357_p1;
wire   [31:0] bitcast_ln81_1_fu_371_p1;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_state16_pp0_stage4_iter2;
wire    ap_block_state21_pp0_stage4_iter3;
wire    ap_block_pp0_stage4_11001;
wire   [10:0] c_fu_376_p2;
reg   [10:0] c_reg_589;
wire   [31:0] grp_fu_229_p2;
reg   [31:0] tmp_1_reg_594;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] grp_fu_233_p2;
reg   [31:0] tmp_1_1_reg_600;
wire   [31:0] grp_fu_237_p2;
reg   [31:0] tmp_3_1_reg_606;
reg   [31:0] tmp_3_reg_612;
reg   [31:0] tmp_7_reg_618;
reg   [31:0] tmp_7_1_reg_624;
reg   [31:0] tmp_9_reg_629;
reg   [31:0] tmp_9_1_reg_635;
wire   [31:0] bitcast_ln82_1_fu_391_p1;
wire   [31:0] bitcast_ln76_1_fu_405_p1;
wire   [31:0] bitcast_ln82_3_fu_419_p1;
wire   [31:0] bitcast_ln76_3_fu_433_p1;
reg   [31:0] tmp_5_reg_661;
reg   [31:0] tmp_4_reg_666;
reg   [31:0] tmp_5_2_reg_671;
reg   [31:0] tmp_10_2_reg_676;
reg   [31:0] tmp_5_3_reg_681;
reg   [31:0] tmp_10_3_reg_686;
wire   [0:0] icmp_ln91_fu_438_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state23_pp1_stage0_iter0;
wire    ap_block_state26_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [8:0] i_fu_444_p2;
reg   [8:0] i_reg_695;
reg   [9:0] Real_addr_4_reg_710;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state24_pp1_stage1_iter0;
wire    ap_block_pp1_stage1_11001;
reg   [9:0] Imag_addr_4_reg_715;
reg   [9:0] Real_addr_5_reg_720;
reg   [9:0] Imag_addr_5_reg_725;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage4_subdone;
reg    ap_enable_reg_pp0_iter3;
wire    ap_CS_fsm_state22;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state23;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage2_subdone;
reg   [10:0] ap_phi_mux_c_0_phi_fu_210_p4;
wire    ap_block_pp0_stage0;
reg   [8:0] ap_phi_mux_i_0_phi_fu_222_p4;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln47_fu_296_p1;
wire   [63:0] zext_ln48_fu_302_p1;
wire   [63:0] zext_ln49_fu_308_p1;
wire   [63:0] zext_ln51_fu_314_p1;
wire   [63:0] zext_ln96_fu_450_p1;
wire   [63:0] zext_ln99_fu_456_p1;
wire    ap_block_pp1_stage1;
wire   [63:0] zext_ln101_fu_462_p1;
reg   [31:0] Real_r_Addr_A_orig;
reg   [31:0] Real_r_Addr_B_orig;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp1_stage2;
reg   [31:0] Imag_Addr_A_orig;
reg   [31:0] Imag_Addr_B_orig;
reg   [31:0] grp_fu_229_p0;
reg   [31:0] grp_fu_229_p1;
reg   [31:0] grp_fu_233_p0;
reg   [31:0] grp_fu_233_p1;
reg   [31:0] grp_fu_237_p0;
reg   [31:0] grp_fu_237_p1;
reg   [31:0] grp_fu_241_p0;
reg   [31:0] grp_fu_241_p1;
wire   [9:0] trunc_ln41_fu_274_p1;
wire   [9:0] ind2_fu_284_p2;
wire   [9:0] ind1_fu_278_p2;
wire   [9:0] ind3_fu_290_p2;
wire   [31:0] bitcast_ln74_fu_320_p1;
wire   [31:0] xor_ln74_fu_323_p2;
wire   [31:0] bitcast_ln75_fu_334_p1;
wire   [31:0] xor_ln75_fu_337_p2;
wire   [31:0] bitcast_ln80_fu_348_p1;
wire   [31:0] xor_ln80_fu_351_p2;
wire   [31:0] bitcast_ln81_fu_362_p1;
wire   [31:0] xor_ln81_fu_365_p2;
wire   [31:0] bitcast_ln82_fu_382_p1;
wire   [31:0] xor_ln82_fu_385_p2;
wire   [31:0] bitcast_ln76_fu_396_p1;
wire   [31:0] xor_ln76_fu_399_p2;
wire   [31:0] bitcast_ln82_2_fu_410_p1;
wire   [31:0] xor_ln82_1_fu_413_p2;
wire   [31:0] bitcast_ln76_2_fu_424_p1;
wire   [31:0] xor_ln76_1_fu_427_p2;
wire    ap_CS_fsm_state27;
reg   [10:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp1_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

Reorder_fft_lut_rbkb #(
    .DataWidth( 10 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
lut_reorder_I_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lut_reorder_I_address0),
    .ce0(lut_reorder_I_ce0),
    .q0(lut_reorder_I_q0)
);

Reorder_fft_lut_rcud #(
    .DataWidth( 10 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
lut_reorder_J_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lut_reorder_J_address0),
    .ce0(lut_reorder_J_ce0),
    .q0(lut_reorder_J_q0)
);

Reorder_fft_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
Reorder_fft_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_229_p0),
    .din1(grp_fu_229_p1),
    .ce(1'b1),
    .dout(grp_fu_229_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_233_p0),
    .din1(grp_fu_233_p1),
    .ce(1'b1),
    .dout(grp_fu_233_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_237_p0),
    .din1(grp_fu_237_p1),
    .ce(1'b1),
    .dout(grp_fu_237_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_241_p0),
    .din1(grp_fu_241_p1),
    .ce(1'b1),
    .dout(grp_fu_241_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state23) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_CS_fsm_pp1_stage2)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_6_reg_468 == 1'd0))) begin
        c_0_reg_206 <= c_reg_589;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_206 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i_0_reg_218 <= 9'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln91_reg_691 == 1'd0))) begin
        i_0_reg_218 <= i_reg_695;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln91_reg_691 == 1'd0))) begin
        reg_245 <= Real_r_Dout_B;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_6_reg_468 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        reg_245 <= Real_r_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln91_reg_691 == 1'd0))) begin
        reg_253 <= Imag_Dout_B;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_6_reg_468 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        reg_253 <= Imag_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_6_reg_468 == 1'd0))) begin
        IM_vec_128_a_reg_537 <= Imag_Dout_A;
        IM_vec_128_b_reg_543 <= Imag_Dout_B;
        Real_load_1_reg_532 <= Real_r_Dout_B;
        Real_load_reg_527 <= Real_r_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_6_fu_266_p3 == 1'd0))) begin
        Imag_addr_1_reg_500[9 : 2] <= zext_ln51_fu_314_p1[9 : 2];
        Imag_addr_2_reg_505 <= zext_ln47_fu_296_p1;
        Imag_addr_3_reg_510[0] <= zext_ln48_fu_302_p1[0];
Imag_addr_3_reg_510[9 : 2] <= zext_ln48_fu_302_p1[9 : 2];
        Imag_addr_reg_489[9 : 1] <= zext_ln49_fu_308_p1[9 : 1];
        Real_addr_1_reg_477[0] <= zext_ln48_fu_302_p1[0];
Real_addr_1_reg_477[9 : 2] <= zext_ln48_fu_302_p1[9 : 2];
        Real_addr_2_reg_483[9 : 1] <= zext_ln49_fu_308_p1[9 : 1];
        Real_addr_3_reg_495[9 : 2] <= zext_ln51_fu_314_p1[9 : 2];
        Real_addr_reg_472 <= zext_ln47_fu_296_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Imag_addr_1_reg_500_pp0_iter1_reg[9 : 2] <= Imag_addr_1_reg_500[9 : 2];
        Imag_addr_1_reg_500_pp0_iter2_reg[9 : 2] <= Imag_addr_1_reg_500_pp0_iter1_reg[9 : 2];
        Imag_addr_1_reg_500_pp0_iter3_reg[9 : 2] <= Imag_addr_1_reg_500_pp0_iter2_reg[9 : 2];
        Imag_addr_2_reg_505_pp0_iter1_reg <= Imag_addr_2_reg_505;
        Imag_addr_2_reg_505_pp0_iter2_reg <= Imag_addr_2_reg_505_pp0_iter1_reg;
        Imag_addr_3_reg_510_pp0_iter1_reg[0] <= Imag_addr_3_reg_510[0];
Imag_addr_3_reg_510_pp0_iter1_reg[9 : 2] <= Imag_addr_3_reg_510[9 : 2];
        Imag_addr_3_reg_510_pp0_iter2_reg[0] <= Imag_addr_3_reg_510_pp0_iter1_reg[0];
Imag_addr_3_reg_510_pp0_iter2_reg[9 : 2] <= Imag_addr_3_reg_510_pp0_iter1_reg[9 : 2];
        Imag_addr_3_reg_510_pp0_iter3_reg[0] <= Imag_addr_3_reg_510_pp0_iter2_reg[0];
Imag_addr_3_reg_510_pp0_iter3_reg[9 : 2] <= Imag_addr_3_reg_510_pp0_iter2_reg[9 : 2];
        Imag_addr_reg_489_pp0_iter1_reg[9 : 1] <= Imag_addr_reg_489[9 : 1];
        Imag_addr_reg_489_pp0_iter2_reg[9 : 1] <= Imag_addr_reg_489_pp0_iter1_reg[9 : 1];
        Real_addr_1_reg_477_pp0_iter1_reg[0] <= Real_addr_1_reg_477[0];
Real_addr_1_reg_477_pp0_iter1_reg[9 : 2] <= Real_addr_1_reg_477[9 : 2];
        Real_addr_1_reg_477_pp0_iter2_reg[0] <= Real_addr_1_reg_477_pp0_iter1_reg[0];
Real_addr_1_reg_477_pp0_iter2_reg[9 : 2] <= Real_addr_1_reg_477_pp0_iter1_reg[9 : 2];
        Real_addr_1_reg_477_pp0_iter3_reg[0] <= Real_addr_1_reg_477_pp0_iter2_reg[0];
Real_addr_1_reg_477_pp0_iter3_reg[9 : 2] <= Real_addr_1_reg_477_pp0_iter2_reg[9 : 2];
        Real_addr_2_reg_483_pp0_iter1_reg[9 : 1] <= Real_addr_2_reg_483[9 : 1];
        Real_addr_2_reg_483_pp0_iter2_reg[9 : 1] <= Real_addr_2_reg_483_pp0_iter1_reg[9 : 1];
        Real_addr_3_reg_495_pp0_iter1_reg[9 : 2] <= Real_addr_3_reg_495[9 : 2];
        Real_addr_3_reg_495_pp0_iter2_reg[9 : 2] <= Real_addr_3_reg_495_pp0_iter1_reg[9 : 2];
        Real_addr_3_reg_495_pp0_iter3_reg[9 : 2] <= Real_addr_3_reg_495_pp0_iter2_reg[9 : 2];
        Real_addr_reg_472_pp0_iter1_reg <= Real_addr_reg_472;
        Real_addr_reg_472_pp0_iter2_reg <= Real_addr_reg_472_pp0_iter1_reg;
        tmp_6_reg_468 <= ap_phi_mux_c_0_phi_fu_210_p4[32'd10];
        tmp_6_reg_468_pp0_iter1_reg <= tmp_6_reg_468;
        tmp_6_reg_468_pp0_iter2_reg <= tmp_6_reg_468_pp0_iter1_reg;
        tmp_6_reg_468_pp0_iter3_reg <= tmp_6_reg_468_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln91_reg_691 == 1'd0))) begin
        Imag_addr_4_reg_715 <= zext_ln99_fu_456_p1;
        Imag_addr_5_reg_725 <= zext_ln101_fu_462_p1;
        Real_addr_4_reg_710 <= zext_ln99_fu_456_p1;
        Real_addr_5_reg_720 <= zext_ln101_fu_462_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_6_reg_468 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        Imag_load_1_reg_522 <= Imag_Dout_B;
        RE_vec_128_b_reg_516 <= Real_r_Dout_B;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (tmp_6_reg_468 == 1'd0))) begin
        Imag_load_4_reg_559 <= Imag_Dout_A;
        Imag_load_5_reg_569 <= Imag_Dout_B;
        Real_load_2_reg_564 <= Real_r_Dout_A;
        Real_load_3_reg_574 <= Real_r_Dout_B;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_6_reg_468 == 1'd0))) begin
        c_reg_589 <= c_fu_376_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        i_reg_695 <= i_fu_444_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln91_reg_691 <= icmp_ln91_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (tmp_6_reg_468_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_6_reg_468_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_260 <= grp_fu_241_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_6_reg_468_pp0_iter2_reg == 1'd0))) begin
        tmp_10_2_reg_676 <= grp_fu_233_p2;
        tmp_10_3_reg_686 <= grp_fu_241_p2;
        tmp_5_2_reg_671 <= grp_fu_229_p2;
        tmp_5_3_reg_681 <= grp_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_6_reg_468_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_1_1_reg_600 <= grp_fu_233_p2;
        tmp_1_reg_594 <= grp_fu_229_p2;
        tmp_3_1_reg_606 <= grp_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_6_reg_468_pp0_iter1_reg == 1'd0))) begin
        tmp_3_reg_612 <= grp_fu_229_p2;
        tmp_7_1_reg_624 <= grp_fu_237_p2;
        tmp_7_reg_618 <= grp_fu_233_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (tmp_6_reg_468_pp0_iter2_reg == 1'd0))) begin
        tmp_4_reg_666 <= grp_fu_237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_6_reg_468_pp0_iter2_reg == 1'd0))) begin
        tmp_5_reg_661 <= grp_fu_241_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (tmp_6_reg_468_pp0_iter1_reg == 1'd0))) begin
        tmp_9_1_reg_635 <= grp_fu_233_p2;
        tmp_9_reg_629 <= grp_fu_229_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Imag_Addr_A_orig = Imag_addr_5_reg_725;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_Addr_A_orig = zext_ln101_fu_462_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        Imag_Addr_A_orig = Imag_addr_3_reg_510_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Imag_Addr_A_orig = Imag_addr_2_reg_505_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        Imag_Addr_A_orig = Imag_addr_reg_489;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Imag_Addr_A_orig = Imag_addr_2_reg_505;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        Imag_Addr_A_orig = zext_ln49_fu_308_p1;
    end else begin
        Imag_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        Imag_Addr_B_orig = Imag_addr_4_reg_715;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_Addr_B_orig = zext_ln99_fu_456_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        Imag_Addr_B_orig = Imag_addr_1_reg_500_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Imag_Addr_B_orig = Imag_addr_reg_489_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        Imag_Addr_B_orig = Imag_addr_1_reg_500;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Imag_Addr_B_orig = Imag_addr_3_reg_510;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        Imag_Addr_B_orig = zext_ln51_fu_314_p1;
    end else begin
        Imag_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Imag_Din_A = reg_253;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        Imag_Din_A = tmp_10_2_reg_676;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Imag_Din_A = tmp_4_reg_666;
    end else begin
        Imag_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        Imag_Din_B = Imag_Dout_A;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        Imag_Din_B = tmp_10_3_reg_686;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Imag_Din_B = reg_260;
    end else begin
        Imag_Din_B = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        Imag_EN_A = 1'b1;
    end else begin
        Imag_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        Imag_EN_B = 1'b1;
    end else begin
        Imag_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (tmp_6_reg_468_pp0_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_6_reg_468_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln91_reg_691 == 1'd0)))) begin
        Imag_WEN_A = 4'd15;
    end else begin
        Imag_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (tmp_6_reg_468_pp0_iter3_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (tmp_6_reg_468_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln91_reg_691 == 1'd0)))) begin
        Imag_WEN_B = 4'd15;
    end else begin
        Imag_WEN_B = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Real_r_Addr_A_orig = Real_addr_5_reg_720;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_r_Addr_A_orig = zext_ln101_fu_462_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        Real_r_Addr_A_orig = Real_addr_1_reg_477_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Real_r_Addr_A_orig = Real_addr_reg_472_pp0_iter2_reg;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        Real_r_Addr_A_orig = Real_addr_2_reg_483;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        Real_r_Addr_A_orig = zext_ln47_fu_296_p1;
    end else begin
        Real_r_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        Real_r_Addr_B_orig = Real_addr_4_reg_710;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_r_Addr_B_orig = zext_ln99_fu_456_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        Real_r_Addr_B_orig = Real_addr_3_reg_495_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Real_r_Addr_B_orig = Real_addr_2_reg_483_pp0_iter2_reg;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        Real_r_Addr_B_orig = Real_addr_3_reg_495;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        Real_r_Addr_B_orig = zext_ln48_fu_302_p1;
    end else begin
        Real_r_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Real_r_Din_A = reg_245;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        Real_r_Din_A = tmp_5_2_reg_671;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Real_r_Din_A = tmp_5_reg_661;
    end else begin
        Real_r_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
        Real_r_Din_B = Real_r_Dout_A;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        Real_r_Din_B = tmp_5_3_reg_681;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        Real_r_Din_B = reg_260;
    end else begin
        Real_r_Din_B = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        Real_r_EN_A = 1'b1;
    end else begin
        Real_r_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        Real_r_EN_B = 1'b1;
    end else begin
        Real_r_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (tmp_6_reg_468_pp0_iter3_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (tmp_6_reg_468_pp0_iter2_reg == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln91_reg_691 == 1'd0)))) begin
        Real_r_WEN_A = 4'd15;
    end else begin
        Real_r_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (tmp_6_reg_468_pp0_iter3_reg == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001) & (tmp_6_reg_468_pp0_iter2_reg == 1'd0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2_11001) & (icmp_ln91_reg_691 == 1'd0)))) begin
        Real_r_WEN_B = 4'd15;
    end else begin
        Real_r_WEN_B = 4'd0;
    end
end

always @ (*) begin
    if ((tmp_6_fu_266_p3 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln91_fu_438_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state23 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state23 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_6_reg_468 == 1'd0))) begin
        ap_phi_mux_c_0_phi_fu_210_p4 = c_reg_589;
    end else begin
        ap_phi_mux_c_0_phi_fu_210_p4 = c_0_reg_206;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln91_reg_691 == 1'd0))) begin
        ap_phi_mux_i_0_phi_fu_222_p4 = i_reg_695;
    end else begin
        ap_phi_mux_i_0_phi_fu_222_p4 = i_0_reg_218;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_229_p0 = bitcast_ln76_1_fu_405_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_229_p0 = Imag_load_5_reg_569;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_229_p0 = Real_load_1_reg_532;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_229_p0 = RE_vec_128_b_reg_516;
    end else begin
        grp_fu_229_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_229_p1 = tmp_1_reg_594;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_229_p1 = Imag_load_4_reg_559;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_229_p1 = Real_load_reg_527;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_229_p1 = reg_245;
    end else begin
        grp_fu_229_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_233_p0 = bitcast_ln82_3_fu_419_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_233_p0 = bitcast_ln81_1_fu_371_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_233_p0 = IM_vec_128_b_reg_543;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_233_p0 = bitcast_ln74_1_fu_329_p1;
    end else begin
        grp_fu_233_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_233_p1 = tmp_7_reg_618;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_233_p1 = Real_load_2_reg_564;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_233_p1 = IM_vec_128_a_reg_537;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_233_p1 = reg_245;
    end else begin
        grp_fu_233_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_237_p0 = bitcast_ln76_3_fu_433_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_237_p0 = tmp_9_reg_629;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_237_p0 = bitcast_ln80_1_fu_357_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_237_p0 = bitcast_ln75_1_fu_343_p1;
    end else begin
        grp_fu_237_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_237_p1 = tmp_1_1_reg_600;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_237_p1 = tmp_7_reg_618;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_237_p1 = IM_vec_128_a_reg_537;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        grp_fu_237_p1 = reg_253;
    end else begin
        grp_fu_237_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_241_p0 = tmp_9_1_reg_635;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_241_p0 = bitcast_ln82_1_fu_391_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_241_p0 = tmp_3_reg_612;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_241_p0 = tmp_3_1_reg_606;
    end else begin
        grp_fu_241_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        grp_fu_241_p1 = tmp_7_1_reg_624;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_241_p1 = tmp_1_reg_594;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_241_p1 = tmp_1_1_reg_600;
    end else begin
        grp_fu_241_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        lut_reorder_I_ce0 = 1'b1;
    end else begin
        lut_reorder_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        lut_reorder_J_ce0 = 1'b1;
    end else begin
        lut_reorder_J_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_6_fu_266_p3 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_6_fu_266_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b0)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln91_fu_438_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln91_fu_438_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Imag_Addr_A = Imag_Addr_A_orig << 32'd2;

assign Imag_Addr_B = Imag_Addr_B_orig << 32'd2;

assign Imag_Clk_A = ap_clk;

assign Imag_Clk_B = ap_clk;

assign Imag_Rst_A = ap_rst_n_inv;

assign Imag_Rst_B = ap_rst_n_inv;

assign Real_r_Addr_A = Real_r_Addr_A_orig << 32'd2;

assign Real_r_Addr_B = Real_r_Addr_B_orig << 32'd2;

assign Real_r_Clk_A = ap_clk;

assign Real_r_Clk_B = ap_clk;

assign Real_r_Rst_A = ap_rst_n_inv;

assign Real_r_Rst_B = ap_rst_n_inv;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd10];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln74_1_fu_329_p1 = xor_ln74_fu_323_p2;

assign bitcast_ln74_fu_320_p1 = RE_vec_128_b_reg_516;

assign bitcast_ln75_1_fu_343_p1 = xor_ln75_fu_337_p2;

assign bitcast_ln75_fu_334_p1 = Imag_load_1_reg_522;

assign bitcast_ln76_1_fu_405_p1 = xor_ln76_fu_399_p2;

assign bitcast_ln76_2_fu_424_p1 = tmp_3_1_reg_606;

assign bitcast_ln76_3_fu_433_p1 = xor_ln76_1_fu_427_p2;

assign bitcast_ln76_fu_396_p1 = tmp_3_reg_612;

assign bitcast_ln80_1_fu_357_p1 = xor_ln80_fu_351_p2;

assign bitcast_ln80_fu_348_p1 = IM_vec_128_b_reg_543;

assign bitcast_ln81_1_fu_371_p1 = xor_ln81_fu_365_p2;

assign bitcast_ln81_fu_362_p1 = Real_load_3_reg_574;

assign bitcast_ln82_1_fu_391_p1 = xor_ln82_fu_385_p2;

assign bitcast_ln82_2_fu_410_p1 = tmp_9_reg_629;

assign bitcast_ln82_3_fu_419_p1 = xor_ln82_1_fu_413_p2;

assign bitcast_ln82_fu_382_p1 = tmp_9_1_reg_635;

assign c_fu_376_p2 = (11'd4 + c_0_reg_206);

assign i_fu_444_p2 = (ap_phi_mux_i_0_phi_fu_222_p4 + 9'd1);

assign icmp_ln91_fu_438_p2 = ((ap_phi_mux_i_0_phi_fu_222_p4 == 9'd480) ? 1'b1 : 1'b0);

assign ind1_fu_278_p2 = (trunc_ln41_fu_274_p1 | 10'd1);

assign ind2_fu_284_p2 = (trunc_ln41_fu_274_p1 | 10'd2);

assign ind3_fu_290_p2 = (trunc_ln41_fu_274_p1 | 10'd3);

assign lut_reorder_I_address0 = zext_ln96_fu_450_p1;

assign lut_reorder_J_address0 = zext_ln96_fu_450_p1;

assign tmp_6_fu_266_p3 = ap_phi_mux_c_0_phi_fu_210_p4[32'd10];

assign trunc_ln41_fu_274_p1 = ap_phi_mux_c_0_phi_fu_210_p4[9:0];

assign xor_ln74_fu_323_p2 = (bitcast_ln74_fu_320_p1 ^ 32'd2147483648);

assign xor_ln75_fu_337_p2 = (bitcast_ln75_fu_334_p1 ^ 32'd2147483648);

assign xor_ln76_1_fu_427_p2 = (bitcast_ln76_2_fu_424_p1 ^ 32'd2147483648);

assign xor_ln76_fu_399_p2 = (bitcast_ln76_fu_396_p1 ^ 32'd2147483648);

assign xor_ln80_fu_351_p2 = (bitcast_ln80_fu_348_p1 ^ 32'd2147483648);

assign xor_ln81_fu_365_p2 = (bitcast_ln81_fu_362_p1 ^ 32'd2147483648);

assign xor_ln82_1_fu_413_p2 = (bitcast_ln82_2_fu_410_p1 ^ 32'd2147483648);

assign xor_ln82_fu_385_p2 = (bitcast_ln82_fu_382_p1 ^ 32'd2147483648);

assign zext_ln101_fu_462_p1 = lut_reorder_J_q0;

assign zext_ln47_fu_296_p1 = ap_phi_mux_c_0_phi_fu_210_p4;

assign zext_ln48_fu_302_p1 = ind2_fu_284_p2;

assign zext_ln49_fu_308_p1 = ind1_fu_278_p2;

assign zext_ln51_fu_314_p1 = ind3_fu_290_p2;

assign zext_ln96_fu_450_p1 = ap_phi_mux_i_0_phi_fu_222_p4;

assign zext_ln99_fu_456_p1 = lut_reorder_I_q0;

always @ (posedge ap_clk) begin
    Real_addr_1_reg_477[1] <= 1'b1;
    Real_addr_1_reg_477_pp0_iter1_reg[1] <= 1'b1;
    Real_addr_1_reg_477_pp0_iter2_reg[1] <= 1'b1;
    Real_addr_1_reg_477_pp0_iter3_reg[1] <= 1'b1;
    Real_addr_2_reg_483[0] <= 1'b1;
    Real_addr_2_reg_483_pp0_iter1_reg[0] <= 1'b1;
    Real_addr_2_reg_483_pp0_iter2_reg[0] <= 1'b1;
    Imag_addr_reg_489[0] <= 1'b1;
    Imag_addr_reg_489_pp0_iter1_reg[0] <= 1'b1;
    Imag_addr_reg_489_pp0_iter2_reg[0] <= 1'b1;
    Real_addr_3_reg_495[1:0] <= 2'b11;
    Real_addr_3_reg_495_pp0_iter1_reg[1:0] <= 2'b11;
    Real_addr_3_reg_495_pp0_iter2_reg[1:0] <= 2'b11;
    Real_addr_3_reg_495_pp0_iter3_reg[1:0] <= 2'b11;
    Imag_addr_1_reg_500[1:0] <= 2'b11;
    Imag_addr_1_reg_500_pp0_iter1_reg[1:0] <= 2'b11;
    Imag_addr_1_reg_500_pp0_iter2_reg[1:0] <= 2'b11;
    Imag_addr_1_reg_500_pp0_iter3_reg[1:0] <= 2'b11;
    Imag_addr_3_reg_510[1] <= 1'b1;
    Imag_addr_3_reg_510_pp0_iter1_reg[1] <= 1'b1;
    Imag_addr_3_reg_510_pp0_iter2_reg[1] <= 1'b1;
    Imag_addr_3_reg_510_pp0_iter3_reg[1] <= 1'b1;
end

endmodule //Reorder_fft
