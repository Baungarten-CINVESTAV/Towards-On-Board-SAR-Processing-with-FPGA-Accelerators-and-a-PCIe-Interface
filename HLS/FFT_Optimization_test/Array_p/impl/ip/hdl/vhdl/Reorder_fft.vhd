-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1.3
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Reorder_fft is
generic (
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    Real_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Real_0_ce0 : OUT STD_LOGIC;
    Real_0_we0 : OUT STD_LOGIC;
    Real_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Real_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Real_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Real_1_ce0 : OUT STD_LOGIC;
    Real_1_we0 : OUT STD_LOGIC;
    Real_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Real_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Real_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Real_2_ce0 : OUT STD_LOGIC;
    Real_2_we0 : OUT STD_LOGIC;
    Real_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Real_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Real_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Real_3_ce0 : OUT STD_LOGIC;
    Real_3_we0 : OUT STD_LOGIC;
    Real_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Real_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Imag_0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Imag_0_ce0 : OUT STD_LOGIC;
    Imag_0_we0 : OUT STD_LOGIC;
    Imag_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Imag_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Imag_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Imag_1_ce0 : OUT STD_LOGIC;
    Imag_1_we0 : OUT STD_LOGIC;
    Imag_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Imag_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Imag_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Imag_2_ce0 : OUT STD_LOGIC;
    Imag_2_we0 : OUT STD_LOGIC;
    Imag_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Imag_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Imag_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    Imag_3_ce0 : OUT STD_LOGIC;
    Imag_3_we0 : OUT STD_LOGIC;
    Imag_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Imag_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    s_axi_AXILiteS_AWVALID : IN STD_LOGIC;
    s_axi_AXILiteS_AWREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_WVALID : IN STD_LOGIC;
    s_axi_AXILiteS_WREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_AXILiteS_ARVALID : IN STD_LOGIC;
    s_axi_AXILiteS_ARREADY : OUT STD_LOGIC;
    s_axi_AXILiteS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_AXILiteS_RVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_RREADY : IN STD_LOGIC;
    s_axi_AXILiteS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_AXILiteS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXILiteS_BVALID : OUT STD_LOGIC;
    s_axi_AXILiteS_BREADY : IN STD_LOGIC;
    s_axi_AXILiteS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of Reorder_fft is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "Reorder_fft,hls_ip_2019_1_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.466000,HLS_SYN_LAT=2703,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=12,HLS_SYN_FF=2713,HLS_SYN_LUT=3717,HLS_VERSION=2019_1_3}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_pp1_stage2 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_pp1_stage3 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv11_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_const_lv9_1E0 : STD_LOGIC_VECTOR (8 downto 0) := "111100000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal lut_reorder_I_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lut_reorder_I_ce0 : STD_LOGIC;
    signal lut_reorder_I_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal lut_reorder_J_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal lut_reorder_J_ce0 : STD_LOGIC;
    signal lut_reorder_J_q0 : STD_LOGIC_VECTOR (9 downto 0);
    signal c_0_reg_400 : STD_LOGIC_VECTOR (10 downto 0);
    signal i_0_reg_412 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_431_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_447 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state16_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_8_reg_754 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_754_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state12_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state15_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_8_reg_754_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_453_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_8_reg_754_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_754_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal Real_0_addr_reg_758 : STD_LOGIC_VECTOR (7 downto 0);
    signal Real_0_addr_reg_758_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Real_0_addr_reg_758_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Real_0_addr_reg_758_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Real_0_addr_reg_758_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Real_1_addr_reg_768 : STD_LOGIC_VECTOR (7 downto 0);
    signal Imag_1_addr_reg_773 : STD_LOGIC_VECTOR (7 downto 0);
    signal Real_3_addr_reg_778 : STD_LOGIC_VECTOR (7 downto 0);
    signal Imag_3_addr_reg_783 : STD_LOGIC_VECTOR (7 downto 0);
    signal Imag_0_addr_reg_788 : STD_LOGIC_VECTOR (7 downto 0);
    signal Imag_0_addr_reg_788_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Imag_0_addr_reg_788_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Imag_0_addr_reg_788_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Imag_0_addr_reg_788_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln1_reg_798 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln1_reg_798_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln1_reg_798_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln1_reg_798_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln1_reg_798_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal RE_vec_128_a_reg_803 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal RE_vec_128_b_reg_809 : STD_LOGIC_VECTOR (31 downto 0);
    signal Real_1_load_reg_815 : STD_LOGIC_VECTOR (31 downto 0);
    signal Imag_1_load_reg_820 : STD_LOGIC_VECTOR (31 downto 0);
    signal Real_3_load_reg_825 : STD_LOGIC_VECTOR (31 downto 0);
    signal Imag_3_load_reg_830 : STD_LOGIC_VECTOR (31 downto 0);
    signal IM_vec_128_a_reg_835 : STD_LOGIC_VECTOR (31 downto 0);
    signal IM_vec_128_b_reg_841 : STD_LOGIC_VECTOR (31 downto 0);
    signal Imag_1_load_1_reg_847 : STD_LOGIC_VECTOR (31 downto 0);
    signal Real_1_load_1_reg_852 : STD_LOGIC_VECTOR (31 downto 0);
    signal Imag_3_load_1_reg_857 : STD_LOGIC_VECTOR (31 downto 0);
    signal Real_3_load_1_reg_862 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln75_1_fu_502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln76_1_fu_516_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln81_1_fu_530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_fu_535_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal c_reg_882 : STD_LOGIC_VECTOR (10 downto 0);
    signal bitcast_ln82_1_fu_550_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_423_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_892 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal grp_fu_427_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_898 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_904 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_435_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_1_reg_910 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_439_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_1_reg_916 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_443_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_1_reg_922 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_928 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_1_reg_934 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln77_1_fu_564_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln77_3_fu_578_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln83_1_fu_592_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln83_3_fu_606_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_960 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_1_reg_965 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_3_reg_970 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_1_reg_975 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln85_fu_611_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln85_reg_980 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_10_2_reg_989 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_3_reg_994 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln92_fu_615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln92_reg_999 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state18_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state22_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal i_fu_621_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_1003 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal trunc_ln100_fu_633_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln100_reg_1018 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_block_state19_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal Real_0_addr_1_reg_1023 : STD_LOGIC_VECTOR (7 downto 0);
    signal Real_1_addr_2_reg_1028 : STD_LOGIC_VECTOR (7 downto 0);
    signal Real_2_addr_2_reg_1033 : STD_LOGIC_VECTOR (7 downto 0);
    signal Real_3_addr_2_reg_1038 : STD_LOGIC_VECTOR (7 downto 0);
    signal Imag_0_addr_1_reg_1043 : STD_LOGIC_VECTOR (7 downto 0);
    signal Imag_1_addr_2_reg_1048 : STD_LOGIC_VECTOR (7 downto 0);
    signal Imag_2_addr_2_reg_1053 : STD_LOGIC_VECTOR (7 downto 0);
    signal Imag_3_addr_2_reg_1058 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln102_fu_659_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln102_reg_1063 : STD_LOGIC_VECTOR (1 downto 0);
    signal lshr_ln3_reg_1068 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempr_fu_676_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tempr_reg_1073 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp1_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage2 : signal is "none";
    signal ap_block_state20_pp1_stage2_iter0 : BOOLEAN;
    signal ap_block_pp1_stage2_11001 : BOOLEAN;
    signal tempi_fu_690_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tempi_reg_1081 : STD_LOGIC_VECTOR (31 downto 0);
    signal Real_0_addr_2_reg_1089 : STD_LOGIC_VECTOR (7 downto 0);
    signal Real_1_addr_3_reg_1094 : STD_LOGIC_VECTOR (7 downto 0);
    signal Real_2_addr_3_reg_1099 : STD_LOGIC_VECTOR (7 downto 0);
    signal Real_3_addr_3_reg_1104 : STD_LOGIC_VECTOR (7 downto 0);
    signal Imag_0_addr_2_reg_1109 : STD_LOGIC_VECTOR (7 downto 0);
    signal Imag_1_addr_3_reg_1114 : STD_LOGIC_VECTOR (7 downto 0);
    signal Imag_2_addr_3_reg_1119 : STD_LOGIC_VECTOR (7 downto 0);
    signal Imag_3_addr_3_reg_1124 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state18 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_state21_pp1_stage3_iter0 : BOOLEAN;
    signal ap_block_pp1_stage3_subdone : BOOLEAN;
    signal ap_CS_fsm_pp1_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage3 : signal is "none";
    signal ap_phi_mux_c_0_phi_fu_404_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_i_0_phi_fu_416_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal zext_ln48_fu_471_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln97_fu_627_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln100_1_fu_647_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal zext_ln102_1_fu_704_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage2 : BOOLEAN;
    signal ap_block_pp1_stage3_11001 : BOOLEAN;
    signal tmp_s_fu_718_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp1_stage3 : BOOLEAN;
    signal tmp_6_fu_736_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_423_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_423_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_427_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_431_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_431_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_435_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_435_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_439_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_443_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_443_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln_fu_461_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal bitcast_ln75_fu_493_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln75_fu_496_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln76_fu_507_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln76_fu_510_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln81_fu_521_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln81_fu_524_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln82_fu_541_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln82_fu_544_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln77_fu_555_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln77_fu_558_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln77_2_fu_569_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln77_1_fu_572_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln83_fu_583_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln83_fu_586_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln83_2_fu_597_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln83_1_fu_600_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln2_fu_637_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln100_fu_673_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln102_fu_715_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_block_pp1_stage2_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component Reorder_fft_fadd_dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Reorder_fft_mux_4eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Reorder_fft_lut_rbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component Reorder_fft_lut_rcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component Reorder_fft_AXILiteS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    lut_reorder_I_U : component Reorder_fft_lut_rbkb
    generic map (
        DataWidth => 10,
        AddressRange => 480,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => lut_reorder_I_address0,
        ce0 => lut_reorder_I_ce0,
        q0 => lut_reorder_I_q0);

    lut_reorder_J_U : component Reorder_fft_lut_rcud
    generic map (
        DataWidth => 10,
        AddressRange => 480,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => lut_reorder_J_address0,
        ce0 => lut_reorder_J_ce0,
        q0 => lut_reorder_J_q0);

    Reorder_fft_AXILiteS_s_axi_U : component Reorder_fft_AXILiteS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXILiteS_AWVALID,
        AWREADY => s_axi_AXILiteS_AWREADY,
        AWADDR => s_axi_AXILiteS_AWADDR,
        WVALID => s_axi_AXILiteS_WVALID,
        WREADY => s_axi_AXILiteS_WREADY,
        WDATA => s_axi_AXILiteS_WDATA,
        WSTRB => s_axi_AXILiteS_WSTRB,
        ARVALID => s_axi_AXILiteS_ARVALID,
        ARREADY => s_axi_AXILiteS_ARREADY,
        ARADDR => s_axi_AXILiteS_ARADDR,
        RVALID => s_axi_AXILiteS_RVALID,
        RREADY => s_axi_AXILiteS_RREADY,
        RDATA => s_axi_AXILiteS_RDATA,
        RRESP => s_axi_AXILiteS_RRESP,
        BVALID => s_axi_AXILiteS_BVALID,
        BREADY => s_axi_AXILiteS_BREADY,
        BRESP => s_axi_AXILiteS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    Reorder_fft_fadd_dEe_U1 : component Reorder_fft_fadd_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_423_p0,
        din1 => grp_fu_423_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_423_p2);

    Reorder_fft_fadd_dEe_U2 : component Reorder_fft_fadd_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_427_p0,
        din1 => grp_fu_427_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_427_p2);

    Reorder_fft_fadd_dEe_U3 : component Reorder_fft_fadd_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_431_p0,
        din1 => grp_fu_431_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_431_p2);

    Reorder_fft_fadd_dEe_U4 : component Reorder_fft_fadd_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_435_p0,
        din1 => grp_fu_435_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_435_p2);

    Reorder_fft_fadd_dEe_U5 : component Reorder_fft_fadd_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_439_p0,
        din1 => grp_fu_439_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_439_p2);

    Reorder_fft_fadd_dEe_U6 : component Reorder_fft_fadd_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_443_p0,
        din1 => grp_fu_443_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_443_p2);

    Reorder_fft_mux_4eOg_U7 : component Reorder_fft_mux_4eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => Real_0_q0,
        din1 => Real_1_q0,
        din2 => Real_2_q0,
        din3 => Real_3_q0,
        din4 => zext_ln100_fu_673_p1,
        dout => tempr_fu_676_p6);

    Reorder_fft_mux_4eOg_U8 : component Reorder_fft_mux_4eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => Imag_0_q0,
        din1 => Imag_1_q0,
        din2 => Imag_2_q0,
        din3 => Imag_3_q0,
        din4 => zext_ln100_fu_673_p1,
        dout => tempi_fu_690_p6);

    Reorder_fft_mux_4eOg_U9 : component Reorder_fft_mux_4eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => Real_0_q0,
        din1 => Real_1_q0,
        din2 => Real_2_q0,
        din3 => Real_3_q0,
        din4 => zext_ln102_fu_715_p1,
        dout => tmp_s_fu_718_p6);

    Reorder_fft_mux_4eOg_U10 : component Reorder_fft_mux_4eOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => Imag_0_q0,
        din1 => Imag_1_q0,
        din2 => Imag_2_q0,
        din3 => Imag_3_q0,
        din4 => zext_ln102_fu_715_p1,
        dout => tmp_6_fu_736_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state18) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp1_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c_0_reg_400_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_754 = ap_const_lv1_0))) then 
                c_0_reg_400 <= c_reg_882;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                c_0_reg_400 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    i_0_reg_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                i_0_reg_412 <= ap_const_lv9_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln92_reg_999 = ap_const_lv1_0))) then 
                i_0_reg_412 <= i_reg_1003;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_8_reg_754 = ap_const_lv1_0))) then
                IM_vec_128_a_reg_835 <= Imag_0_q0;
                IM_vec_128_b_reg_841 <= Imag_2_q0;
                Imag_1_load_reg_820 <= Imag_1_q0;
                Imag_3_load_reg_830 <= Imag_3_q0;
                RE_vec_128_a_reg_803 <= Real_0_q0;
                RE_vec_128_b_reg_809 <= Real_2_q0;
                Real_1_load_reg_815 <= Real_1_q0;
                Real_3_load_reg_825 <= Real_3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln92_reg_999 = ap_const_lv1_0))) then
                Imag_0_addr_1_reg_1043 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
                Imag_1_addr_2_reg_1048 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
                Imag_2_addr_2_reg_1053 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
                Imag_3_addr_2_reg_1058 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
                Real_0_addr_1_reg_1023 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
                Real_1_addr_2_reg_1028 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
                Real_2_addr_2_reg_1033 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
                Real_3_addr_2_reg_1038 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
                lshr_ln3_reg_1068 <= lut_reorder_J_q0(9 downto 2);
                trunc_ln100_reg_1018 <= trunc_ln100_fu_633_p1;
                trunc_ln102_reg_1063 <= trunc_ln102_fu_659_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (icmp_ln92_reg_999 = ap_const_lv1_0))) then
                Imag_0_addr_2_reg_1109 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
                Imag_1_addr_3_reg_1114 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
                Imag_2_addr_3_reg_1119 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
                Imag_3_addr_3_reg_1124 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
                Real_0_addr_2_reg_1089 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
                Real_1_addr_3_reg_1094 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
                Real_2_addr_3_reg_1099 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
                Real_3_addr_3_reg_1104 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
                tempi_reg_1081 <= tempi_fu_690_p6;
                tempr_reg_1073 <= tempr_fu_676_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_fu_453_p3 = ap_const_lv1_0))) then
                Imag_0_addr_reg_788 <= zext_ln48_fu_471_p1(8 - 1 downto 0);
                Imag_1_addr_reg_773 <= zext_ln48_fu_471_p1(8 - 1 downto 0);
                Imag_3_addr_reg_783 <= zext_ln48_fu_471_p1(8 - 1 downto 0);
                Real_0_addr_reg_758 <= zext_ln48_fu_471_p1(8 - 1 downto 0);
                Real_1_addr_reg_768 <= zext_ln48_fu_471_p1(8 - 1 downto 0);
                Real_3_addr_reg_778 <= zext_ln48_fu_471_p1(8 - 1 downto 0);
                lshr_ln1_reg_798 <= ap_phi_mux_c_0_phi_fu_404_p4(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Imag_0_addr_reg_788_pp0_iter1_reg <= Imag_0_addr_reg_788;
                Imag_0_addr_reg_788_pp0_iter2_reg <= Imag_0_addr_reg_788_pp0_iter1_reg;
                Imag_0_addr_reg_788_pp0_iter3_reg <= Imag_0_addr_reg_788_pp0_iter2_reg;
                Imag_0_addr_reg_788_pp0_iter4_reg <= Imag_0_addr_reg_788_pp0_iter3_reg;
                Real_0_addr_reg_758_pp0_iter1_reg <= Real_0_addr_reg_758;
                Real_0_addr_reg_758_pp0_iter2_reg <= Real_0_addr_reg_758_pp0_iter1_reg;
                Real_0_addr_reg_758_pp0_iter3_reg <= Real_0_addr_reg_758_pp0_iter2_reg;
                Real_0_addr_reg_758_pp0_iter4_reg <= Real_0_addr_reg_758_pp0_iter3_reg;
                lshr_ln1_reg_798_pp0_iter1_reg <= lshr_ln1_reg_798;
                lshr_ln1_reg_798_pp0_iter2_reg <= lshr_ln1_reg_798_pp0_iter1_reg;
                lshr_ln1_reg_798_pp0_iter3_reg <= lshr_ln1_reg_798_pp0_iter2_reg;
                lshr_ln1_reg_798_pp0_iter4_reg <= lshr_ln1_reg_798_pp0_iter3_reg;
                tmp_8_reg_754 <= ap_phi_mux_c_0_phi_fu_404_p4(10 downto 10);
                tmp_8_reg_754_pp0_iter1_reg <= tmp_8_reg_754;
                tmp_8_reg_754_pp0_iter2_reg <= tmp_8_reg_754_pp0_iter1_reg;
                tmp_8_reg_754_pp0_iter3_reg <= tmp_8_reg_754_pp0_iter2_reg;
                tmp_8_reg_754_pp0_iter4_reg <= tmp_8_reg_754_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_754 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                Imag_1_load_1_reg_847 <= Imag_1_q0;
                Imag_3_load_1_reg_857 <= Imag_3_q0;
                Real_1_load_1_reg_852 <= Real_1_q0;
                Real_3_load_1_reg_862 <= Real_3_q0;
                c_reg_882 <= c_fu_535_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                i_reg_1003 <= i_fu_621_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln92_reg_999 <= icmp_ln92_fu_615_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_8_reg_754_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_754_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then
                reg_447 <= grp_fu_431_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_8_reg_754_pp0_iter4_reg = ap_const_lv1_0))) then
                tmp_10_1_reg_975 <= grp_fu_435_p2;
                tmp_10_2_reg_989 <= grp_fu_439_p2;
                tmp_10_3_reg_994 <= grp_fu_443_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_8_reg_754_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_1_1_reg_910 <= grp_fu_435_p2;
                tmp_1_reg_892 <= grp_fu_423_p2;
                tmp_3_1_reg_916 <= grp_fu_439_p2;
                tmp_3_reg_898 <= grp_fu_427_p2;
                tmp_7_1_reg_922 <= grp_fu_443_p2;
                tmp_7_reg_904 <= grp_fu_431_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_754_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                tmp_5_1_reg_965 <= grp_fu_427_p2;
                tmp_5_3_reg_970 <= grp_fu_435_p2;
                tmp_5_reg_960 <= grp_fu_423_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_8_reg_754_pp0_iter2_reg = ap_const_lv1_0))) then
                tmp_9_1_reg_934 <= grp_fu_427_p2;
                tmp_9_reg_928 <= grp_fu_423_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_8_reg_754_pp0_iter4_reg = ap_const_lv1_0))) then
                    zext_ln85_reg_980(7 downto 0) <= zext_ln85_fu_611_p1(7 downto 0);
            end if;
        end if;
    end process;
    zext_ln85_reg_980(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, tmp_8_fu_453_p3, ap_enable_reg_pp0_iter0, icmp_ln92_fu_615_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage2_subdone, ap_block_pp1_stage0_subdone, ap_block_pp1_stage3_subdone, ap_block_pp0_stage1_subdone, ap_block_pp1_stage1_subdone, ap_block_pp1_stage2_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_8_fu_453_p3 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (tmp_8_fu_453_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln92_fu_615_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln92_fu_615_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_pp1_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                end if;
            when ap_ST_fsm_pp1_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;

    Imag_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage0, Imag_0_addr_reg_788_pp0_iter4_reg, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, Imag_0_addr_1_reg_1043, ap_CS_fsm_pp1_stage2, Imag_0_addr_2_reg_1109, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp0_stage0, ap_block_pp1_stage0, zext_ln48_fu_471_p1, ap_block_pp0_stage2, zext_ln100_1_fu_647_p1, ap_block_pp1_stage1, zext_ln102_1_fu_704_p1, ap_block_pp1_stage2, ap_block_pp1_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Imag_0_address0 <= Imag_0_addr_2_reg_1109;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_0_address0 <= Imag_0_addr_1_reg_1043;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_0_address0 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_0_address0 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            Imag_0_address0 <= Imag_0_addr_reg_788_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Imag_0_address0 <= zext_ln48_fu_471_p1(8 - 1 downto 0);
        else 
            Imag_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    Imag_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            Imag_0_ce0 <= ap_const_logic_1;
        else 
            Imag_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Imag_0_d0_assign_proc : process(reg_447, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tempi_reg_1081, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage0, ap_block_pp0_stage2, ap_block_pp1_stage3, tmp_6_fu_736_p6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Imag_0_d0 <= tempi_reg_1081;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_0_d0 <= tmp_6_fu_736_p6;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            Imag_0_d0 <= reg_447;
        else 
            Imag_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Imag_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter4, tmp_8_reg_754_pp0_iter4_reg, icmp_ln92_reg_999, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, trunc_ln100_reg_1018, trunc_ln102_reg_1063, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (trunc_ln100_reg_1018 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln92_reg_999 = ap_const_lv1_0)) or ((trunc_ln102_reg_1063 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_754_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            Imag_0_we0 <= ap_const_logic_1;
        else 
            Imag_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Imag_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage0, Imag_1_addr_reg_773, ap_enable_reg_pp0_iter0, zext_ln85_reg_980, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, Imag_1_addr_2_reg_1048, ap_CS_fsm_pp1_stage2, Imag_1_addr_3_reg_1114, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp0_stage0, ap_block_pp1_stage0, zext_ln48_fu_471_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln100_1_fu_647_p1, ap_block_pp1_stage1, zext_ln102_1_fu_704_p1, ap_block_pp1_stage2, ap_block_pp1_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Imag_1_address0 <= Imag_1_addr_3_reg_1114;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_1_address0 <= Imag_1_addr_2_reg_1048;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_1_address0 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_1_address0 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            Imag_1_address0 <= zext_ln85_reg_980(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            Imag_1_address0 <= Imag_1_addr_reg_773;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Imag_1_address0 <= zext_ln48_fu_471_p1(8 - 1 downto 0);
        else 
            Imag_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    Imag_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            Imag_1_ce0 <= ap_const_logic_1;
        else 
            Imag_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Imag_1_d0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter4, tmp_10_1_reg_975, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tempi_reg_1081, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage0, ap_block_pp0_stage2, ap_block_pp1_stage3, tmp_6_fu_736_p6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Imag_1_d0 <= tempi_reg_1081;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_1_d0 <= tmp_6_fu_736_p6;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            Imag_1_d0 <= tmp_10_1_reg_975;
        else 
            Imag_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Imag_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter4, tmp_8_reg_754_pp0_iter4_reg, icmp_ln92_reg_999, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, trunc_ln100_reg_1018, trunc_ln102_reg_1063, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (trunc_ln100_reg_1018 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln92_reg_999 = ap_const_lv1_0)) or ((trunc_ln102_reg_1063 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_754_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            Imag_1_we0 <= ap_const_logic_1;
        else 
            Imag_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Imag_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln85_reg_980, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, Imag_2_addr_2_reg_1053, ap_CS_fsm_pp1_stage2, Imag_2_addr_3_reg_1119, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp0_stage0, ap_block_pp1_stage0, zext_ln48_fu_471_p1, ap_block_pp0_stage2, zext_ln100_1_fu_647_p1, ap_block_pp1_stage1, zext_ln102_1_fu_704_p1, ap_block_pp1_stage2, ap_block_pp1_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Imag_2_address0 <= Imag_2_addr_3_reg_1119;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_2_address0 <= Imag_2_addr_2_reg_1053;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_2_address0 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_2_address0 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            Imag_2_address0 <= zext_ln85_reg_980(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Imag_2_address0 <= zext_ln48_fu_471_p1(8 - 1 downto 0);
        else 
            Imag_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    Imag_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            Imag_2_ce0 <= ap_const_logic_1;
        else 
            Imag_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Imag_2_d0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter4, tmp_10_2_reg_989, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tempi_reg_1081, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage0, ap_block_pp0_stage2, ap_block_pp1_stage3, tmp_6_fu_736_p6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Imag_2_d0 <= tempi_reg_1081;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_2_d0 <= tmp_6_fu_736_p6;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            Imag_2_d0 <= tmp_10_2_reg_989;
        else 
            Imag_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Imag_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter4, tmp_8_reg_754_pp0_iter4_reg, icmp_ln92_reg_999, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, trunc_ln100_reg_1018, trunc_ln102_reg_1063, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (trunc_ln100_reg_1018 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln92_reg_999 = ap_const_lv1_0)) or ((trunc_ln102_reg_1063 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_754_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            Imag_2_we0 <= ap_const_logic_1;
        else 
            Imag_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Imag_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage0, Imag_3_addr_reg_783, ap_enable_reg_pp0_iter0, zext_ln85_reg_980, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, Imag_3_addr_2_reg_1058, ap_CS_fsm_pp1_stage2, Imag_3_addr_3_reg_1124, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp0_stage0, ap_block_pp1_stage0, zext_ln48_fu_471_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln100_1_fu_647_p1, ap_block_pp1_stage1, zext_ln102_1_fu_704_p1, ap_block_pp1_stage2, ap_block_pp1_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Imag_3_address0 <= Imag_3_addr_3_reg_1124;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_3_address0 <= Imag_3_addr_2_reg_1058;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_3_address0 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_3_address0 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            Imag_3_address0 <= zext_ln85_reg_980(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            Imag_3_address0 <= Imag_3_addr_reg_783;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Imag_3_address0 <= zext_ln48_fu_471_p1(8 - 1 downto 0);
        else 
            Imag_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    Imag_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            Imag_3_ce0 <= ap_const_logic_1;
        else 
            Imag_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Imag_3_d0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter4, tmp_10_3_reg_994, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tempi_reg_1081, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage0, ap_block_pp0_stage2, ap_block_pp1_stage3, tmp_6_fu_736_p6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Imag_3_d0 <= tempi_reg_1081;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Imag_3_d0 <= tmp_6_fu_736_p6;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            Imag_3_d0 <= tmp_10_3_reg_994;
        else 
            Imag_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Imag_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter4, tmp_8_reg_754_pp0_iter4_reg, icmp_ln92_reg_999, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, trunc_ln100_reg_1018, trunc_ln102_reg_1063, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (trunc_ln100_reg_1018 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln92_reg_999 = ap_const_lv1_0)) or ((trunc_ln102_reg_1063 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_754_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            Imag_3_we0 <= ap_const_logic_1;
        else 
            Imag_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Real_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage0, Real_0_addr_reg_758_pp0_iter4_reg, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, Real_0_addr_1_reg_1023, ap_CS_fsm_pp1_stage2, Real_0_addr_2_reg_1089, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp0_stage0, ap_block_pp1_stage0, zext_ln48_fu_471_p1, ap_block_pp0_stage1, zext_ln100_1_fu_647_p1, ap_block_pp1_stage1, zext_ln102_1_fu_704_p1, ap_block_pp1_stage2, ap_block_pp1_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Real_0_address0 <= Real_0_addr_2_reg_1089;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_0_address0 <= Real_0_addr_1_reg_1023;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_0_address0 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_0_address0 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            Real_0_address0 <= Real_0_addr_reg_758_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Real_0_address0 <= zext_ln48_fu_471_p1(8 - 1 downto 0);
        else 
            Real_0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    Real_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            Real_0_ce0 <= ap_const_logic_1;
        else 
            Real_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Real_0_d0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, tmp_5_reg_960, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tempr_reg_1073, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage0, ap_block_pp0_stage1, tmp_s_fu_718_p6, ap_block_pp1_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Real_0_d0 <= tempr_reg_1073;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_0_d0 <= tmp_s_fu_718_p6;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            Real_0_d0 <= tmp_5_reg_960;
        else 
            Real_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Real_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1_11001, tmp_8_reg_754_pp0_iter4_reg, icmp_ln92_reg_999, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, trunc_ln100_reg_1018, trunc_ln102_reg_1063, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (trunc_ln100_reg_1018 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln92_reg_999 = ap_const_lv1_0)) or ((trunc_ln102_reg_1063 = ap_const_lv2_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_8_reg_754_pp0_iter4_reg = ap_const_lv1_0)))) then 
            Real_0_we0 <= ap_const_logic_1;
        else 
            Real_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Real_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage0, Real_1_addr_reg_768, ap_enable_reg_pp0_iter0, zext_ln85_reg_980, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, Real_1_addr_2_reg_1028, ap_CS_fsm_pp1_stage2, Real_1_addr_3_reg_1094, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp0_stage0, ap_block_pp1_stage0, zext_ln48_fu_471_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln100_1_fu_647_p1, ap_block_pp1_stage1, zext_ln102_1_fu_704_p1, ap_block_pp1_stage2, ap_block_pp1_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Real_1_address0 <= Real_1_addr_3_reg_1094;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_1_address0 <= Real_1_addr_2_reg_1028;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_1_address0 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_1_address0 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            Real_1_address0 <= zext_ln85_reg_980(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            Real_1_address0 <= Real_1_addr_reg_768;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Real_1_address0 <= zext_ln48_fu_471_p1(8 - 1 downto 0);
        else 
            Real_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    Real_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            Real_1_ce0 <= ap_const_logic_1;
        else 
            Real_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Real_1_d0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter4, tmp_5_1_reg_965, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tempr_reg_1073, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage0, ap_block_pp0_stage2, tmp_s_fu_718_p6, ap_block_pp1_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Real_1_d0 <= tempr_reg_1073;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_1_d0 <= tmp_s_fu_718_p6;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            Real_1_d0 <= tmp_5_1_reg_965;
        else 
            Real_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Real_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter4, tmp_8_reg_754_pp0_iter4_reg, icmp_ln92_reg_999, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, trunc_ln100_reg_1018, trunc_ln102_reg_1063, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (trunc_ln100_reg_1018 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln92_reg_999 = ap_const_lv1_0)) or ((trunc_ln102_reg_1063 = ap_const_lv2_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_754_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            Real_1_we0 <= ap_const_logic_1;
        else 
            Real_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Real_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln85_fu_611_p1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, Real_2_addr_2_reg_1033, ap_CS_fsm_pp1_stage2, Real_2_addr_3_reg_1099, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp0_stage0, ap_block_pp1_stage0, zext_ln48_fu_471_p1, ap_block_pp0_stage1, zext_ln100_1_fu_647_p1, ap_block_pp1_stage1, zext_ln102_1_fu_704_p1, ap_block_pp1_stage2, ap_block_pp1_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Real_2_address0 <= Real_2_addr_3_reg_1099;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_2_address0 <= Real_2_addr_2_reg_1033;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_2_address0 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_2_address0 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            Real_2_address0 <= zext_ln85_fu_611_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Real_2_address0 <= zext_ln48_fu_471_p1(8 - 1 downto 0);
        else 
            Real_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    Real_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            Real_2_ce0 <= ap_const_logic_1;
        else 
            Real_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Real_2_d0_assign_proc : process(reg_447, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tempr_reg_1073, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage0, ap_block_pp0_stage1, tmp_s_fu_718_p6, ap_block_pp1_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Real_2_d0 <= tempr_reg_1073;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_2_d0 <= tmp_s_fu_718_p6;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            Real_2_d0 <= reg_447;
        else 
            Real_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Real_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1_11001, tmp_8_reg_754_pp0_iter4_reg, icmp_ln92_reg_999, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, trunc_ln100_reg_1018, trunc_ln102_reg_1063, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (trunc_ln100_reg_1018 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln92_reg_999 = ap_const_lv1_0)) or ((trunc_ln102_reg_1063 = ap_const_lv2_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (tmp_8_reg_754_pp0_iter4_reg = ap_const_lv1_0)))) then 
            Real_2_we0 <= ap_const_logic_1;
        else 
            Real_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Real_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage0, Real_3_addr_reg_778, ap_enable_reg_pp0_iter0, zext_ln85_reg_980, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, Real_3_addr_2_reg_1038, ap_CS_fsm_pp1_stage2, Real_3_addr_3_reg_1104, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp0_stage0, ap_block_pp1_stage0, zext_ln48_fu_471_p1, ap_block_pp0_stage1, ap_block_pp0_stage2, zext_ln100_1_fu_647_p1, ap_block_pp1_stage1, zext_ln102_1_fu_704_p1, ap_block_pp1_stage2, ap_block_pp1_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Real_3_address0 <= Real_3_addr_3_reg_1104;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_3_address0 <= Real_3_addr_2_reg_1038;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_3_address0 <= zext_ln102_1_fu_704_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_3_address0 <= zext_ln100_1_fu_647_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            Real_3_address0 <= zext_ln85_reg_980(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            Real_3_address0 <= Real_3_addr_reg_778;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Real_3_address0 <= zext_ln48_fu_471_p1(8 - 1 downto 0);
        else 
            Real_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    Real_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1_11001, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2_11001, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            Real_3_ce0 <= ap_const_logic_1;
        else 
            Real_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Real_3_d0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter4, tmp_5_3_reg_970, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, tempr_reg_1073, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage0, ap_block_pp0_stage2, tmp_s_fu_718_p6, ap_block_pp1_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            Real_3_d0 <= tempr_reg_1073;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            Real_3_d0 <= tmp_s_fu_718_p6;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            Real_3_d0 <= tmp_5_3_reg_970;
        else 
            Real_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    Real_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_enable_reg_pp0_iter4, tmp_8_reg_754_pp0_iter4_reg, icmp_ln92_reg_999, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, trunc_ln100_reg_1018, trunc_ln102_reg_1063, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (trunc_ln100_reg_1018 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln92_reg_999 = ap_const_lv1_0)) or ((trunc_ln102_reg_1063 = ap_const_lv2_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (tmp_8_reg_754_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            Real_3_we0 <= ap_const_logic_1;
        else 
            Real_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(6);
    ap_CS_fsm_pp1_stage2 <= ap_CS_fsm(7);
    ap_CS_fsm_pp1_stage3 <= ap_CS_fsm(8);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state17 <= ap_CS_fsm(4);
    ap_CS_fsm_state23 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(tmp_8_fu_453_p3)
    begin
        if ((tmp_8_fu_453_p3 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state18_assign_proc : process(icmp_ln92_fu_615_p2)
    begin
        if ((icmp_ln92_fu_615_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state18 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state18 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c_0_phi_fu_404_p4_assign_proc : process(c_0_reg_400, tmp_8_reg_754, ap_CS_fsm_pp0_stage0, c_reg_882, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_8_reg_754 = ap_const_lv1_0))) then 
            ap_phi_mux_c_0_phi_fu_404_p4 <= c_reg_882;
        else 
            ap_phi_mux_c_0_phi_fu_404_p4 <= c_0_reg_400;
        end if; 
    end process;


    ap_phi_mux_i_0_phi_fu_416_p4_assign_proc : process(i_0_reg_412, icmp_ln92_reg_999, ap_CS_fsm_pp1_stage0, i_reg_1003, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln92_reg_999 = ap_const_lv1_0))) then 
            ap_phi_mux_i_0_phi_fu_416_p4 <= i_reg_1003;
        else 
            ap_phi_mux_i_0_phi_fu_416_p4 <= i_0_reg_412;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln75_1_fu_502_p1 <= xor_ln75_fu_496_p2;
    bitcast_ln75_fu_493_p1 <= RE_vec_128_b_reg_809;
    bitcast_ln76_1_fu_516_p1 <= xor_ln76_fu_510_p2;
    bitcast_ln76_fu_507_p1 <= Imag_3_load_reg_830;
    bitcast_ln77_1_fu_564_p1 <= xor_ln77_fu_558_p2;
    bitcast_ln77_2_fu_569_p1 <= tmp_3_1_reg_916;
    bitcast_ln77_3_fu_578_p1 <= xor_ln77_1_fu_572_p2;
    bitcast_ln77_fu_555_p1 <= tmp_3_reg_898;
    bitcast_ln81_1_fu_530_p1 <= xor_ln81_fu_524_p2;
    bitcast_ln81_fu_521_p1 <= IM_vec_128_b_reg_841;
    bitcast_ln82_1_fu_550_p1 <= xor_ln82_fu_544_p2;
    bitcast_ln82_fu_541_p1 <= Real_3_load_1_reg_862;
    bitcast_ln83_1_fu_592_p1 <= xor_ln83_fu_586_p2;
    bitcast_ln83_2_fu_597_p1 <= tmp_9_reg_928;
    bitcast_ln83_3_fu_606_p1 <= xor_ln83_1_fu_600_p2;
    bitcast_ln83_fu_583_p1 <= tmp_9_1_reg_934;
    c_fu_535_p2 <= std_logic_vector(unsigned(c_0_reg_400) + unsigned(ap_const_lv11_4));

    grp_fu_423_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, RE_vec_128_b_reg_809, Imag_3_load_1_reg_857, ap_enable_reg_pp0_iter2, tmp_3_reg_898, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_423_p0 <= tmp_3_reg_898;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_423_p0 <= Imag_3_load_1_reg_857;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_423_p0 <= RE_vec_128_b_reg_809;
        else 
            grp_fu_423_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_423_p1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, RE_vec_128_a_reg_803, ap_enable_reg_pp0_iter0, Imag_1_load_1_reg_847, tmp_1_reg_892, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_423_p1 <= tmp_1_reg_892;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_423_p1 <= Imag_1_load_1_reg_847;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_423_p1 <= RE_vec_128_a_reg_803;
        else 
            grp_fu_423_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_427_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, Real_3_load_reg_825, bitcast_ln82_1_fu_550_p1, ap_enable_reg_pp0_iter2, tmp_3_1_reg_916, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_427_p0 <= tmp_3_1_reg_916;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_427_p0 <= bitcast_ln82_1_fu_550_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_427_p0 <= Real_3_load_reg_825;
        else 
            grp_fu_427_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_427_p1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, Real_1_load_reg_815, Real_1_load_1_reg_852, ap_enable_reg_pp0_iter2, tmp_1_1_reg_910, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_427_p1 <= tmp_1_1_reg_910;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_427_p1 <= Real_1_load_1_reg_852;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_427_p1 <= Real_1_load_reg_815;
        else 
            grp_fu_427_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_431_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, IM_vec_128_b_reg_841, ap_enable_reg_pp0_iter2, tmp_9_reg_928, bitcast_ln77_1_fu_564_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_431_p0 <= tmp_9_reg_928;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_431_p0 <= bitcast_ln77_1_fu_564_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_431_p0 <= IM_vec_128_b_reg_841;
        else 
            grp_fu_431_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_431_p1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, IM_vec_128_a_reg_835, tmp_1_reg_892, ap_enable_reg_pp0_iter2, tmp_7_reg_904, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_431_p1 <= tmp_7_reg_904;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_431_p1 <= tmp_1_reg_892;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_431_p1 <= IM_vec_128_a_reg_835;
        else 
            grp_fu_431_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_435_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, bitcast_ln75_1_fu_502_p1, ap_enable_reg_pp0_iter2, bitcast_ln77_3_fu_578_p1, bitcast_ln83_1_fu_592_p1, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_435_p0 <= bitcast_ln83_1_fu_592_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_435_p0 <= bitcast_ln77_3_fu_578_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_435_p0 <= bitcast_ln75_1_fu_502_p1;
        else 
            grp_fu_435_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_435_p1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, RE_vec_128_a_reg_803, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, tmp_1_1_reg_910, tmp_7_1_reg_922, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_435_p1 <= tmp_7_1_reg_922;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_435_p1 <= tmp_1_1_reg_910;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_435_p1 <= RE_vec_128_a_reg_803;
        else 
            grp_fu_435_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_439_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, bitcast_ln76_1_fu_516_p1, bitcast_ln83_3_fu_606_p1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_439_p0 <= bitcast_ln83_3_fu_606_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_439_p0 <= bitcast_ln76_1_fu_516_p1;
        else 
            grp_fu_439_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_439_p1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, Imag_1_load_reg_820, tmp_7_reg_904, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_439_p1 <= tmp_7_reg_904;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_439_p1 <= Imag_1_load_reg_820;
        else 
            grp_fu_439_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_443_p0_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, bitcast_ln81_1_fu_530_p1, tmp_9_1_reg_934, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_443_p0 <= tmp_9_1_reg_934;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_443_p0 <= bitcast_ln81_1_fu_530_p1;
        else 
            grp_fu_443_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_443_p1_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, IM_vec_128_a_reg_835, tmp_7_1_reg_922, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            grp_fu_443_p1 <= tmp_7_1_reg_922;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_443_p1 <= IM_vec_128_a_reg_835;
        else 
            grp_fu_443_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_fu_621_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_phi_fu_416_p4) + unsigned(ap_const_lv9_1));
    icmp_ln92_fu_615_p2 <= "1" when (ap_phi_mux_i_0_phi_fu_416_p4 = ap_const_lv9_1E0) else "0";
    lshr_ln2_fu_637_p4 <= lut_reorder_I_q0(9 downto 2);
    lshr_ln_fu_461_p4 <= ap_phi_mux_c_0_phi_fu_404_p4(10 downto 2);
    lut_reorder_I_address0 <= zext_ln97_fu_627_p1(9 - 1 downto 0);

    lut_reorder_I_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            lut_reorder_I_ce0 <= ap_const_logic_1;
        else 
            lut_reorder_I_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    lut_reorder_J_address0 <= zext_ln97_fu_627_p1(9 - 1 downto 0);

    lut_reorder_J_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            lut_reorder_J_ce0 <= ap_const_logic_1;
        else 
            lut_reorder_J_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_8_fu_453_p3 <= ap_phi_mux_c_0_phi_fu_404_p4(10 downto 10);
    trunc_ln100_fu_633_p1 <= lut_reorder_I_q0(2 - 1 downto 0);
    trunc_ln102_fu_659_p1 <= lut_reorder_J_q0(2 - 1 downto 0);
    xor_ln75_fu_496_p2 <= (bitcast_ln75_fu_493_p1 xor ap_const_lv32_80000000);
    xor_ln76_fu_510_p2 <= (bitcast_ln76_fu_507_p1 xor ap_const_lv32_80000000);
    xor_ln77_1_fu_572_p2 <= (bitcast_ln77_2_fu_569_p1 xor ap_const_lv32_80000000);
    xor_ln77_fu_558_p2 <= (bitcast_ln77_fu_555_p1 xor ap_const_lv32_80000000);
    xor_ln81_fu_524_p2 <= (bitcast_ln81_fu_521_p1 xor ap_const_lv32_80000000);
    xor_ln82_fu_544_p2 <= (bitcast_ln82_fu_541_p1 xor ap_const_lv32_80000000);
    xor_ln83_1_fu_600_p2 <= (bitcast_ln83_2_fu_597_p1 xor ap_const_lv32_80000000);
    xor_ln83_fu_586_p2 <= (bitcast_ln83_fu_583_p1 xor ap_const_lv32_80000000);
    zext_ln100_1_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln2_fu_637_p4),64));
    zext_ln100_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln100_reg_1018),32));
    zext_ln102_1_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln3_reg_1068),64));
    zext_ln102_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln102_reg_1063),32));
    zext_ln48_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_461_p4),64));
    zext_ln85_fu_611_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1_reg_798_pp0_iter4_reg),64));
    zext_ln97_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_0_phi_fu_416_p4),64));
end behav;
