// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Reorder_fft,hls_ip_2019_1_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.466000,HLS_SYN_LAT=2703,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=12,HLS_SYN_FF=2713,HLS_SYN_LUT=3717,HLS_VERSION=2019_1_3}" *)

module Reorder_fft (
        ap_clk,
        ap_rst_n,
        Real_0_address0,
        Real_0_ce0,
        Real_0_we0,
        Real_0_d0,
        Real_0_q0,
        Real_1_address0,
        Real_1_ce0,
        Real_1_we0,
        Real_1_d0,
        Real_1_q0,
        Real_2_address0,
        Real_2_ce0,
        Real_2_we0,
        Real_2_d0,
        Real_2_q0,
        Real_3_address0,
        Real_3_ce0,
        Real_3_we0,
        Real_3_d0,
        Real_3_q0,
        Imag_0_address0,
        Imag_0_ce0,
        Imag_0_we0,
        Imag_0_d0,
        Imag_0_q0,
        Imag_1_address0,
        Imag_1_ce0,
        Imag_1_we0,
        Imag_1_d0,
        Imag_1_q0,
        Imag_2_address0,
        Imag_2_ce0,
        Imag_2_we0,
        Imag_2_d0,
        Imag_2_q0,
        Imag_3_address0,
        Imag_3_ce0,
        Imag_3_we0,
        Imag_3_d0,
        Imag_3_q0,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_pp0_stage0 = 10'd2;
parameter    ap_ST_fsm_pp0_stage1 = 10'd4;
parameter    ap_ST_fsm_pp0_stage2 = 10'd8;
parameter    ap_ST_fsm_state17 = 10'd16;
parameter    ap_ST_fsm_pp1_stage0 = 10'd32;
parameter    ap_ST_fsm_pp1_stage1 = 10'd64;
parameter    ap_ST_fsm_pp1_stage2 = 10'd128;
parameter    ap_ST_fsm_pp1_stage3 = 10'd256;
parameter    ap_ST_fsm_state23 = 10'd512;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [7:0] Real_0_address0;
output   Real_0_ce0;
output   Real_0_we0;
output  [31:0] Real_0_d0;
input  [31:0] Real_0_q0;
output  [7:0] Real_1_address0;
output   Real_1_ce0;
output   Real_1_we0;
output  [31:0] Real_1_d0;
input  [31:0] Real_1_q0;
output  [7:0] Real_2_address0;
output   Real_2_ce0;
output   Real_2_we0;
output  [31:0] Real_2_d0;
input  [31:0] Real_2_q0;
output  [7:0] Real_3_address0;
output   Real_3_ce0;
output   Real_3_we0;
output  [31:0] Real_3_d0;
input  [31:0] Real_3_q0;
output  [7:0] Imag_0_address0;
output   Imag_0_ce0;
output   Imag_0_we0;
output  [31:0] Imag_0_d0;
input  [31:0] Imag_0_q0;
output  [7:0] Imag_1_address0;
output   Imag_1_ce0;
output   Imag_1_we0;
output  [31:0] Imag_1_d0;
input  [31:0] Imag_1_q0;
output  [7:0] Imag_2_address0;
output   Imag_2_ce0;
output   Imag_2_we0;
output  [31:0] Imag_2_d0;
input  [31:0] Imag_2_q0;
output  [7:0] Imag_3_address0;
output   Imag_3_ce0;
output   Imag_3_we0;
output  [31:0] Imag_3_d0;
input  [31:0] Imag_3_q0;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg[7:0] Real_0_address0;
reg Real_0_ce0;
reg Real_0_we0;
reg[31:0] Real_0_d0;
reg[7:0] Real_1_address0;
reg Real_1_ce0;
reg Real_1_we0;
reg[31:0] Real_1_d0;
reg[7:0] Real_2_address0;
reg Real_2_ce0;
reg Real_2_we0;
reg[31:0] Real_2_d0;
reg[7:0] Real_3_address0;
reg Real_3_ce0;
reg Real_3_we0;
reg[31:0] Real_3_d0;
reg[7:0] Imag_0_address0;
reg Imag_0_ce0;
reg Imag_0_we0;
reg[31:0] Imag_0_d0;
reg[7:0] Imag_1_address0;
reg Imag_1_ce0;
reg Imag_1_we0;
reg[31:0] Imag_1_d0;
reg[7:0] Imag_2_address0;
reg Imag_2_ce0;
reg Imag_2_we0;
reg[31:0] Imag_2_d0;
reg[7:0] Imag_3_address0;
reg Imag_3_ce0;
reg Imag_3_we0;
reg[31:0] Imag_3_d0;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [8:0] lut_reorder_I_address0;
reg    lut_reorder_I_ce0;
wire   [9:0] lut_reorder_I_q0;
wire   [8:0] lut_reorder_J_address0;
reg    lut_reorder_J_ce0;
wire   [9:0] lut_reorder_J_q0;
reg   [10:0] c_0_reg_400;
reg   [8:0] i_0_reg_412;
wire   [31:0] grp_fu_431_p2;
reg   [31:0] reg_447;
wire    ap_CS_fsm_pp0_stage2;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state10_pp0_stage2_iter2;
wire    ap_block_state13_pp0_stage2_iter3;
wire    ap_block_state16_pp0_stage2_iter4;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] tmp_8_reg_754;
reg   [0:0] tmp_8_reg_754_pp0_iter3_reg;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state9_pp0_stage1_iter2;
wire    ap_block_state12_pp0_stage1_iter3;
wire    ap_block_state15_pp0_stage1_iter4;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] tmp_8_reg_754_pp0_iter4_reg;
wire   [0:0] tmp_8_fu_453_p3;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state8_pp0_stage0_iter2;
wire    ap_block_state11_pp0_stage0_iter3;
wire    ap_block_state14_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_8_reg_754_pp0_iter1_reg;
reg   [0:0] tmp_8_reg_754_pp0_iter2_reg;
reg   [7:0] Real_0_addr_reg_758;
reg   [7:0] Real_0_addr_reg_758_pp0_iter1_reg;
reg   [7:0] Real_0_addr_reg_758_pp0_iter2_reg;
reg   [7:0] Real_0_addr_reg_758_pp0_iter3_reg;
reg   [7:0] Real_0_addr_reg_758_pp0_iter4_reg;
reg   [7:0] Real_1_addr_reg_768;
reg   [7:0] Imag_1_addr_reg_773;
reg   [7:0] Real_3_addr_reg_778;
reg   [7:0] Imag_3_addr_reg_783;
reg   [7:0] Imag_0_addr_reg_788;
reg   [7:0] Imag_0_addr_reg_788_pp0_iter1_reg;
reg   [7:0] Imag_0_addr_reg_788_pp0_iter2_reg;
reg   [7:0] Imag_0_addr_reg_788_pp0_iter3_reg;
reg   [7:0] Imag_0_addr_reg_788_pp0_iter4_reg;
reg   [7:0] lshr_ln1_reg_798;
reg   [7:0] lshr_ln1_reg_798_pp0_iter1_reg;
reg   [7:0] lshr_ln1_reg_798_pp0_iter2_reg;
reg   [7:0] lshr_ln1_reg_798_pp0_iter3_reg;
reg   [7:0] lshr_ln1_reg_798_pp0_iter4_reg;
reg   [31:0] RE_vec_128_a_reg_803;
reg    ap_enable_reg_pp0_iter0;
reg   [31:0] RE_vec_128_b_reg_809;
reg   [31:0] Real_1_load_reg_815;
reg   [31:0] Imag_1_load_reg_820;
reg   [31:0] Real_3_load_reg_825;
reg   [31:0] Imag_3_load_reg_830;
reg   [31:0] IM_vec_128_a_reg_835;
reg   [31:0] IM_vec_128_b_reg_841;
reg   [31:0] Imag_1_load_1_reg_847;
reg   [31:0] Real_1_load_1_reg_852;
reg   [31:0] Imag_3_load_1_reg_857;
reg   [31:0] Real_3_load_1_reg_862;
wire   [31:0] bitcast_ln75_1_fu_502_p1;
wire   [31:0] bitcast_ln76_1_fu_516_p1;
wire   [31:0] bitcast_ln81_1_fu_530_p1;
wire   [10:0] c_fu_535_p2;
reg   [10:0] c_reg_882;
wire   [31:0] bitcast_ln82_1_fu_550_p1;
wire   [31:0] grp_fu_423_p2;
reg   [31:0] tmp_1_reg_892;
reg    ap_enable_reg_pp0_iter2;
wire   [31:0] grp_fu_427_p2;
reg   [31:0] tmp_3_reg_898;
reg   [31:0] tmp_7_reg_904;
wire   [31:0] grp_fu_435_p2;
reg   [31:0] tmp_1_1_reg_910;
wire   [31:0] grp_fu_439_p2;
reg   [31:0] tmp_3_1_reg_916;
wire   [31:0] grp_fu_443_p2;
reg   [31:0] tmp_7_1_reg_922;
reg   [31:0] tmp_9_reg_928;
reg   [31:0] tmp_9_1_reg_934;
wire   [31:0] bitcast_ln77_1_fu_564_p1;
wire   [31:0] bitcast_ln77_3_fu_578_p1;
wire   [31:0] bitcast_ln83_1_fu_592_p1;
wire   [31:0] bitcast_ln83_3_fu_606_p1;
reg   [31:0] tmp_5_reg_960;
reg   [31:0] tmp_5_1_reg_965;
reg   [31:0] tmp_5_3_reg_970;
reg   [31:0] tmp_10_1_reg_975;
wire   [63:0] zext_ln85_fu_611_p1;
reg   [63:0] zext_ln85_reg_980;
reg   [31:0] tmp_10_2_reg_989;
reg   [31:0] tmp_10_3_reg_994;
wire   [0:0] icmp_ln92_fu_615_p2;
reg   [0:0] icmp_ln92_reg_999;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state18_pp1_stage0_iter0;
wire    ap_block_state22_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [8:0] i_fu_621_p2;
reg   [8:0] i_reg_1003;
reg    ap_enable_reg_pp1_iter0;
wire   [1:0] trunc_ln100_fu_633_p1;
reg   [1:0] trunc_ln100_reg_1018;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state19_pp1_stage1_iter0;
wire    ap_block_pp1_stage1_11001;
reg   [7:0] Real_0_addr_1_reg_1023;
reg   [7:0] Real_1_addr_2_reg_1028;
reg   [7:0] Real_2_addr_2_reg_1033;
reg   [7:0] Real_3_addr_2_reg_1038;
reg   [7:0] Imag_0_addr_1_reg_1043;
reg   [7:0] Imag_1_addr_2_reg_1048;
reg   [7:0] Imag_2_addr_2_reg_1053;
reg   [7:0] Imag_3_addr_2_reg_1058;
wire   [1:0] trunc_ln102_fu_659_p1;
reg   [1:0] trunc_ln102_reg_1063;
reg   [7:0] lshr_ln3_reg_1068;
wire   [31:0] tempr_fu_676_p6;
reg   [31:0] tempr_reg_1073;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_state20_pp1_stage2_iter0;
wire    ap_block_pp1_stage2_11001;
wire   [31:0] tempi_fu_690_p6;
reg   [31:0] tempi_reg_1081;
reg   [7:0] Real_0_addr_2_reg_1089;
reg   [7:0] Real_1_addr_3_reg_1094;
reg   [7:0] Real_2_addr_3_reg_1099;
reg   [7:0] Real_3_addr_3_reg_1104;
reg   [7:0] Imag_0_addr_2_reg_1109;
reg   [7:0] Imag_1_addr_3_reg_1114;
reg   [7:0] Imag_2_addr_3_reg_1119;
reg   [7:0] Imag_3_addr_3_reg_1124;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_CS_fsm_state17;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state18;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_state21_pp1_stage3_iter0;
wire    ap_block_pp1_stage3_subdone;
wire    ap_CS_fsm_pp1_stage3;
reg   [10:0] ap_phi_mux_c_0_phi_fu_404_p4;
wire    ap_block_pp0_stage0;
reg   [8:0] ap_phi_mux_i_0_phi_fu_416_p4;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln48_fu_471_p1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln97_fu_627_p1;
wire   [63:0] zext_ln100_1_fu_647_p1;
wire    ap_block_pp1_stage1;
wire   [63:0] zext_ln102_1_fu_704_p1;
wire    ap_block_pp1_stage2;
wire    ap_block_pp1_stage3_11001;
wire   [31:0] tmp_s_fu_718_p6;
wire    ap_block_pp1_stage3;
wire   [31:0] tmp_6_fu_736_p6;
reg   [31:0] grp_fu_423_p0;
reg   [31:0] grp_fu_423_p1;
reg   [31:0] grp_fu_427_p0;
reg   [31:0] grp_fu_427_p1;
reg   [31:0] grp_fu_431_p0;
reg   [31:0] grp_fu_431_p1;
reg   [31:0] grp_fu_435_p0;
reg   [31:0] grp_fu_435_p1;
reg   [31:0] grp_fu_439_p0;
reg   [31:0] grp_fu_439_p1;
reg   [31:0] grp_fu_443_p0;
reg   [31:0] grp_fu_443_p1;
wire   [8:0] lshr_ln_fu_461_p4;
wire   [31:0] bitcast_ln75_fu_493_p1;
wire   [31:0] xor_ln75_fu_496_p2;
wire   [31:0] bitcast_ln76_fu_507_p1;
wire   [31:0] xor_ln76_fu_510_p2;
wire   [31:0] bitcast_ln81_fu_521_p1;
wire   [31:0] xor_ln81_fu_524_p2;
wire   [31:0] bitcast_ln82_fu_541_p1;
wire   [31:0] xor_ln82_fu_544_p2;
wire   [31:0] bitcast_ln77_fu_555_p1;
wire   [31:0] xor_ln77_fu_558_p2;
wire   [31:0] bitcast_ln77_2_fu_569_p1;
wire   [31:0] xor_ln77_1_fu_572_p2;
wire   [31:0] bitcast_ln83_fu_583_p1;
wire   [31:0] xor_ln83_fu_586_p2;
wire   [31:0] bitcast_ln83_2_fu_597_p1;
wire   [31:0] xor_ln83_1_fu_600_p2;
wire   [7:0] lshr_ln2_fu_637_p4;
wire   [31:0] zext_ln100_fu_673_p1;
wire   [31:0] zext_ln102_fu_715_p1;
wire    ap_CS_fsm_state23;
reg   [9:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp1_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

Reorder_fft_lut_rbkb #(
    .DataWidth( 10 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
lut_reorder_I_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lut_reorder_I_address0),
    .ce0(lut_reorder_I_ce0),
    .q0(lut_reorder_I_q0)
);

Reorder_fft_lut_rcud #(
    .DataWidth( 10 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
lut_reorder_J_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lut_reorder_J_address0),
    .ce0(lut_reorder_J_ce0),
    .q0(lut_reorder_J_q0)
);

Reorder_fft_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
Reorder_fft_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_423_p0),
    .din1(grp_fu_423_p1),
    .ce(1'b1),
    .dout(grp_fu_423_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_427_p0),
    .din1(grp_fu_427_p1),
    .ce(1'b1),
    .dout(grp_fu_427_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_431_p0),
    .din1(grp_fu_431_p1),
    .ce(1'b1),
    .dout(grp_fu_431_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_435_p0),
    .din1(grp_fu_435_p1),
    .ce(1'b1),
    .dout(grp_fu_435_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_439_p0),
    .din1(grp_fu_439_p1),
    .ce(1'b1),
    .dout(grp_fu_439_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_443_p0),
    .din1(grp_fu_443_p1),
    .ce(1'b1),
    .dout(grp_fu_443_p2)
);

Reorder_fft_mux_4eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4eOg_U7(
    .din0(Real_0_q0),
    .din1(Real_1_q0),
    .din2(Real_2_q0),
    .din3(Real_3_q0),
    .din4(zext_ln100_fu_673_p1),
    .dout(tempr_fu_676_p6)
);

Reorder_fft_mux_4eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4eOg_U8(
    .din0(Imag_0_q0),
    .din1(Imag_1_q0),
    .din2(Imag_2_q0),
    .din3(Imag_3_q0),
    .din4(zext_ln100_fu_673_p1),
    .dout(tempi_fu_690_p6)
);

Reorder_fft_mux_4eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4eOg_U9(
    .din0(Real_0_q0),
    .din1(Real_1_q0),
    .din2(Real_2_q0),
    .din3(Real_3_q0),
    .din4(zext_ln102_fu_715_p1),
    .dout(tmp_s_fu_718_p6)
);

Reorder_fft_mux_4eOg #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4eOg_U10(
    .din0(Imag_0_q0),
    .din1(Imag_1_q0),
    .din2(Imag_2_q0),
    .din3(Imag_3_q0),
    .din4(zext_ln102_fu_715_p1),
    .dout(tmp_6_fu_736_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp1_stage3_subdone) & (1'b1 == ap_CS_fsm_pp1_stage3)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_754 == 1'd0))) begin
        c_0_reg_400 <= c_reg_882;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_reg_400 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_0_reg_412 <= 9'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln92_reg_999 == 1'd0))) begin
        i_0_reg_412 <= i_reg_1003;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_8_reg_754 == 1'd0))) begin
        IM_vec_128_a_reg_835 <= Imag_0_q0;
        IM_vec_128_b_reg_841 <= Imag_2_q0;
        Imag_1_load_reg_820 <= Imag_1_q0;
        Imag_3_load_reg_830 <= Imag_3_q0;
        RE_vec_128_a_reg_803 <= Real_0_q0;
        RE_vec_128_b_reg_809 <= Real_2_q0;
        Real_1_load_reg_815 <= Real_1_q0;
        Real_3_load_reg_825 <= Real_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (icmp_ln92_reg_999 == 1'd0))) begin
        Imag_0_addr_1_reg_1043 <= zext_ln100_1_fu_647_p1;
        Imag_1_addr_2_reg_1048 <= zext_ln100_1_fu_647_p1;
        Imag_2_addr_2_reg_1053 <= zext_ln100_1_fu_647_p1;
        Imag_3_addr_2_reg_1058 <= zext_ln100_1_fu_647_p1;
        Real_0_addr_1_reg_1023 <= zext_ln100_1_fu_647_p1;
        Real_1_addr_2_reg_1028 <= zext_ln100_1_fu_647_p1;
        Real_2_addr_2_reg_1033 <= zext_ln100_1_fu_647_p1;
        Real_3_addr_2_reg_1038 <= zext_ln100_1_fu_647_p1;
        lshr_ln3_reg_1068 <= {{lut_reorder_J_q0[9:2]}};
        trunc_ln100_reg_1018 <= trunc_ln100_fu_633_p1;
        trunc_ln102_reg_1063 <= trunc_ln102_fu_659_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (icmp_ln92_reg_999 == 1'd0))) begin
        Imag_0_addr_2_reg_1109 <= zext_ln102_1_fu_704_p1;
        Imag_1_addr_3_reg_1114 <= zext_ln102_1_fu_704_p1;
        Imag_2_addr_3_reg_1119 <= zext_ln102_1_fu_704_p1;
        Imag_3_addr_3_reg_1124 <= zext_ln102_1_fu_704_p1;
        Real_0_addr_2_reg_1089 <= zext_ln102_1_fu_704_p1;
        Real_1_addr_3_reg_1094 <= zext_ln102_1_fu_704_p1;
        Real_2_addr_3_reg_1099 <= zext_ln102_1_fu_704_p1;
        Real_3_addr_3_reg_1104 <= zext_ln102_1_fu_704_p1;
        tempi_reg_1081 <= tempi_fu_690_p6;
        tempr_reg_1073 <= tempr_fu_676_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_fu_453_p3 == 1'd0))) begin
        Imag_0_addr_reg_788 <= zext_ln48_fu_471_p1;
        Imag_1_addr_reg_773 <= zext_ln48_fu_471_p1;
        Imag_3_addr_reg_783 <= zext_ln48_fu_471_p1;
        Real_0_addr_reg_758 <= zext_ln48_fu_471_p1;
        Real_1_addr_reg_768 <= zext_ln48_fu_471_p1;
        Real_3_addr_reg_778 <= zext_ln48_fu_471_p1;
        lshr_ln1_reg_798 <= {{ap_phi_mux_c_0_phi_fu_404_p4[9:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Imag_0_addr_reg_788_pp0_iter1_reg <= Imag_0_addr_reg_788;
        Imag_0_addr_reg_788_pp0_iter2_reg <= Imag_0_addr_reg_788_pp0_iter1_reg;
        Imag_0_addr_reg_788_pp0_iter3_reg <= Imag_0_addr_reg_788_pp0_iter2_reg;
        Imag_0_addr_reg_788_pp0_iter4_reg <= Imag_0_addr_reg_788_pp0_iter3_reg;
        Real_0_addr_reg_758_pp0_iter1_reg <= Real_0_addr_reg_758;
        Real_0_addr_reg_758_pp0_iter2_reg <= Real_0_addr_reg_758_pp0_iter1_reg;
        Real_0_addr_reg_758_pp0_iter3_reg <= Real_0_addr_reg_758_pp0_iter2_reg;
        Real_0_addr_reg_758_pp0_iter4_reg <= Real_0_addr_reg_758_pp0_iter3_reg;
        lshr_ln1_reg_798_pp0_iter1_reg <= lshr_ln1_reg_798;
        lshr_ln1_reg_798_pp0_iter2_reg <= lshr_ln1_reg_798_pp0_iter1_reg;
        lshr_ln1_reg_798_pp0_iter3_reg <= lshr_ln1_reg_798_pp0_iter2_reg;
        lshr_ln1_reg_798_pp0_iter4_reg <= lshr_ln1_reg_798_pp0_iter3_reg;
        tmp_8_reg_754 <= ap_phi_mux_c_0_phi_fu_404_p4[32'd10];
        tmp_8_reg_754_pp0_iter1_reg <= tmp_8_reg_754;
        tmp_8_reg_754_pp0_iter2_reg <= tmp_8_reg_754_pp0_iter1_reg;
        tmp_8_reg_754_pp0_iter3_reg <= tmp_8_reg_754_pp0_iter2_reg;
        tmp_8_reg_754_pp0_iter4_reg <= tmp_8_reg_754_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_754 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        Imag_1_load_1_reg_847 <= Imag_1_q0;
        Imag_3_load_1_reg_857 <= Imag_3_q0;
        Real_1_load_1_reg_852 <= Real_1_q0;
        Real_3_load_1_reg_862 <= Real_3_q0;
        c_reg_882 <= c_fu_535_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_reg_1003 <= i_fu_621_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln92_reg_999 <= icmp_ln92_fu_615_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_8_reg_754_pp0_iter4_reg == 1'd0)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_754_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_447 <= grp_fu_431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_8_reg_754_pp0_iter4_reg == 1'd0))) begin
        tmp_10_1_reg_975 <= grp_fu_435_p2;
        tmp_10_2_reg_989 <= grp_fu_439_p2;
        tmp_10_3_reg_994 <= grp_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_8_reg_754_pp0_iter1_reg == 1'd0))) begin
        tmp_1_1_reg_910 <= grp_fu_435_p2;
        tmp_1_reg_892 <= grp_fu_423_p2;
        tmp_3_1_reg_916 <= grp_fu_439_p2;
        tmp_3_reg_898 <= grp_fu_427_p2;
        tmp_7_1_reg_922 <= grp_fu_443_p2;
        tmp_7_reg_904 <= grp_fu_431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_754_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        tmp_5_1_reg_965 <= grp_fu_427_p2;
        tmp_5_3_reg_970 <= grp_fu_435_p2;
        tmp_5_reg_960 <= grp_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_8_reg_754_pp0_iter2_reg == 1'd0))) begin
        tmp_9_1_reg_934 <= grp_fu_427_p2;
        tmp_9_reg_928 <= grp_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_8_reg_754_pp0_iter4_reg == 1'd0))) begin
        zext_ln85_reg_980[7 : 0] <= zext_ln85_fu_611_p1[7 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Imag_0_address0 = Imag_0_addr_2_reg_1109;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_0_address0 = Imag_0_addr_1_reg_1043;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_0_address0 = zext_ln102_1_fu_704_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_0_address0 = zext_ln100_1_fu_647_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Imag_0_address0 = Imag_0_addr_reg_788_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Imag_0_address0 = zext_ln48_fu_471_p1;
    end else begin
        Imag_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        Imag_0_ce0 = 1'b1;
    end else begin
        Imag_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Imag_0_d0 = tempi_reg_1081;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_0_d0 = tmp_6_fu_736_p6;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Imag_0_d0 = reg_447;
    end else begin
        Imag_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (trunc_ln100_reg_1018 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln92_reg_999 == 1'd0)) | ((trunc_ln102_reg_1063 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_754_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        Imag_0_we0 = 1'b1;
    end else begin
        Imag_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Imag_1_address0 = Imag_1_addr_3_reg_1114;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_1_address0 = Imag_1_addr_2_reg_1048;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_1_address0 = zext_ln102_1_fu_704_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_1_address0 = zext_ln100_1_fu_647_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Imag_1_address0 = zext_ln85_reg_980;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Imag_1_address0 = Imag_1_addr_reg_773;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Imag_1_address0 = zext_ln48_fu_471_p1;
    end else begin
        Imag_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        Imag_1_ce0 = 1'b1;
    end else begin
        Imag_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Imag_1_d0 = tempi_reg_1081;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_1_d0 = tmp_6_fu_736_p6;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Imag_1_d0 = tmp_10_1_reg_975;
    end else begin
        Imag_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (trunc_ln100_reg_1018 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln92_reg_999 == 1'd0)) | ((trunc_ln102_reg_1063 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_754_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        Imag_1_we0 = 1'b1;
    end else begin
        Imag_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Imag_2_address0 = Imag_2_addr_3_reg_1119;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_2_address0 = Imag_2_addr_2_reg_1053;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_2_address0 = zext_ln102_1_fu_704_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_2_address0 = zext_ln100_1_fu_647_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Imag_2_address0 = zext_ln85_reg_980;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Imag_2_address0 = zext_ln48_fu_471_p1;
    end else begin
        Imag_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        Imag_2_ce0 = 1'b1;
    end else begin
        Imag_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Imag_2_d0 = tempi_reg_1081;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_2_d0 = tmp_6_fu_736_p6;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Imag_2_d0 = tmp_10_2_reg_989;
    end else begin
        Imag_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (trunc_ln100_reg_1018 == 2'd2) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln92_reg_999 == 1'd0)) | ((trunc_ln102_reg_1063 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_754_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        Imag_2_we0 = 1'b1;
    end else begin
        Imag_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Imag_3_address0 = Imag_3_addr_3_reg_1124;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_3_address0 = Imag_3_addr_2_reg_1058;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_3_address0 = zext_ln102_1_fu_704_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_3_address0 = zext_ln100_1_fu_647_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Imag_3_address0 = zext_ln85_reg_980;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Imag_3_address0 = Imag_3_addr_reg_783;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Imag_3_address0 = zext_ln48_fu_471_p1;
    end else begin
        Imag_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        Imag_3_ce0 = 1'b1;
    end else begin
        Imag_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Imag_3_d0 = tempi_reg_1081;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Imag_3_d0 = tmp_6_fu_736_p6;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Imag_3_d0 = tmp_10_3_reg_994;
    end else begin
        Imag_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (trunc_ln100_reg_1018 == 2'd3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln92_reg_999 == 1'd0)) | ((trunc_ln102_reg_1063 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_754_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        Imag_3_we0 = 1'b1;
    end else begin
        Imag_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Real_0_address0 = Real_0_addr_2_reg_1089;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_0_address0 = Real_0_addr_1_reg_1023;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_0_address0 = zext_ln102_1_fu_704_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_0_address0 = zext_ln100_1_fu_647_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Real_0_address0 = Real_0_addr_reg_758_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Real_0_address0 = zext_ln48_fu_471_p1;
    end else begin
        Real_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        Real_0_ce0 = 1'b1;
    end else begin
        Real_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Real_0_d0 = tempr_reg_1073;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_0_d0 = tmp_s_fu_718_p6;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Real_0_d0 = tmp_5_reg_960;
    end else begin
        Real_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (trunc_ln100_reg_1018 == 2'd0) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln92_reg_999 == 1'd0)) | ((trunc_ln102_reg_1063 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_8_reg_754_pp0_iter4_reg == 1'd0)))) begin
        Real_0_we0 = 1'b1;
    end else begin
        Real_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Real_1_address0 = Real_1_addr_3_reg_1094;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_1_address0 = Real_1_addr_2_reg_1028;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_1_address0 = zext_ln102_1_fu_704_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_1_address0 = zext_ln100_1_fu_647_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Real_1_address0 = zext_ln85_reg_980;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Real_1_address0 = Real_1_addr_reg_768;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Real_1_address0 = zext_ln48_fu_471_p1;
    end else begin
        Real_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        Real_1_ce0 = 1'b1;
    end else begin
        Real_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Real_1_d0 = tempr_reg_1073;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_1_d0 = tmp_s_fu_718_p6;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Real_1_d0 = tmp_5_1_reg_965;
    end else begin
        Real_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (trunc_ln100_reg_1018 == 2'd1) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln92_reg_999 == 1'd0)) | ((trunc_ln102_reg_1063 == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_754_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        Real_1_we0 = 1'b1;
    end else begin
        Real_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Real_2_address0 = Real_2_addr_3_reg_1099;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_2_address0 = Real_2_addr_2_reg_1033;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_2_address0 = zext_ln102_1_fu_704_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_2_address0 = zext_ln100_1_fu_647_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Real_2_address0 = zext_ln85_fu_611_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Real_2_address0 = zext_ln48_fu_471_p1;
    end else begin
        Real_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        Real_2_ce0 = 1'b1;
    end else begin
        Real_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Real_2_d0 = tempr_reg_1073;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_2_d0 = tmp_s_fu_718_p6;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Real_2_d0 = reg_447;
    end else begin
        Real_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (trunc_ln100_reg_1018 == 2'd2) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln92_reg_999 == 1'd0)) | ((trunc_ln102_reg_1063 == 2'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_8_reg_754_pp0_iter4_reg == 1'd0)))) begin
        Real_2_we0 = 1'b1;
    end else begin
        Real_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Real_3_address0 = Real_3_addr_3_reg_1104;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_3_address0 = Real_3_addr_2_reg_1038;
    end else if (((1'b0 == ap_block_pp1_stage2) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_3_address0 = zext_ln102_1_fu_704_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_3_address0 = zext_ln100_1_fu_647_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Real_3_address0 = zext_ln85_reg_980;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Real_3_address0 = Real_3_addr_reg_778;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Real_3_address0 = zext_ln48_fu_471_p1;
    end else begin
        Real_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        Real_3_ce0 = 1'b1;
    end else begin
        Real_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Real_3_d0 = tempr_reg_1073;
    end else if (((1'b0 == ap_block_pp1_stage3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Real_3_d0 = tmp_s_fu_718_p6;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Real_3_d0 = tmp_5_3_reg_970;
    end else begin
        Real_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage3_11001) & (trunc_ln100_reg_1018 == 2'd3) & (1'b1 == ap_CS_fsm_pp1_stage3) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln92_reg_999 == 1'd0)) | ((trunc_ln102_reg_1063 == 2'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_8_reg_754_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        Real_3_we0 = 1'b1;
    end else begin
        Real_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_8_fu_453_p3 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln92_fu_615_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_8_reg_754 == 1'd0))) begin
        ap_phi_mux_c_0_phi_fu_404_p4 = c_reg_882;
    end else begin
        ap_phi_mux_c_0_phi_fu_404_p4 = c_0_reg_400;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln92_reg_999 == 1'd0))) begin
        ap_phi_mux_i_0_phi_fu_416_p4 = i_reg_1003;
    end else begin
        ap_phi_mux_i_0_phi_fu_416_p4 = i_0_reg_412;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_423_p0 = tmp_3_reg_898;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_423_p0 = Imag_3_load_1_reg_857;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_423_p0 = RE_vec_128_b_reg_809;
    end else begin
        grp_fu_423_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_423_p1 = tmp_1_reg_892;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_423_p1 = Imag_1_load_1_reg_847;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_423_p1 = RE_vec_128_a_reg_803;
    end else begin
        grp_fu_423_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_427_p0 = tmp_3_1_reg_916;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_427_p0 = bitcast_ln82_1_fu_550_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_427_p0 = Real_3_load_reg_825;
    end else begin
        grp_fu_427_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_427_p1 = tmp_1_1_reg_910;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_427_p1 = Real_1_load_1_reg_852;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_427_p1 = Real_1_load_reg_815;
    end else begin
        grp_fu_427_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_431_p0 = tmp_9_reg_928;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_431_p0 = bitcast_ln77_1_fu_564_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_431_p0 = IM_vec_128_b_reg_841;
    end else begin
        grp_fu_431_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_431_p1 = tmp_7_reg_904;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_431_p1 = tmp_1_reg_892;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_431_p1 = IM_vec_128_a_reg_835;
    end else begin
        grp_fu_431_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_435_p0 = bitcast_ln83_1_fu_592_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_435_p0 = bitcast_ln77_3_fu_578_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_435_p0 = bitcast_ln75_1_fu_502_p1;
    end else begin
        grp_fu_435_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_435_p1 = tmp_7_1_reg_922;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_435_p1 = tmp_1_1_reg_910;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_435_p1 = RE_vec_128_a_reg_803;
    end else begin
        grp_fu_435_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_439_p0 = bitcast_ln83_3_fu_606_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_439_p0 = bitcast_ln76_1_fu_516_p1;
    end else begin
        grp_fu_439_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_439_p1 = tmp_7_reg_904;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_439_p1 = Imag_1_load_reg_820;
    end else begin
        grp_fu_439_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_443_p0 = tmp_9_1_reg_934;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_443_p0 = bitcast_ln81_1_fu_530_p1;
    end else begin
        grp_fu_443_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        grp_fu_443_p1 = tmp_7_1_reg_922;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_443_p1 = IM_vec_128_a_reg_835;
    end else begin
        grp_fu_443_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        lut_reorder_I_ce0 = 1'b1;
    end else begin
        lut_reorder_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        lut_reorder_J_ce0 = 1'b1;
    end else begin
        lut_reorder_J_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_8_fu_453_p3 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_8_fu_453_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b0)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln92_fu_615_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln92_fu_615_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((1'b0 == ap_block_pp1_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_pp1_stage3 : begin
            if ((1'b0 == ap_block_pp1_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp1_stage3 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln75_1_fu_502_p1 = xor_ln75_fu_496_p2;

assign bitcast_ln75_fu_493_p1 = RE_vec_128_b_reg_809;

assign bitcast_ln76_1_fu_516_p1 = xor_ln76_fu_510_p2;

assign bitcast_ln76_fu_507_p1 = Imag_3_load_reg_830;

assign bitcast_ln77_1_fu_564_p1 = xor_ln77_fu_558_p2;

assign bitcast_ln77_2_fu_569_p1 = tmp_3_1_reg_916;

assign bitcast_ln77_3_fu_578_p1 = xor_ln77_1_fu_572_p2;

assign bitcast_ln77_fu_555_p1 = tmp_3_reg_898;

assign bitcast_ln81_1_fu_530_p1 = xor_ln81_fu_524_p2;

assign bitcast_ln81_fu_521_p1 = IM_vec_128_b_reg_841;

assign bitcast_ln82_1_fu_550_p1 = xor_ln82_fu_544_p2;

assign bitcast_ln82_fu_541_p1 = Real_3_load_1_reg_862;

assign bitcast_ln83_1_fu_592_p1 = xor_ln83_fu_586_p2;

assign bitcast_ln83_2_fu_597_p1 = tmp_9_reg_928;

assign bitcast_ln83_3_fu_606_p1 = xor_ln83_1_fu_600_p2;

assign bitcast_ln83_fu_583_p1 = tmp_9_1_reg_934;

assign c_fu_535_p2 = (c_0_reg_400 + 11'd4);

assign i_fu_621_p2 = (ap_phi_mux_i_0_phi_fu_416_p4 + 9'd1);

assign icmp_ln92_fu_615_p2 = ((ap_phi_mux_i_0_phi_fu_416_p4 == 9'd480) ? 1'b1 : 1'b0);

assign lshr_ln2_fu_637_p4 = {{lut_reorder_I_q0[9:2]}};

assign lshr_ln_fu_461_p4 = {{ap_phi_mux_c_0_phi_fu_404_p4[10:2]}};

assign lut_reorder_I_address0 = zext_ln97_fu_627_p1;

assign lut_reorder_J_address0 = zext_ln97_fu_627_p1;

assign tmp_8_fu_453_p3 = ap_phi_mux_c_0_phi_fu_404_p4[32'd10];

assign trunc_ln100_fu_633_p1 = lut_reorder_I_q0[1:0];

assign trunc_ln102_fu_659_p1 = lut_reorder_J_q0[1:0];

assign xor_ln75_fu_496_p2 = (bitcast_ln75_fu_493_p1 ^ 32'd2147483648);

assign xor_ln76_fu_510_p2 = (bitcast_ln76_fu_507_p1 ^ 32'd2147483648);

assign xor_ln77_1_fu_572_p2 = (bitcast_ln77_2_fu_569_p1 ^ 32'd2147483648);

assign xor_ln77_fu_558_p2 = (bitcast_ln77_fu_555_p1 ^ 32'd2147483648);

assign xor_ln81_fu_524_p2 = (bitcast_ln81_fu_521_p1 ^ 32'd2147483648);

assign xor_ln82_fu_544_p2 = (bitcast_ln82_fu_541_p1 ^ 32'd2147483648);

assign xor_ln83_1_fu_600_p2 = (bitcast_ln83_2_fu_597_p1 ^ 32'd2147483648);

assign xor_ln83_fu_586_p2 = (bitcast_ln83_fu_583_p1 ^ 32'd2147483648);

assign zext_ln100_1_fu_647_p1 = lshr_ln2_fu_637_p4;

assign zext_ln100_fu_673_p1 = trunc_ln100_reg_1018;

assign zext_ln102_1_fu_704_p1 = lshr_ln3_reg_1068;

assign zext_ln102_fu_715_p1 = trunc_ln102_reg_1063;

assign zext_ln48_fu_471_p1 = lshr_ln_fu_461_p4;

assign zext_ln85_fu_611_p1 = lshr_ln1_reg_798_pp0_iter4_reg;

assign zext_ln97_fu_627_p1 = ap_phi_mux_i_0_phi_fu_416_p4;

always @ (posedge ap_clk) begin
    zext_ln85_reg_980[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //Reorder_fft
