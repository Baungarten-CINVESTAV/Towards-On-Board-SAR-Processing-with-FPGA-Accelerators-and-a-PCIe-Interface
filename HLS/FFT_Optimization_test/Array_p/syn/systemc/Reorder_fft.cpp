// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Reorder_fft.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Reorder_fft::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Reorder_fft::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> Reorder_fft::ap_ST_fsm_state1 = "1";
const sc_lv<10> Reorder_fft::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<10> Reorder_fft::ap_ST_fsm_pp0_stage1 = "100";
const sc_lv<10> Reorder_fft::ap_ST_fsm_pp0_stage2 = "1000";
const sc_lv<10> Reorder_fft::ap_ST_fsm_state17 = "10000";
const sc_lv<10> Reorder_fft::ap_ST_fsm_pp1_stage0 = "100000";
const sc_lv<10> Reorder_fft::ap_ST_fsm_pp1_stage1 = "1000000";
const sc_lv<10> Reorder_fft::ap_ST_fsm_pp1_stage2 = "10000000";
const sc_lv<10> Reorder_fft::ap_ST_fsm_pp1_stage3 = "100000000";
const sc_lv<10> Reorder_fft::ap_ST_fsm_state23 = "1000000000";
const sc_lv<32> Reorder_fft::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Reorder_fft::ap_const_boolean_1 = true;
const int Reorder_fft::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> Reorder_fft::ap_const_lv32_3 = "11";
const bool Reorder_fft::ap_const_boolean_0 = false;
const sc_lv<1> Reorder_fft::ap_const_lv1_0 = "0";
const sc_lv<32> Reorder_fft::ap_const_lv32_2 = "10";
const sc_lv<32> Reorder_fft::ap_const_lv32_1 = "1";
const sc_lv<32> Reorder_fft::ap_const_lv32_5 = "101";
const sc_lv<32> Reorder_fft::ap_const_lv32_6 = "110";
const sc_lv<32> Reorder_fft::ap_const_lv32_7 = "111";
const sc_lv<1> Reorder_fft::ap_const_lv1_1 = "1";
const sc_lv<32> Reorder_fft::ap_const_lv32_4 = "100";
const sc_lv<32> Reorder_fft::ap_const_lv32_8 = "1000";
const sc_lv<11> Reorder_fft::ap_const_lv11_0 = "00000000000";
const sc_lv<9> Reorder_fft::ap_const_lv9_0 = "000000000";
const sc_lv<2> Reorder_fft::ap_const_lv2_0 = "00";
const sc_lv<2> Reorder_fft::ap_const_lv2_2 = "10";
const sc_lv<2> Reorder_fft::ap_const_lv2_1 = "1";
const sc_lv<2> Reorder_fft::ap_const_lv2_3 = "11";
const sc_lv<32> Reorder_fft::ap_const_lv32_A = "1010";
const sc_lv<32> Reorder_fft::ap_const_lv32_9 = "1001";
const sc_lv<32> Reorder_fft::ap_const_lv32_80000000 = "10000000000000000000000000000000";
const sc_lv<11> Reorder_fft::ap_const_lv11_4 = "100";
const sc_lv<9> Reorder_fft::ap_const_lv9_1E0 = "111100000";
const sc_lv<9> Reorder_fft::ap_const_lv9_1 = "1";

Reorder_fft::Reorder_fft(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lut_reorder_I_U = new Reorder_fft_lut_rbkb("lut_reorder_I_U");
    lut_reorder_I_U->clk(ap_clk);
    lut_reorder_I_U->reset(ap_rst_n_inv);
    lut_reorder_I_U->address0(lut_reorder_I_address0);
    lut_reorder_I_U->ce0(lut_reorder_I_ce0);
    lut_reorder_I_U->q0(lut_reorder_I_q0);
    lut_reorder_J_U = new Reorder_fft_lut_rcud("lut_reorder_J_U");
    lut_reorder_J_U->clk(ap_clk);
    lut_reorder_J_U->reset(ap_rst_n_inv);
    lut_reorder_J_U->address0(lut_reorder_J_address0);
    lut_reorder_J_U->ce0(lut_reorder_J_ce0);
    lut_reorder_J_U->q0(lut_reorder_J_q0);
    Reorder_fft_AXILiteS_s_axi_U = new Reorder_fft_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("Reorder_fft_AXILiteS_s_axi_U");
    Reorder_fft_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    Reorder_fft_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    Reorder_fft_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    Reorder_fft_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    Reorder_fft_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    Reorder_fft_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    Reorder_fft_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    Reorder_fft_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    Reorder_fft_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    Reorder_fft_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    Reorder_fft_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    Reorder_fft_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    Reorder_fft_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    Reorder_fft_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    Reorder_fft_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    Reorder_fft_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    Reorder_fft_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    Reorder_fft_AXILiteS_s_axi_U->ACLK(ap_clk);
    Reorder_fft_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    Reorder_fft_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    Reorder_fft_AXILiteS_s_axi_U->ap_start(ap_start);
    Reorder_fft_AXILiteS_s_axi_U->interrupt(interrupt);
    Reorder_fft_AXILiteS_s_axi_U->ap_ready(ap_ready);
    Reorder_fft_AXILiteS_s_axi_U->ap_done(ap_done);
    Reorder_fft_AXILiteS_s_axi_U->ap_idle(ap_idle);
    Reorder_fft_fadd_dEe_U1 = new Reorder_fft_fadd_dEe<1,5,32,32,32>("Reorder_fft_fadd_dEe_U1");
    Reorder_fft_fadd_dEe_U1->clk(ap_clk);
    Reorder_fft_fadd_dEe_U1->reset(ap_rst_n_inv);
    Reorder_fft_fadd_dEe_U1->din0(grp_fu_423_p0);
    Reorder_fft_fadd_dEe_U1->din1(grp_fu_423_p1);
    Reorder_fft_fadd_dEe_U1->ce(ap_var_for_const0);
    Reorder_fft_fadd_dEe_U1->dout(grp_fu_423_p2);
    Reorder_fft_fadd_dEe_U2 = new Reorder_fft_fadd_dEe<1,5,32,32,32>("Reorder_fft_fadd_dEe_U2");
    Reorder_fft_fadd_dEe_U2->clk(ap_clk);
    Reorder_fft_fadd_dEe_U2->reset(ap_rst_n_inv);
    Reorder_fft_fadd_dEe_U2->din0(grp_fu_427_p0);
    Reorder_fft_fadd_dEe_U2->din1(grp_fu_427_p1);
    Reorder_fft_fadd_dEe_U2->ce(ap_var_for_const0);
    Reorder_fft_fadd_dEe_U2->dout(grp_fu_427_p2);
    Reorder_fft_fadd_dEe_U3 = new Reorder_fft_fadd_dEe<1,5,32,32,32>("Reorder_fft_fadd_dEe_U3");
    Reorder_fft_fadd_dEe_U3->clk(ap_clk);
    Reorder_fft_fadd_dEe_U3->reset(ap_rst_n_inv);
    Reorder_fft_fadd_dEe_U3->din0(grp_fu_431_p0);
    Reorder_fft_fadd_dEe_U3->din1(grp_fu_431_p1);
    Reorder_fft_fadd_dEe_U3->ce(ap_var_for_const0);
    Reorder_fft_fadd_dEe_U3->dout(grp_fu_431_p2);
    Reorder_fft_fadd_dEe_U4 = new Reorder_fft_fadd_dEe<1,5,32,32,32>("Reorder_fft_fadd_dEe_U4");
    Reorder_fft_fadd_dEe_U4->clk(ap_clk);
    Reorder_fft_fadd_dEe_U4->reset(ap_rst_n_inv);
    Reorder_fft_fadd_dEe_U4->din0(grp_fu_435_p0);
    Reorder_fft_fadd_dEe_U4->din1(grp_fu_435_p1);
    Reorder_fft_fadd_dEe_U4->ce(ap_var_for_const0);
    Reorder_fft_fadd_dEe_U4->dout(grp_fu_435_p2);
    Reorder_fft_fadd_dEe_U5 = new Reorder_fft_fadd_dEe<1,5,32,32,32>("Reorder_fft_fadd_dEe_U5");
    Reorder_fft_fadd_dEe_U5->clk(ap_clk);
    Reorder_fft_fadd_dEe_U5->reset(ap_rst_n_inv);
    Reorder_fft_fadd_dEe_U5->din0(grp_fu_439_p0);
    Reorder_fft_fadd_dEe_U5->din1(grp_fu_439_p1);
    Reorder_fft_fadd_dEe_U5->ce(ap_var_for_const0);
    Reorder_fft_fadd_dEe_U5->dout(grp_fu_439_p2);
    Reorder_fft_fadd_dEe_U6 = new Reorder_fft_fadd_dEe<1,5,32,32,32>("Reorder_fft_fadd_dEe_U6");
    Reorder_fft_fadd_dEe_U6->clk(ap_clk);
    Reorder_fft_fadd_dEe_U6->reset(ap_rst_n_inv);
    Reorder_fft_fadd_dEe_U6->din0(grp_fu_443_p0);
    Reorder_fft_fadd_dEe_U6->din1(grp_fu_443_p1);
    Reorder_fft_fadd_dEe_U6->ce(ap_var_for_const0);
    Reorder_fft_fadd_dEe_U6->dout(grp_fu_443_p2);
    Reorder_fft_mux_4eOg_U7 = new Reorder_fft_mux_4eOg<1,1,32,32,32,32,32,32>("Reorder_fft_mux_4eOg_U7");
    Reorder_fft_mux_4eOg_U7->din0(Real_0_q0);
    Reorder_fft_mux_4eOg_U7->din1(Real_1_q0);
    Reorder_fft_mux_4eOg_U7->din2(Real_2_q0);
    Reorder_fft_mux_4eOg_U7->din3(Real_3_q0);
    Reorder_fft_mux_4eOg_U7->din4(zext_ln100_fu_673_p1);
    Reorder_fft_mux_4eOg_U7->dout(tempr_fu_676_p6);
    Reorder_fft_mux_4eOg_U8 = new Reorder_fft_mux_4eOg<1,1,32,32,32,32,32,32>("Reorder_fft_mux_4eOg_U8");
    Reorder_fft_mux_4eOg_U8->din0(Imag_0_q0);
    Reorder_fft_mux_4eOg_U8->din1(Imag_1_q0);
    Reorder_fft_mux_4eOg_U8->din2(Imag_2_q0);
    Reorder_fft_mux_4eOg_U8->din3(Imag_3_q0);
    Reorder_fft_mux_4eOg_U8->din4(zext_ln100_fu_673_p1);
    Reorder_fft_mux_4eOg_U8->dout(tempi_fu_690_p6);
    Reorder_fft_mux_4eOg_U9 = new Reorder_fft_mux_4eOg<1,1,32,32,32,32,32,32>("Reorder_fft_mux_4eOg_U9");
    Reorder_fft_mux_4eOg_U9->din0(Real_0_q0);
    Reorder_fft_mux_4eOg_U9->din1(Real_1_q0);
    Reorder_fft_mux_4eOg_U9->din2(Real_2_q0);
    Reorder_fft_mux_4eOg_U9->din3(Real_3_q0);
    Reorder_fft_mux_4eOg_U9->din4(zext_ln102_fu_715_p1);
    Reorder_fft_mux_4eOg_U9->dout(tmp_s_fu_718_p6);
    Reorder_fft_mux_4eOg_U10 = new Reorder_fft_mux_4eOg<1,1,32,32,32,32,32,32>("Reorder_fft_mux_4eOg_U10");
    Reorder_fft_mux_4eOg_U10->din0(Imag_0_q0);
    Reorder_fft_mux_4eOg_U10->din1(Imag_1_q0);
    Reorder_fft_mux_4eOg_U10->din2(Imag_2_q0);
    Reorder_fft_mux_4eOg_U10->din3(Imag_3_q0);
    Reorder_fft_mux_4eOg_U10->din4(zext_ln102_fu_715_p1);
    Reorder_fft_mux_4eOg_U10->dout(tmp_6_fu_736_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Imag_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( Imag_0_addr_reg_788_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( Imag_0_addr_1_reg_1043 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( Imag_0_addr_2_reg_1109 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln48_fu_471_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln100_1_fu_647_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( zext_ln102_1_fu_704_p1 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Imag_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Imag_0_d0);
    sensitive << ( reg_447 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tempi_reg_1081 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp1_stage3 );
    sensitive << ( tmp_6_fu_736_p6 );

    SC_METHOD(thread_Imag_0_we0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_8_reg_754_pp0_iter4_reg );
    sensitive << ( icmp_ln92_reg_999 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( trunc_ln100_reg_1018 );
    sensitive << ( trunc_ln102_reg_1063 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Imag_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( Imag_1_addr_reg_773 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln85_reg_980 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( Imag_1_addr_2_reg_1048 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( Imag_1_addr_3_reg_1114 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln48_fu_471_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln100_1_fu_647_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( zext_ln102_1_fu_704_p1 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Imag_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Imag_1_d0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_10_1_reg_975 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tempi_reg_1081 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp1_stage3 );
    sensitive << ( tmp_6_fu_736_p6 );

    SC_METHOD(thread_Imag_1_we0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_8_reg_754_pp0_iter4_reg );
    sensitive << ( icmp_ln92_reg_999 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( trunc_ln100_reg_1018 );
    sensitive << ( trunc_ln102_reg_1063 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Imag_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln85_reg_980 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( Imag_2_addr_2_reg_1053 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( Imag_2_addr_3_reg_1119 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln48_fu_471_p1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln100_1_fu_647_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( zext_ln102_1_fu_704_p1 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Imag_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Imag_2_d0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_10_2_reg_989 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tempi_reg_1081 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp1_stage3 );
    sensitive << ( tmp_6_fu_736_p6 );

    SC_METHOD(thread_Imag_2_we0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_8_reg_754_pp0_iter4_reg );
    sensitive << ( icmp_ln92_reg_999 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( trunc_ln100_reg_1018 );
    sensitive << ( trunc_ln102_reg_1063 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Imag_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( Imag_3_addr_reg_783 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln85_reg_980 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( Imag_3_addr_2_reg_1058 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( Imag_3_addr_3_reg_1124 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln48_fu_471_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln100_1_fu_647_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( zext_ln102_1_fu_704_p1 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Imag_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Imag_3_d0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_10_3_reg_994 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tempi_reg_1081 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_block_pp1_stage3 );
    sensitive << ( tmp_6_fu_736_p6 );

    SC_METHOD(thread_Imag_3_we0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_8_reg_754_pp0_iter4_reg );
    sensitive << ( icmp_ln92_reg_999 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( trunc_ln100_reg_1018 );
    sensitive << ( trunc_ln102_reg_1063 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Real_0_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( Real_0_addr_reg_758_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( Real_0_addr_1_reg_1023 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( Real_0_addr_2_reg_1089 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln48_fu_471_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln100_1_fu_647_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( zext_ln102_1_fu_704_p1 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Real_0_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Real_0_d0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_5_reg_960 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tempr_reg_1073 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_s_fu_718_p6 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Real_0_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( tmp_8_reg_754_pp0_iter4_reg );
    sensitive << ( icmp_ln92_reg_999 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( trunc_ln100_reg_1018 );
    sensitive << ( trunc_ln102_reg_1063 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Real_1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( Real_1_addr_reg_768 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln85_reg_980 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( Real_1_addr_2_reg_1028 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( Real_1_addr_3_reg_1094 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln48_fu_471_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln100_1_fu_647_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( zext_ln102_1_fu_704_p1 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Real_1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Real_1_d0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_5_1_reg_965 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tempr_reg_1073 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_s_fu_718_p6 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Real_1_we0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_8_reg_754_pp0_iter4_reg );
    sensitive << ( icmp_ln92_reg_999 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( trunc_ln100_reg_1018 );
    sensitive << ( trunc_ln102_reg_1063 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Real_2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln85_fu_611_p1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( Real_2_addr_2_reg_1033 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( Real_2_addr_3_reg_1099 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln48_fu_471_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( zext_ln100_1_fu_647_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( zext_ln102_1_fu_704_p1 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Real_2_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Real_2_d0);
    sensitive << ( reg_447 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tempr_reg_1073 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( tmp_s_fu_718_p6 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Real_2_we0);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( tmp_8_reg_754_pp0_iter4_reg );
    sensitive << ( icmp_ln92_reg_999 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( trunc_ln100_reg_1018 );
    sensitive << ( trunc_ln102_reg_1063 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Real_3_address0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( Real_3_addr_reg_778 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln85_reg_980 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( Real_3_addr_2_reg_1038 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( Real_3_addr_3_reg_1104 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln48_fu_471_p1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( zext_ln100_1_fu_647_p1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( zext_ln102_1_fu_704_p1 );
    sensitive << ( ap_block_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Real_3_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage2 );
    sensitive << ( ap_block_pp1_stage2_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_Real_3_d0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_5_3_reg_970 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( tempr_reg_1073 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( tmp_s_fu_718_p6 );
    sensitive << ( ap_block_pp1_stage3 );

    SC_METHOD(thread_Real_3_we0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_8_reg_754_pp0_iter4_reg );
    sensitive << ( icmp_ln92_reg_999 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( trunc_ln100_reg_1018 );
    sensitive << ( trunc_ln102_reg_1063 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage3 );
    sensitive << ( ap_block_pp1_stage3_11001 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_11001);

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage1);

    SC_METHOD(thread_ap_block_pp1_stage1_11001);

    SC_METHOD(thread_ap_block_pp1_stage1_subdone);

    SC_METHOD(thread_ap_block_pp1_stage2);

    SC_METHOD(thread_ap_block_pp1_stage2_11001);

    SC_METHOD(thread_ap_block_pp1_stage2_subdone);

    SC_METHOD(thread_ap_block_pp1_stage3);

    SC_METHOD(thread_ap_block_pp1_stage3_11001);

    SC_METHOD(thread_ap_block_pp1_stage3_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage2_iter2);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state12_pp0_stage1_iter3);

    SC_METHOD(thread_ap_block_state13_pp0_stage2_iter3);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state15_pp0_stage1_iter4);

    SC_METHOD(thread_ap_block_state16_pp0_stage2_iter4);

    SC_METHOD(thread_ap_block_state18_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state19_pp1_stage1_iter0);

    SC_METHOD(thread_ap_block_state20_pp1_stage2_iter0);

    SC_METHOD(thread_ap_block_state21_pp1_stage3_iter0);

    SC_METHOD(thread_ap_block_state22_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage1_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage2_iter0);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state6_pp0_stage1_iter1);

    SC_METHOD(thread_ap_block_state7_pp0_stage2_iter1);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state9_pp0_stage1_iter2);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( tmp_8_fu_453_p3 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state18);
    sensitive << ( icmp_ln92_fu_615_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_phi_mux_c_0_phi_fu_404_p4);
    sensitive << ( c_0_reg_400 );
    sensitive << ( tmp_8_reg_754 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( c_reg_882 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_416_p4);
    sensitive << ( i_0_reg_412 );
    sensitive << ( icmp_ln92_reg_999 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( i_reg_1003 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bitcast_ln75_1_fu_502_p1);
    sensitive << ( xor_ln75_fu_496_p2 );

    SC_METHOD(thread_bitcast_ln75_fu_493_p1);
    sensitive << ( RE_vec_128_b_reg_809 );

    SC_METHOD(thread_bitcast_ln76_1_fu_516_p1);
    sensitive << ( xor_ln76_fu_510_p2 );

    SC_METHOD(thread_bitcast_ln76_fu_507_p1);
    sensitive << ( Imag_3_load_reg_830 );

    SC_METHOD(thread_bitcast_ln77_1_fu_564_p1);
    sensitive << ( xor_ln77_fu_558_p2 );

    SC_METHOD(thread_bitcast_ln77_2_fu_569_p1);
    sensitive << ( tmp_3_1_reg_916 );

    SC_METHOD(thread_bitcast_ln77_3_fu_578_p1);
    sensitive << ( xor_ln77_1_fu_572_p2 );

    SC_METHOD(thread_bitcast_ln77_fu_555_p1);
    sensitive << ( tmp_3_reg_898 );

    SC_METHOD(thread_bitcast_ln81_1_fu_530_p1);
    sensitive << ( xor_ln81_fu_524_p2 );

    SC_METHOD(thread_bitcast_ln81_fu_521_p1);
    sensitive << ( IM_vec_128_b_reg_841 );

    SC_METHOD(thread_bitcast_ln82_1_fu_550_p1);
    sensitive << ( xor_ln82_fu_544_p2 );

    SC_METHOD(thread_bitcast_ln82_fu_541_p1);
    sensitive << ( Real_3_load_1_reg_862 );

    SC_METHOD(thread_bitcast_ln83_1_fu_592_p1);
    sensitive << ( xor_ln83_fu_586_p2 );

    SC_METHOD(thread_bitcast_ln83_2_fu_597_p1);
    sensitive << ( tmp_9_reg_928 );

    SC_METHOD(thread_bitcast_ln83_3_fu_606_p1);
    sensitive << ( xor_ln83_1_fu_600_p2 );

    SC_METHOD(thread_bitcast_ln83_fu_583_p1);
    sensitive << ( tmp_9_1_reg_934 );

    SC_METHOD(thread_c_fu_535_p2);
    sensitive << ( c_0_reg_400 );

    SC_METHOD(thread_grp_fu_423_p0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( RE_vec_128_b_reg_809 );
    sensitive << ( Imag_3_load_1_reg_857 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_reg_898 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_423_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( RE_vec_128_a_reg_803 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( Imag_1_load_1_reg_847 );
    sensitive << ( tmp_1_reg_892 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_427_p0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( Real_3_load_reg_825 );
    sensitive << ( bitcast_ln82_1_fu_550_p1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_3_1_reg_916 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_427_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( Real_1_load_reg_815 );
    sensitive << ( Real_1_load_1_reg_852 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_1_1_reg_910 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_431_p0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( IM_vec_128_b_reg_841 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_9_reg_928 );
    sensitive << ( bitcast_ln77_1_fu_564_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_431_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( IM_vec_128_a_reg_835 );
    sensitive << ( tmp_1_reg_892 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_7_reg_904 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_435_p0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( bitcast_ln75_1_fu_502_p1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( bitcast_ln77_3_fu_578_p1 );
    sensitive << ( bitcast_ln83_1_fu_592_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_435_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( RE_vec_128_a_reg_803 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( tmp_1_1_reg_910 );
    sensitive << ( tmp_7_1_reg_922 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_439_p0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( bitcast_ln76_1_fu_516_p1 );
    sensitive << ( bitcast_ln83_3_fu_606_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_439_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( Imag_1_load_reg_820 );
    sensitive << ( tmp_7_reg_904 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_443_p0);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( bitcast_ln81_1_fu_530_p1 );
    sensitive << ( tmp_9_1_reg_934 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_grp_fu_443_p1);
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( IM_vec_128_a_reg_835 );
    sensitive << ( tmp_7_1_reg_922 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage2 );

    SC_METHOD(thread_i_fu_621_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_416_p4 );

    SC_METHOD(thread_icmp_ln92_fu_615_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_416_p4 );

    SC_METHOD(thread_lshr_ln2_fu_637_p4);
    sensitive << ( lut_reorder_I_q0 );

    SC_METHOD(thread_lshr_ln_fu_461_p4);
    sensitive << ( ap_phi_mux_c_0_phi_fu_404_p4 );

    SC_METHOD(thread_lut_reorder_I_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln97_fu_627_p1 );

    SC_METHOD(thread_lut_reorder_I_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_lut_reorder_J_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln97_fu_627_p1 );

    SC_METHOD(thread_lut_reorder_J_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_tmp_8_fu_453_p3);
    sensitive << ( ap_phi_mux_c_0_phi_fu_404_p4 );

    SC_METHOD(thread_trunc_ln100_fu_633_p1);
    sensitive << ( lut_reorder_I_q0 );

    SC_METHOD(thread_trunc_ln102_fu_659_p1);
    sensitive << ( lut_reorder_J_q0 );

    SC_METHOD(thread_xor_ln75_fu_496_p2);
    sensitive << ( bitcast_ln75_fu_493_p1 );

    SC_METHOD(thread_xor_ln76_fu_510_p2);
    sensitive << ( bitcast_ln76_fu_507_p1 );

    SC_METHOD(thread_xor_ln77_1_fu_572_p2);
    sensitive << ( bitcast_ln77_2_fu_569_p1 );

    SC_METHOD(thread_xor_ln77_fu_558_p2);
    sensitive << ( bitcast_ln77_fu_555_p1 );

    SC_METHOD(thread_xor_ln81_fu_524_p2);
    sensitive << ( bitcast_ln81_fu_521_p1 );

    SC_METHOD(thread_xor_ln82_fu_544_p2);
    sensitive << ( bitcast_ln82_fu_541_p1 );

    SC_METHOD(thread_xor_ln83_1_fu_600_p2);
    sensitive << ( bitcast_ln83_2_fu_597_p1 );

    SC_METHOD(thread_xor_ln83_fu_586_p2);
    sensitive << ( bitcast_ln83_fu_583_p1 );

    SC_METHOD(thread_zext_ln100_1_fu_647_p1);
    sensitive << ( lshr_ln2_fu_637_p4 );

    SC_METHOD(thread_zext_ln100_fu_673_p1);
    sensitive << ( trunc_ln100_reg_1018 );

    SC_METHOD(thread_zext_ln102_1_fu_704_p1);
    sensitive << ( lshr_ln3_reg_1068 );

    SC_METHOD(thread_zext_ln102_fu_715_p1);
    sensitive << ( trunc_ln102_reg_1063 );

    SC_METHOD(thread_zext_ln48_fu_471_p1);
    sensitive << ( lshr_ln_fu_461_p4 );

    SC_METHOD(thread_zext_ln85_fu_611_p1);
    sensitive << ( lshr_ln1_reg_798_pp0_iter4_reg );

    SC_METHOD(thread_zext_ln97_fu_627_p1);
    sensitive << ( ap_phi_mux_i_0_phi_fu_416_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( tmp_8_fu_453_p3 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln92_fu_615_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage2_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp1_stage3_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp1_stage1_subdone );
    sensitive << ( ap_block_pp1_stage2_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000001";
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Reorder_fft_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, Real_0_address0, "(port)Real_0_address0");
    sc_trace(mVcdFile, Real_0_ce0, "(port)Real_0_ce0");
    sc_trace(mVcdFile, Real_0_we0, "(port)Real_0_we0");
    sc_trace(mVcdFile, Real_0_d0, "(port)Real_0_d0");
    sc_trace(mVcdFile, Real_0_q0, "(port)Real_0_q0");
    sc_trace(mVcdFile, Real_1_address0, "(port)Real_1_address0");
    sc_trace(mVcdFile, Real_1_ce0, "(port)Real_1_ce0");
    sc_trace(mVcdFile, Real_1_we0, "(port)Real_1_we0");
    sc_trace(mVcdFile, Real_1_d0, "(port)Real_1_d0");
    sc_trace(mVcdFile, Real_1_q0, "(port)Real_1_q0");
    sc_trace(mVcdFile, Real_2_address0, "(port)Real_2_address0");
    sc_trace(mVcdFile, Real_2_ce0, "(port)Real_2_ce0");
    sc_trace(mVcdFile, Real_2_we0, "(port)Real_2_we0");
    sc_trace(mVcdFile, Real_2_d0, "(port)Real_2_d0");
    sc_trace(mVcdFile, Real_2_q0, "(port)Real_2_q0");
    sc_trace(mVcdFile, Real_3_address0, "(port)Real_3_address0");
    sc_trace(mVcdFile, Real_3_ce0, "(port)Real_3_ce0");
    sc_trace(mVcdFile, Real_3_we0, "(port)Real_3_we0");
    sc_trace(mVcdFile, Real_3_d0, "(port)Real_3_d0");
    sc_trace(mVcdFile, Real_3_q0, "(port)Real_3_q0");
    sc_trace(mVcdFile, Imag_0_address0, "(port)Imag_0_address0");
    sc_trace(mVcdFile, Imag_0_ce0, "(port)Imag_0_ce0");
    sc_trace(mVcdFile, Imag_0_we0, "(port)Imag_0_we0");
    sc_trace(mVcdFile, Imag_0_d0, "(port)Imag_0_d0");
    sc_trace(mVcdFile, Imag_0_q0, "(port)Imag_0_q0");
    sc_trace(mVcdFile, Imag_1_address0, "(port)Imag_1_address0");
    sc_trace(mVcdFile, Imag_1_ce0, "(port)Imag_1_ce0");
    sc_trace(mVcdFile, Imag_1_we0, "(port)Imag_1_we0");
    sc_trace(mVcdFile, Imag_1_d0, "(port)Imag_1_d0");
    sc_trace(mVcdFile, Imag_1_q0, "(port)Imag_1_q0");
    sc_trace(mVcdFile, Imag_2_address0, "(port)Imag_2_address0");
    sc_trace(mVcdFile, Imag_2_ce0, "(port)Imag_2_ce0");
    sc_trace(mVcdFile, Imag_2_we0, "(port)Imag_2_we0");
    sc_trace(mVcdFile, Imag_2_d0, "(port)Imag_2_d0");
    sc_trace(mVcdFile, Imag_2_q0, "(port)Imag_2_q0");
    sc_trace(mVcdFile, Imag_3_address0, "(port)Imag_3_address0");
    sc_trace(mVcdFile, Imag_3_ce0, "(port)Imag_3_ce0");
    sc_trace(mVcdFile, Imag_3_we0, "(port)Imag_3_we0");
    sc_trace(mVcdFile, Imag_3_d0, "(port)Imag_3_d0");
    sc_trace(mVcdFile, Imag_3_q0, "(port)Imag_3_q0");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, lut_reorder_I_address0, "lut_reorder_I_address0");
    sc_trace(mVcdFile, lut_reorder_I_ce0, "lut_reorder_I_ce0");
    sc_trace(mVcdFile, lut_reorder_I_q0, "lut_reorder_I_q0");
    sc_trace(mVcdFile, lut_reorder_J_address0, "lut_reorder_J_address0");
    sc_trace(mVcdFile, lut_reorder_J_ce0, "lut_reorder_J_ce0");
    sc_trace(mVcdFile, lut_reorder_J_q0, "lut_reorder_J_q0");
    sc_trace(mVcdFile, c_0_reg_400, "c_0_reg_400");
    sc_trace(mVcdFile, i_0_reg_412, "i_0_reg_412");
    sc_trace(mVcdFile, grp_fu_431_p2, "grp_fu_431_p2");
    sc_trace(mVcdFile, reg_447, "reg_447");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage2_iter0, "ap_block_state4_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage2_iter1, "ap_block_state7_pp0_stage2_iter1");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage2_iter2, "ap_block_state10_pp0_stage2_iter2");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage2_iter3, "ap_block_state13_pp0_stage2_iter3");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage2_iter4, "ap_block_state16_pp0_stage2_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, tmp_8_reg_754, "tmp_8_reg_754");
    sc_trace(mVcdFile, tmp_8_reg_754_pp0_iter3_reg, "tmp_8_reg_754_pp0_iter3_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage1_iter0, "ap_block_state3_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage1_iter1, "ap_block_state6_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage1_iter2, "ap_block_state9_pp0_stage1_iter2");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage1_iter3, "ap_block_state12_pp0_stage1_iter3");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage1_iter4, "ap_block_state15_pp0_stage1_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, tmp_8_reg_754_pp0_iter4_reg, "tmp_8_reg_754_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_8_fu_453_p3, "tmp_8_fu_453_p3");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter1, "ap_block_state5_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter2, "ap_block_state8_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter3, "ap_block_state11_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter4, "ap_block_state14_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, tmp_8_reg_754_pp0_iter1_reg, "tmp_8_reg_754_pp0_iter1_reg");
    sc_trace(mVcdFile, tmp_8_reg_754_pp0_iter2_reg, "tmp_8_reg_754_pp0_iter2_reg");
    sc_trace(mVcdFile, Real_0_addr_reg_758, "Real_0_addr_reg_758");
    sc_trace(mVcdFile, Real_0_addr_reg_758_pp0_iter1_reg, "Real_0_addr_reg_758_pp0_iter1_reg");
    sc_trace(mVcdFile, Real_0_addr_reg_758_pp0_iter2_reg, "Real_0_addr_reg_758_pp0_iter2_reg");
    sc_trace(mVcdFile, Real_0_addr_reg_758_pp0_iter3_reg, "Real_0_addr_reg_758_pp0_iter3_reg");
    sc_trace(mVcdFile, Real_0_addr_reg_758_pp0_iter4_reg, "Real_0_addr_reg_758_pp0_iter4_reg");
    sc_trace(mVcdFile, Real_1_addr_reg_768, "Real_1_addr_reg_768");
    sc_trace(mVcdFile, Imag_1_addr_reg_773, "Imag_1_addr_reg_773");
    sc_trace(mVcdFile, Real_3_addr_reg_778, "Real_3_addr_reg_778");
    sc_trace(mVcdFile, Imag_3_addr_reg_783, "Imag_3_addr_reg_783");
    sc_trace(mVcdFile, Imag_0_addr_reg_788, "Imag_0_addr_reg_788");
    sc_trace(mVcdFile, Imag_0_addr_reg_788_pp0_iter1_reg, "Imag_0_addr_reg_788_pp0_iter1_reg");
    sc_trace(mVcdFile, Imag_0_addr_reg_788_pp0_iter2_reg, "Imag_0_addr_reg_788_pp0_iter2_reg");
    sc_trace(mVcdFile, Imag_0_addr_reg_788_pp0_iter3_reg, "Imag_0_addr_reg_788_pp0_iter3_reg");
    sc_trace(mVcdFile, Imag_0_addr_reg_788_pp0_iter4_reg, "Imag_0_addr_reg_788_pp0_iter4_reg");
    sc_trace(mVcdFile, lshr_ln1_reg_798, "lshr_ln1_reg_798");
    sc_trace(mVcdFile, lshr_ln1_reg_798_pp0_iter1_reg, "lshr_ln1_reg_798_pp0_iter1_reg");
    sc_trace(mVcdFile, lshr_ln1_reg_798_pp0_iter2_reg, "lshr_ln1_reg_798_pp0_iter2_reg");
    sc_trace(mVcdFile, lshr_ln1_reg_798_pp0_iter3_reg, "lshr_ln1_reg_798_pp0_iter3_reg");
    sc_trace(mVcdFile, lshr_ln1_reg_798_pp0_iter4_reg, "lshr_ln1_reg_798_pp0_iter4_reg");
    sc_trace(mVcdFile, RE_vec_128_a_reg_803, "RE_vec_128_a_reg_803");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, RE_vec_128_b_reg_809, "RE_vec_128_b_reg_809");
    sc_trace(mVcdFile, Real_1_load_reg_815, "Real_1_load_reg_815");
    sc_trace(mVcdFile, Imag_1_load_reg_820, "Imag_1_load_reg_820");
    sc_trace(mVcdFile, Real_3_load_reg_825, "Real_3_load_reg_825");
    sc_trace(mVcdFile, Imag_3_load_reg_830, "Imag_3_load_reg_830");
    sc_trace(mVcdFile, IM_vec_128_a_reg_835, "IM_vec_128_a_reg_835");
    sc_trace(mVcdFile, IM_vec_128_b_reg_841, "IM_vec_128_b_reg_841");
    sc_trace(mVcdFile, Imag_1_load_1_reg_847, "Imag_1_load_1_reg_847");
    sc_trace(mVcdFile, Real_1_load_1_reg_852, "Real_1_load_1_reg_852");
    sc_trace(mVcdFile, Imag_3_load_1_reg_857, "Imag_3_load_1_reg_857");
    sc_trace(mVcdFile, Real_3_load_1_reg_862, "Real_3_load_1_reg_862");
    sc_trace(mVcdFile, bitcast_ln75_1_fu_502_p1, "bitcast_ln75_1_fu_502_p1");
    sc_trace(mVcdFile, bitcast_ln76_1_fu_516_p1, "bitcast_ln76_1_fu_516_p1");
    sc_trace(mVcdFile, bitcast_ln81_1_fu_530_p1, "bitcast_ln81_1_fu_530_p1");
    sc_trace(mVcdFile, c_fu_535_p2, "c_fu_535_p2");
    sc_trace(mVcdFile, c_reg_882, "c_reg_882");
    sc_trace(mVcdFile, bitcast_ln82_1_fu_550_p1, "bitcast_ln82_1_fu_550_p1");
    sc_trace(mVcdFile, grp_fu_423_p2, "grp_fu_423_p2");
    sc_trace(mVcdFile, tmp_1_reg_892, "tmp_1_reg_892");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, grp_fu_427_p2, "grp_fu_427_p2");
    sc_trace(mVcdFile, tmp_3_reg_898, "tmp_3_reg_898");
    sc_trace(mVcdFile, tmp_7_reg_904, "tmp_7_reg_904");
    sc_trace(mVcdFile, grp_fu_435_p2, "grp_fu_435_p2");
    sc_trace(mVcdFile, tmp_1_1_reg_910, "tmp_1_1_reg_910");
    sc_trace(mVcdFile, grp_fu_439_p2, "grp_fu_439_p2");
    sc_trace(mVcdFile, tmp_3_1_reg_916, "tmp_3_1_reg_916");
    sc_trace(mVcdFile, grp_fu_443_p2, "grp_fu_443_p2");
    sc_trace(mVcdFile, tmp_7_1_reg_922, "tmp_7_1_reg_922");
    sc_trace(mVcdFile, tmp_9_reg_928, "tmp_9_reg_928");
    sc_trace(mVcdFile, tmp_9_1_reg_934, "tmp_9_1_reg_934");
    sc_trace(mVcdFile, bitcast_ln77_1_fu_564_p1, "bitcast_ln77_1_fu_564_p1");
    sc_trace(mVcdFile, bitcast_ln77_3_fu_578_p1, "bitcast_ln77_3_fu_578_p1");
    sc_trace(mVcdFile, bitcast_ln83_1_fu_592_p1, "bitcast_ln83_1_fu_592_p1");
    sc_trace(mVcdFile, bitcast_ln83_3_fu_606_p1, "bitcast_ln83_3_fu_606_p1");
    sc_trace(mVcdFile, tmp_5_reg_960, "tmp_5_reg_960");
    sc_trace(mVcdFile, tmp_5_1_reg_965, "tmp_5_1_reg_965");
    sc_trace(mVcdFile, tmp_5_3_reg_970, "tmp_5_3_reg_970");
    sc_trace(mVcdFile, tmp_10_1_reg_975, "tmp_10_1_reg_975");
    sc_trace(mVcdFile, zext_ln85_fu_611_p1, "zext_ln85_fu_611_p1");
    sc_trace(mVcdFile, zext_ln85_reg_980, "zext_ln85_reg_980");
    sc_trace(mVcdFile, tmp_10_2_reg_989, "tmp_10_2_reg_989");
    sc_trace(mVcdFile, tmp_10_3_reg_994, "tmp_10_3_reg_994");
    sc_trace(mVcdFile, icmp_ln92_fu_615_p2, "icmp_ln92_fu_615_p2");
    sc_trace(mVcdFile, icmp_ln92_reg_999, "icmp_ln92_reg_999");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state18_pp1_stage0_iter0, "ap_block_state18_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state22_pp1_stage0_iter1, "ap_block_state22_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, i_fu_621_p2, "i_fu_621_p2");
    sc_trace(mVcdFile, i_reg_1003, "i_reg_1003");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, trunc_ln100_fu_633_p1, "trunc_ln100_fu_633_p1");
    sc_trace(mVcdFile, trunc_ln100_reg_1018, "trunc_ln100_reg_1018");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage1, "ap_CS_fsm_pp1_stage1");
    sc_trace(mVcdFile, ap_block_state19_pp1_stage1_iter0, "ap_block_state19_pp1_stage1_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage1_11001, "ap_block_pp1_stage1_11001");
    sc_trace(mVcdFile, Real_0_addr_1_reg_1023, "Real_0_addr_1_reg_1023");
    sc_trace(mVcdFile, Real_1_addr_2_reg_1028, "Real_1_addr_2_reg_1028");
    sc_trace(mVcdFile, Real_2_addr_2_reg_1033, "Real_2_addr_2_reg_1033");
    sc_trace(mVcdFile, Real_3_addr_2_reg_1038, "Real_3_addr_2_reg_1038");
    sc_trace(mVcdFile, Imag_0_addr_1_reg_1043, "Imag_0_addr_1_reg_1043");
    sc_trace(mVcdFile, Imag_1_addr_2_reg_1048, "Imag_1_addr_2_reg_1048");
    sc_trace(mVcdFile, Imag_2_addr_2_reg_1053, "Imag_2_addr_2_reg_1053");
    sc_trace(mVcdFile, Imag_3_addr_2_reg_1058, "Imag_3_addr_2_reg_1058");
    sc_trace(mVcdFile, trunc_ln102_fu_659_p1, "trunc_ln102_fu_659_p1");
    sc_trace(mVcdFile, trunc_ln102_reg_1063, "trunc_ln102_reg_1063");
    sc_trace(mVcdFile, lshr_ln3_reg_1068, "lshr_ln3_reg_1068");
    sc_trace(mVcdFile, tempr_fu_676_p6, "tempr_fu_676_p6");
    sc_trace(mVcdFile, tempr_reg_1073, "tempr_reg_1073");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage2, "ap_CS_fsm_pp1_stage2");
    sc_trace(mVcdFile, ap_block_state20_pp1_stage2_iter0, "ap_block_state20_pp1_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage2_11001, "ap_block_pp1_stage2_11001");
    sc_trace(mVcdFile, tempi_fu_690_p6, "tempi_fu_690_p6");
    sc_trace(mVcdFile, tempi_reg_1081, "tempi_reg_1081");
    sc_trace(mVcdFile, Real_0_addr_2_reg_1089, "Real_0_addr_2_reg_1089");
    sc_trace(mVcdFile, Real_1_addr_3_reg_1094, "Real_1_addr_3_reg_1094");
    sc_trace(mVcdFile, Real_2_addr_3_reg_1099, "Real_2_addr_3_reg_1099");
    sc_trace(mVcdFile, Real_3_addr_3_reg_1104, "Real_3_addr_3_reg_1104");
    sc_trace(mVcdFile, Imag_0_addr_2_reg_1109, "Imag_0_addr_2_reg_1109");
    sc_trace(mVcdFile, Imag_1_addr_3_reg_1114, "Imag_1_addr_3_reg_1114");
    sc_trace(mVcdFile, Imag_2_addr_3_reg_1119, "Imag_2_addr_3_reg_1119");
    sc_trace(mVcdFile, Imag_3_addr_3_reg_1124, "Imag_3_addr_3_reg_1124");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state18, "ap_condition_pp1_exit_iter0_state18");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_state21_pp1_stage3_iter0, "ap_block_state21_pp1_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage3_subdone, "ap_block_pp1_stage3_subdone");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage3, "ap_CS_fsm_pp1_stage3");
    sc_trace(mVcdFile, ap_phi_mux_c_0_phi_fu_404_p4, "ap_phi_mux_c_0_phi_fu_404_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_416_p4, "ap_phi_mux_i_0_phi_fu_416_p4");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, zext_ln48_fu_471_p1, "zext_ln48_fu_471_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, zext_ln97_fu_627_p1, "zext_ln97_fu_627_p1");
    sc_trace(mVcdFile, zext_ln100_1_fu_647_p1, "zext_ln100_1_fu_647_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage1, "ap_block_pp1_stage1");
    sc_trace(mVcdFile, zext_ln102_1_fu_704_p1, "zext_ln102_1_fu_704_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage2, "ap_block_pp1_stage2");
    sc_trace(mVcdFile, ap_block_pp1_stage3_11001, "ap_block_pp1_stage3_11001");
    sc_trace(mVcdFile, tmp_s_fu_718_p6, "tmp_s_fu_718_p6");
    sc_trace(mVcdFile, ap_block_pp1_stage3, "ap_block_pp1_stage3");
    sc_trace(mVcdFile, tmp_6_fu_736_p6, "tmp_6_fu_736_p6");
    sc_trace(mVcdFile, grp_fu_423_p0, "grp_fu_423_p0");
    sc_trace(mVcdFile, grp_fu_423_p1, "grp_fu_423_p1");
    sc_trace(mVcdFile, grp_fu_427_p0, "grp_fu_427_p0");
    sc_trace(mVcdFile, grp_fu_427_p1, "grp_fu_427_p1");
    sc_trace(mVcdFile, grp_fu_431_p0, "grp_fu_431_p0");
    sc_trace(mVcdFile, grp_fu_431_p1, "grp_fu_431_p1");
    sc_trace(mVcdFile, grp_fu_435_p0, "grp_fu_435_p0");
    sc_trace(mVcdFile, grp_fu_435_p1, "grp_fu_435_p1");
    sc_trace(mVcdFile, grp_fu_439_p0, "grp_fu_439_p0");
    sc_trace(mVcdFile, grp_fu_439_p1, "grp_fu_439_p1");
    sc_trace(mVcdFile, grp_fu_443_p0, "grp_fu_443_p0");
    sc_trace(mVcdFile, grp_fu_443_p1, "grp_fu_443_p1");
    sc_trace(mVcdFile, lshr_ln_fu_461_p4, "lshr_ln_fu_461_p4");
    sc_trace(mVcdFile, bitcast_ln75_fu_493_p1, "bitcast_ln75_fu_493_p1");
    sc_trace(mVcdFile, xor_ln75_fu_496_p2, "xor_ln75_fu_496_p2");
    sc_trace(mVcdFile, bitcast_ln76_fu_507_p1, "bitcast_ln76_fu_507_p1");
    sc_trace(mVcdFile, xor_ln76_fu_510_p2, "xor_ln76_fu_510_p2");
    sc_trace(mVcdFile, bitcast_ln81_fu_521_p1, "bitcast_ln81_fu_521_p1");
    sc_trace(mVcdFile, xor_ln81_fu_524_p2, "xor_ln81_fu_524_p2");
    sc_trace(mVcdFile, bitcast_ln82_fu_541_p1, "bitcast_ln82_fu_541_p1");
    sc_trace(mVcdFile, xor_ln82_fu_544_p2, "xor_ln82_fu_544_p2");
    sc_trace(mVcdFile, bitcast_ln77_fu_555_p1, "bitcast_ln77_fu_555_p1");
    sc_trace(mVcdFile, xor_ln77_fu_558_p2, "xor_ln77_fu_558_p2");
    sc_trace(mVcdFile, bitcast_ln77_2_fu_569_p1, "bitcast_ln77_2_fu_569_p1");
    sc_trace(mVcdFile, xor_ln77_1_fu_572_p2, "xor_ln77_1_fu_572_p2");
    sc_trace(mVcdFile, bitcast_ln83_fu_583_p1, "bitcast_ln83_fu_583_p1");
    sc_trace(mVcdFile, xor_ln83_fu_586_p2, "xor_ln83_fu_586_p2");
    sc_trace(mVcdFile, bitcast_ln83_2_fu_597_p1, "bitcast_ln83_2_fu_597_p1");
    sc_trace(mVcdFile, xor_ln83_1_fu_600_p2, "xor_ln83_1_fu_600_p2");
    sc_trace(mVcdFile, lshr_ln2_fu_637_p4, "lshr_ln2_fu_637_p4");
    sc_trace(mVcdFile, zext_ln100_fu_673_p1, "zext_ln100_fu_673_p1");
    sc_trace(mVcdFile, zext_ln102_fu_715_p1, "zext_ln102_fu_715_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage1_subdone, "ap_block_pp1_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp1_stage2_subdone, "ap_block_pp1_stage2_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
    mHdltvinHandle.open("Reorder_fft.hdltvin.dat");
    mHdltvoutHandle.open("Reorder_fft.hdltvout.dat");
}

Reorder_fft::~Reorder_fft() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete lut_reorder_I_U;
    delete lut_reorder_J_U;
    delete Reorder_fft_AXILiteS_s_axi_U;
    delete Reorder_fft_fadd_dEe_U1;
    delete Reorder_fft_fadd_dEe_U2;
    delete Reorder_fft_fadd_dEe_U3;
    delete Reorder_fft_fadd_dEe_U4;
    delete Reorder_fft_fadd_dEe_U5;
    delete Reorder_fft_fadd_dEe_U6;
    delete Reorder_fft_mux_4eOg_U7;
    delete Reorder_fft_mux_4eOg_U8;
    delete Reorder_fft_mux_4eOg_U9;
    delete Reorder_fft_mux_4eOg_U10;
}

void Reorder_fft::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Reorder_fft::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter4 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state18.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
              esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_block_pp1_stage3_subdone.read(), ap_const_boolean_0) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read())))) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(tmp_8_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        c_0_reg_400 = c_reg_882.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c_0_reg_400 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        i_0_reg_412 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln92_reg_999.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        i_0_reg_412 = i_reg_1003.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(tmp_8_reg_754.read(), ap_const_lv1_0))) {
        IM_vec_128_a_reg_835 = Imag_0_q0.read();
        IM_vec_128_b_reg_841 = Imag_2_q0.read();
        Imag_1_load_reg_820 = Imag_1_q0.read();
        Imag_3_load_reg_830 = Imag_3_q0.read();
        RE_vec_128_a_reg_803 = Real_0_q0.read();
        RE_vec_128_b_reg_809 = Real_2_q0.read();
        Real_1_load_reg_815 = Real_1_q0.read();
        Real_3_load_reg_825 = Real_3_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln92_reg_999.read()))) {
        Imag_0_addr_1_reg_1043 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
        Imag_1_addr_2_reg_1048 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
        Imag_2_addr_2_reg_1053 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
        Imag_3_addr_2_reg_1058 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
        Real_0_addr_1_reg_1023 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
        Real_1_addr_2_reg_1028 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
        Real_2_addr_2_reg_1033 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
        Real_3_addr_2_reg_1038 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
        lshr_ln3_reg_1068 = lut_reorder_J_q0.read().range(9, 2);
        trunc_ln100_reg_1018 = trunc_ln100_fu_633_p1.read();
        trunc_ln102_reg_1063 = trunc_ln102_fu_659_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln92_reg_999.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0))) {
        Imag_0_addr_2_reg_1109 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
        Imag_1_addr_3_reg_1114 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
        Imag_2_addr_3_reg_1119 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
        Imag_3_addr_3_reg_1124 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
        Real_0_addr_2_reg_1089 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
        Real_1_addr_3_reg_1094 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
        Real_2_addr_3_reg_1099 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
        Real_3_addr_3_reg_1104 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
        tempi_reg_1081 = tempi_fu_690_p6.read();
        tempr_reg_1073 = tempr_fu_676_p6.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_fu_453_p3.read()))) {
        Imag_0_addr_reg_788 =  (sc_lv<8>) (zext_ln48_fu_471_p1.read());
        Imag_1_addr_reg_773 =  (sc_lv<8>) (zext_ln48_fu_471_p1.read());
        Imag_3_addr_reg_783 =  (sc_lv<8>) (zext_ln48_fu_471_p1.read());
        Real_0_addr_reg_758 =  (sc_lv<8>) (zext_ln48_fu_471_p1.read());
        Real_1_addr_reg_768 =  (sc_lv<8>) (zext_ln48_fu_471_p1.read());
        Real_3_addr_reg_778 =  (sc_lv<8>) (zext_ln48_fu_471_p1.read());
        lshr_ln1_reg_798 = ap_phi_mux_c_0_phi_fu_404_p4.read().range(9, 2);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        Imag_0_addr_reg_788_pp0_iter1_reg = Imag_0_addr_reg_788.read();
        Imag_0_addr_reg_788_pp0_iter2_reg = Imag_0_addr_reg_788_pp0_iter1_reg.read();
        Imag_0_addr_reg_788_pp0_iter3_reg = Imag_0_addr_reg_788_pp0_iter2_reg.read();
        Imag_0_addr_reg_788_pp0_iter4_reg = Imag_0_addr_reg_788_pp0_iter3_reg.read();
        Real_0_addr_reg_758_pp0_iter1_reg = Real_0_addr_reg_758.read();
        Real_0_addr_reg_758_pp0_iter2_reg = Real_0_addr_reg_758_pp0_iter1_reg.read();
        Real_0_addr_reg_758_pp0_iter3_reg = Real_0_addr_reg_758_pp0_iter2_reg.read();
        Real_0_addr_reg_758_pp0_iter4_reg = Real_0_addr_reg_758_pp0_iter3_reg.read();
        lshr_ln1_reg_798_pp0_iter1_reg = lshr_ln1_reg_798.read();
        lshr_ln1_reg_798_pp0_iter2_reg = lshr_ln1_reg_798_pp0_iter1_reg.read();
        lshr_ln1_reg_798_pp0_iter3_reg = lshr_ln1_reg_798_pp0_iter2_reg.read();
        lshr_ln1_reg_798_pp0_iter4_reg = lshr_ln1_reg_798_pp0_iter3_reg.read();
        tmp_8_reg_754 = ap_phi_mux_c_0_phi_fu_404_p4.read().range(10, 10);
        tmp_8_reg_754_pp0_iter1_reg = tmp_8_reg_754.read();
        tmp_8_reg_754_pp0_iter2_reg = tmp_8_reg_754_pp0_iter1_reg.read();
        tmp_8_reg_754_pp0_iter3_reg = tmp_8_reg_754_pp0_iter2_reg.read();
        tmp_8_reg_754_pp0_iter4_reg = tmp_8_reg_754_pp0_iter3_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(tmp_8_reg_754.read(), ap_const_lv1_0))) {
        Imag_1_load_1_reg_847 = Imag_1_q0.read();
        Imag_3_load_1_reg_857 = Imag_3_q0.read();
        Real_1_load_1_reg_852 = Real_1_q0.read();
        Real_3_load_1_reg_862 = Real_3_q0.read();
        c_reg_882 = c_fu_535_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        i_reg_1003 = i_fu_621_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln92_reg_999 = icmp_ln92_fu_615_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(tmp_8_reg_754_pp0_iter3_reg.read(), ap_const_lv1_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_754_pp0_iter4_reg.read())))) {
        reg_447 = grp_fu_431_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_754_pp0_iter4_reg.read()))) {
        tmp_10_1_reg_975 = grp_fu_435_p2.read();
        tmp_10_2_reg_989 = grp_fu_439_p2.read();
        tmp_10_3_reg_994 = grp_fu_443_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_754_pp0_iter1_reg.read()))) {
        tmp_1_1_reg_910 = grp_fu_435_p2.read();
        tmp_1_reg_892 = grp_fu_423_p2.read();
        tmp_3_1_reg_916 = grp_fu_439_p2.read();
        tmp_3_reg_898 = grp_fu_427_p2.read();
        tmp_7_1_reg_922 = grp_fu_443_p2.read();
        tmp_7_reg_904 = grp_fu_431_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_8_reg_754_pp0_iter3_reg.read(), ap_const_lv1_0))) {
        tmp_5_1_reg_965 = grp_fu_427_p2.read();
        tmp_5_3_reg_970 = grp_fu_435_p2.read();
        tmp_5_reg_960 = grp_fu_423_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_754_pp0_iter2_reg.read()))) {
        tmp_9_1_reg_934 = grp_fu_427_p2.read();
        tmp_9_reg_928 = grp_fu_423_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_754_pp0_iter4_reg.read()))) {
        zext_ln85_reg_980 = zext_ln85_fu_611_p1.read();
    }
}

void Reorder_fft::thread_Imag_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Imag_0_address0 = Imag_0_addr_2_reg_1109.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Imag_0_address0 = Imag_0_addr_1_reg_1043.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        Imag_0_address0 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        Imag_0_address0 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        Imag_0_address0 = Imag_0_addr_reg_788_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        Imag_0_address0 =  (sc_lv<8>) (zext_ln48_fu_471_p1.read());
    } else {
        Imag_0_address0 = "XXXXXXXX";
    }
}

void Reorder_fft::thread_Imag_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        Imag_0_ce0 = ap_const_logic_1;
    } else {
        Imag_0_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Imag_0_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Imag_0_d0 = tempi_reg_1081.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Imag_0_d0 = tmp_6_fu_736_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        Imag_0_d0 = reg_447.read();
    } else {
        Imag_0_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_Imag_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln92_reg_999.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(trunc_ln100_reg_1018.read(), ap_const_lv2_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,2,2>(trunc_ln102_reg_1063.read(), ap_const_lv2_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_754_pp0_iter4_reg.read())))) {
        Imag_0_we0 = ap_const_logic_1;
    } else {
        Imag_0_we0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Imag_1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Imag_1_address0 = Imag_1_addr_3_reg_1114.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Imag_1_address0 = Imag_1_addr_2_reg_1048.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        Imag_1_address0 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        Imag_1_address0 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        Imag_1_address0 =  (sc_lv<8>) (zext_ln85_reg_980.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        Imag_1_address0 = Imag_1_addr_reg_773.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        Imag_1_address0 =  (sc_lv<8>) (zext_ln48_fu_471_p1.read());
    } else {
        Imag_1_address0 = "XXXXXXXX";
    }
}

void Reorder_fft::thread_Imag_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        Imag_1_ce0 = ap_const_logic_1;
    } else {
        Imag_1_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Imag_1_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Imag_1_d0 = tempi_reg_1081.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Imag_1_d0 = tmp_6_fu_736_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        Imag_1_d0 = tmp_10_1_reg_975.read();
    } else {
        Imag_1_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_Imag_1_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_754_pp0_iter4_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln92_reg_999.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(trunc_ln100_reg_1018.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,2,2>(trunc_ln102_reg_1063.read(), ap_const_lv2_1)))) {
        Imag_1_we0 = ap_const_logic_1;
    } else {
        Imag_1_we0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Imag_2_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Imag_2_address0 = Imag_2_addr_3_reg_1119.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Imag_2_address0 = Imag_2_addr_2_reg_1053.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        Imag_2_address0 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        Imag_2_address0 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        Imag_2_address0 =  (sc_lv<8>) (zext_ln85_reg_980.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        Imag_2_address0 =  (sc_lv<8>) (zext_ln48_fu_471_p1.read());
    } else {
        Imag_2_address0 = "XXXXXXXX";
    }
}

void Reorder_fft::thread_Imag_2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        Imag_2_ce0 = ap_const_logic_1;
    } else {
        Imag_2_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Imag_2_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Imag_2_d0 = tempi_reg_1081.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Imag_2_d0 = tmp_6_fu_736_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        Imag_2_d0 = tmp_10_2_reg_989.read();
    } else {
        Imag_2_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_Imag_2_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln92_reg_999.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(trunc_ln100_reg_1018.read(), ap_const_lv2_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,2,2>(trunc_ln102_reg_1063.read(), ap_const_lv2_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_754_pp0_iter4_reg.read())))) {
        Imag_2_we0 = ap_const_logic_1;
    } else {
        Imag_2_we0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Imag_3_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Imag_3_address0 = Imag_3_addr_3_reg_1124.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Imag_3_address0 = Imag_3_addr_2_reg_1058.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        Imag_3_address0 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        Imag_3_address0 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        Imag_3_address0 =  (sc_lv<8>) (zext_ln85_reg_980.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        Imag_3_address0 = Imag_3_addr_reg_783.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        Imag_3_address0 =  (sc_lv<8>) (zext_ln48_fu_471_p1.read());
    } else {
        Imag_3_address0 = "XXXXXXXX";
    }
}

void Reorder_fft::thread_Imag_3_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        Imag_3_ce0 = ap_const_logic_1;
    } else {
        Imag_3_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Imag_3_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Imag_3_d0 = tempi_reg_1081.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Imag_3_d0 = tmp_6_fu_736_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        Imag_3_d0 = tmp_10_3_reg_994.read();
    } else {
        Imag_3_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_Imag_3_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_754_pp0_iter4_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln92_reg_999.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(trunc_ln100_reg_1018.read(), ap_const_lv2_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,2,2>(trunc_ln102_reg_1063.read(), ap_const_lv2_3)))) {
        Imag_3_we0 = ap_const_logic_1;
    } else {
        Imag_3_we0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Real_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Real_0_address0 = Real_0_addr_2_reg_1089.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Real_0_address0 = Real_0_addr_1_reg_1023.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        Real_0_address0 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        Real_0_address0 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        Real_0_address0 = Real_0_addr_reg_758_pp0_iter4_reg.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        Real_0_address0 =  (sc_lv<8>) (zext_ln48_fu_471_p1.read());
    } else {
        Real_0_address0 = "XXXXXXXX";
    }
}

void Reorder_fft::thread_Real_0_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0)))) {
        Real_0_ce0 = ap_const_logic_1;
    } else {
        Real_0_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Real_0_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Real_0_d0 = tempr_reg_1073.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Real_0_d0 = tmp_s_fu_718_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        Real_0_d0 = tmp_5_reg_960.read();
    } else {
        Real_0_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_Real_0_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_754_pp0_iter4_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln92_reg_999.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(trunc_ln100_reg_1018.read(), ap_const_lv2_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,2,2>(trunc_ln102_reg_1063.read(), ap_const_lv2_0)))) {
        Real_0_we0 = ap_const_logic_1;
    } else {
        Real_0_we0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Real_1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Real_1_address0 = Real_1_addr_3_reg_1094.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Real_1_address0 = Real_1_addr_2_reg_1028.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        Real_1_address0 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        Real_1_address0 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        Real_1_address0 =  (sc_lv<8>) (zext_ln85_reg_980.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        Real_1_address0 = Real_1_addr_reg_768.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        Real_1_address0 =  (sc_lv<8>) (zext_ln48_fu_471_p1.read());
    } else {
        Real_1_address0 = "XXXXXXXX";
    }
}

void Reorder_fft::thread_Real_1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        Real_1_ce0 = ap_const_logic_1;
    } else {
        Real_1_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Real_1_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Real_1_d0 = tempr_reg_1073.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Real_1_d0 = tmp_s_fu_718_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        Real_1_d0 = tmp_5_1_reg_965.read();
    } else {
        Real_1_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_Real_1_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_754_pp0_iter4_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln92_reg_999.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(trunc_ln100_reg_1018.read(), ap_const_lv2_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,2,2>(trunc_ln102_reg_1063.read(), ap_const_lv2_1)))) {
        Real_1_we0 = ap_const_logic_1;
    } else {
        Real_1_we0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Real_2_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Real_2_address0 = Real_2_addr_3_reg_1099.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Real_2_address0 = Real_2_addr_2_reg_1033.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        Real_2_address0 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        Real_2_address0 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        Real_2_address0 =  (sc_lv<8>) (zext_ln85_fu_611_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        Real_2_address0 =  (sc_lv<8>) (zext_ln48_fu_471_p1.read());
    } else {
        Real_2_address0 = "XXXXXXXX";
    }
}

void Reorder_fft::thread_Real_2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0)))) {
        Real_2_ce0 = ap_const_logic_1;
    } else {
        Real_2_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Real_2_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Real_2_d0 = tempr_reg_1073.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Real_2_d0 = tmp_s_fu_718_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        Real_2_d0 = reg_447.read();
    } else {
        Real_2_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_Real_2_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_754_pp0_iter4_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln92_reg_999.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(trunc_ln100_reg_1018.read(), ap_const_lv2_2)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,2,2>(trunc_ln102_reg_1063.read(), ap_const_lv2_2)))) {
        Real_2_we0 = ap_const_logic_1;
    } else {
        Real_2_we0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Real_3_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Real_3_address0 = Real_3_addr_3_reg_1104.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Real_3_address0 = Real_3_addr_2_reg_1038.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage2.read(), ap_const_boolean_0))) {
        Real_3_address0 =  (sc_lv<8>) (zext_ln102_1_fu_704_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        Real_3_address0 =  (sc_lv<8>) (zext_ln100_1_fu_647_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        Real_3_address0 =  (sc_lv<8>) (zext_ln85_reg_980.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        Real_3_address0 = Real_3_addr_reg_778.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        Real_3_address0 =  (sc_lv<8>) (zext_ln48_fu_471_p1.read());
    } else {
        Real_3_address0 = "XXXXXXXX";
    }
}

void Reorder_fft::thread_Real_3_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read())))) {
        Real_3_ce0 = ap_const_logic_1;
    } else {
        Real_3_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Real_3_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        Real_3_d0 = tempr_reg_1073.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage3.read(), ap_const_boolean_0))) {
        Real_3_d0 = tmp_s_fu_718_p6.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        Real_3_d0 = tmp_5_3_reg_970.read();
    } else {
        Real_3_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_Real_3_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_8_reg_754_pp0_iter4_reg.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln92_reg_999.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage3_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,2,2>(trunc_ln100_reg_1018.read(), ap_const_lv2_3)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,2,2>(trunc_ln102_reg_1063.read(), ap_const_lv2_3)))) {
        Real_3_we0 = ap_const_logic_1;
    } else {
        Real_3_we0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Reorder_fft::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[2];
}

void Reorder_fft::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[3];
}

void Reorder_fft::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[5];
}

void Reorder_fft::thread_ap_CS_fsm_pp1_stage1() {
    ap_CS_fsm_pp1_stage1 = ap_CS_fsm.read()[6];
}

void Reorder_fft::thread_ap_CS_fsm_pp1_stage2() {
    ap_CS_fsm_pp1_stage2 = ap_CS_fsm.read()[7];
}

void Reorder_fft::thread_ap_CS_fsm_pp1_stage3() {
    ap_CS_fsm_pp1_stage3 = ap_CS_fsm.read()[8];
}

void Reorder_fft::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Reorder_fft::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[4];
}

void Reorder_fft::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[9];
}

void Reorder_fft::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage1() {
    ap_block_pp1_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage1_11001() {
    ap_block_pp1_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage1_subdone() {
    ap_block_pp1_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage2() {
    ap_block_pp1_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage2_11001() {
    ap_block_pp1_stage2_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage2_subdone() {
    ap_block_pp1_stage2_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage3() {
    ap_block_pp1_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage3_11001() {
    ap_block_pp1_stage3_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_pp1_stage3_subdone() {
    ap_block_pp1_stage3_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state10_pp0_stage2_iter2() {
    ap_block_state10_pp0_stage2_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state11_pp0_stage0_iter3() {
    ap_block_state11_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state12_pp0_stage1_iter3() {
    ap_block_state12_pp0_stage1_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state13_pp0_stage2_iter3() {
    ap_block_state13_pp0_stage2_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state14_pp0_stage0_iter4() {
    ap_block_state14_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state15_pp0_stage1_iter4() {
    ap_block_state15_pp0_stage1_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state16_pp0_stage2_iter4() {
    ap_block_state16_pp0_stage2_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state18_pp1_stage0_iter0() {
    ap_block_state18_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state19_pp1_stage1_iter0() {
    ap_block_state19_pp1_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state20_pp1_stage2_iter0() {
    ap_block_state20_pp1_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state21_pp1_stage3_iter0() {
    ap_block_state21_pp1_stage3_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state22_pp1_stage0_iter1() {
    ap_block_state22_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state3_pp0_stage1_iter0() {
    ap_block_state3_pp0_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state4_pp0_stage2_iter0() {
    ap_block_state4_pp0_stage2_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state5_pp0_stage0_iter1() {
    ap_block_state5_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state6_pp0_stage1_iter1() {
    ap_block_state6_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state7_pp0_stage2_iter1() {
    ap_block_state7_pp0_stage2_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state8_pp0_stage0_iter2() {
    ap_block_state8_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_block_state9_pp0_stage1_iter2() {
    ap_block_state9_pp0_stage1_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Reorder_fft::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(tmp_8_fu_453_p3.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_condition_pp1_exit_iter0_state18() {
    if (esl_seteq<1,1,1>(icmp_ln92_fu_615_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state18 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state18 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Reorder_fft::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void Reorder_fft::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_phi_mux_c_0_phi_fu_404_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(tmp_8_reg_754.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_c_0_phi_fu_404_p4 = c_reg_882.read();
    } else {
        ap_phi_mux_c_0_phi_fu_404_p4 = c_0_reg_400.read();
    }
}

void Reorder_fft::thread_ap_phi_mux_i_0_phi_fu_416_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln92_reg_999.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_416_p4 = i_reg_1003.read();
    } else {
        ap_phi_mux_i_0_phi_fu_416_p4 = i_0_reg_412.read();
    }
}

void Reorder_fft::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void Reorder_fft::thread_bitcast_ln75_1_fu_502_p1() {
    bitcast_ln75_1_fu_502_p1 = xor_ln75_fu_496_p2.read();
}

void Reorder_fft::thread_bitcast_ln75_fu_493_p1() {
    bitcast_ln75_fu_493_p1 = RE_vec_128_b_reg_809.read();
}

void Reorder_fft::thread_bitcast_ln76_1_fu_516_p1() {
    bitcast_ln76_1_fu_516_p1 = xor_ln76_fu_510_p2.read();
}

void Reorder_fft::thread_bitcast_ln76_fu_507_p1() {
    bitcast_ln76_fu_507_p1 = Imag_3_load_reg_830.read();
}

void Reorder_fft::thread_bitcast_ln77_1_fu_564_p1() {
    bitcast_ln77_1_fu_564_p1 = xor_ln77_fu_558_p2.read();
}

void Reorder_fft::thread_bitcast_ln77_2_fu_569_p1() {
    bitcast_ln77_2_fu_569_p1 = tmp_3_1_reg_916.read();
}

void Reorder_fft::thread_bitcast_ln77_3_fu_578_p1() {
    bitcast_ln77_3_fu_578_p1 = xor_ln77_1_fu_572_p2.read();
}

void Reorder_fft::thread_bitcast_ln77_fu_555_p1() {
    bitcast_ln77_fu_555_p1 = tmp_3_reg_898.read();
}

void Reorder_fft::thread_bitcast_ln81_1_fu_530_p1() {
    bitcast_ln81_1_fu_530_p1 = xor_ln81_fu_524_p2.read();
}

void Reorder_fft::thread_bitcast_ln81_fu_521_p1() {
    bitcast_ln81_fu_521_p1 = IM_vec_128_b_reg_841.read();
}

void Reorder_fft::thread_bitcast_ln82_1_fu_550_p1() {
    bitcast_ln82_1_fu_550_p1 = xor_ln82_fu_544_p2.read();
}

void Reorder_fft::thread_bitcast_ln82_fu_541_p1() {
    bitcast_ln82_fu_541_p1 = Real_3_load_1_reg_862.read();
}

void Reorder_fft::thread_bitcast_ln83_1_fu_592_p1() {
    bitcast_ln83_1_fu_592_p1 = xor_ln83_fu_586_p2.read();
}

void Reorder_fft::thread_bitcast_ln83_2_fu_597_p1() {
    bitcast_ln83_2_fu_597_p1 = tmp_9_reg_928.read();
}

void Reorder_fft::thread_bitcast_ln83_3_fu_606_p1() {
    bitcast_ln83_3_fu_606_p1 = xor_ln83_1_fu_600_p2.read();
}

void Reorder_fft::thread_bitcast_ln83_fu_583_p1() {
    bitcast_ln83_fu_583_p1 = tmp_9_1_reg_934.read();
}

void Reorder_fft::thread_c_fu_535_p2() {
    c_fu_535_p2 = (!c_0_reg_400.read().is_01() || !ap_const_lv11_4.is_01())? sc_lv<11>(): (sc_biguint<11>(c_0_reg_400.read()) + sc_biguint<11>(ap_const_lv11_4));
}

void Reorder_fft::thread_grp_fu_423_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_423_p0 = tmp_3_reg_898.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_423_p0 = Imag_3_load_1_reg_857.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_423_p0 = RE_vec_128_b_reg_809.read();
    } else {
        grp_fu_423_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_423_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_423_p1 = tmp_1_reg_892.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_423_p1 = Imag_1_load_1_reg_847.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_423_p1 = RE_vec_128_a_reg_803.read();
    } else {
        grp_fu_423_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_427_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_427_p0 = tmp_3_1_reg_916.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_427_p0 = bitcast_ln82_1_fu_550_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_427_p0 = Real_3_load_reg_825.read();
    } else {
        grp_fu_427_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_427_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_427_p1 = tmp_1_1_reg_910.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_427_p1 = Real_1_load_1_reg_852.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_427_p1 = Real_1_load_reg_815.read();
    } else {
        grp_fu_427_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_431_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_431_p0 = tmp_9_reg_928.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_431_p0 = bitcast_ln77_1_fu_564_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_431_p0 = IM_vec_128_b_reg_841.read();
    } else {
        grp_fu_431_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_431_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_431_p1 = tmp_7_reg_904.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_431_p1 = tmp_1_reg_892.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_431_p1 = IM_vec_128_a_reg_835.read();
    } else {
        grp_fu_431_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_435_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_435_p0 = bitcast_ln83_1_fu_592_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_435_p0 = bitcast_ln77_3_fu_578_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_435_p0 = bitcast_ln75_1_fu_502_p1.read();
    } else {
        grp_fu_435_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_435_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_435_p1 = tmp_7_1_reg_922.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0))) {
        grp_fu_435_p1 = tmp_1_1_reg_910.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_435_p1 = RE_vec_128_a_reg_803.read();
    } else {
        grp_fu_435_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_439_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_439_p0 = bitcast_ln83_3_fu_606_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_439_p0 = bitcast_ln76_1_fu_516_p1.read();
    } else {
        grp_fu_439_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_439_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_439_p1 = tmp_7_reg_904.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_439_p1 = Imag_1_load_reg_820.read();
    } else {
        grp_fu_439_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_443_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_443_p0 = tmp_9_1_reg_934.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_443_p0 = bitcast_ln81_1_fu_530_p1.read();
    } else {
        grp_fu_443_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_443_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        grp_fu_443_p1 = tmp_7_1_reg_922.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0))) {
        grp_fu_443_p1 = IM_vec_128_a_reg_835.read();
    } else {
        grp_fu_443_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_i_fu_621_p2() {
    i_fu_621_p2 = (!ap_phi_mux_i_0_phi_fu_416_p4.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(ap_phi_mux_i_0_phi_fu_416_p4.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void Reorder_fft::thread_icmp_ln92_fu_615_p2() {
    icmp_ln92_fu_615_p2 = (!ap_phi_mux_i_0_phi_fu_416_p4.read().is_01() || !ap_const_lv9_1E0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_416_p4.read() == ap_const_lv9_1E0);
}

void Reorder_fft::thread_lshr_ln2_fu_637_p4() {
    lshr_ln2_fu_637_p4 = lut_reorder_I_q0.read().range(9, 2);
}

void Reorder_fft::thread_lshr_ln_fu_461_p4() {
    lshr_ln_fu_461_p4 = ap_phi_mux_c_0_phi_fu_404_p4.read().range(10, 2);
}

void Reorder_fft::thread_lut_reorder_I_address0() {
    lut_reorder_I_address0 =  (sc_lv<9>) (zext_ln97_fu_627_p1.read());
}

void Reorder_fft::thread_lut_reorder_I_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        lut_reorder_I_ce0 = ap_const_logic_1;
    } else {
        lut_reorder_I_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_lut_reorder_J_address0() {
    lut_reorder_J_address0 =  (sc_lv<9>) (zext_ln97_fu_627_p1.read());
}

void Reorder_fft::thread_lut_reorder_J_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        lut_reorder_J_ce0 = ap_const_logic_1;
    } else {
        lut_reorder_J_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_tmp_8_fu_453_p3() {
    tmp_8_fu_453_p3 = ap_phi_mux_c_0_phi_fu_404_p4.read().range(10, 10);
}

void Reorder_fft::thread_trunc_ln100_fu_633_p1() {
    trunc_ln100_fu_633_p1 = lut_reorder_I_q0.read().range(2-1, 0);
}

void Reorder_fft::thread_trunc_ln102_fu_659_p1() {
    trunc_ln102_fu_659_p1 = lut_reorder_J_q0.read().range(2-1, 0);
}

void Reorder_fft::thread_xor_ln75_fu_496_p2() {
    xor_ln75_fu_496_p2 = (bitcast_ln75_fu_493_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_xor_ln76_fu_510_p2() {
    xor_ln76_fu_510_p2 = (bitcast_ln76_fu_507_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_xor_ln77_1_fu_572_p2() {
    xor_ln77_1_fu_572_p2 = (bitcast_ln77_2_fu_569_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_xor_ln77_fu_558_p2() {
    xor_ln77_fu_558_p2 = (bitcast_ln77_fu_555_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_xor_ln81_fu_524_p2() {
    xor_ln81_fu_524_p2 = (bitcast_ln81_fu_521_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_xor_ln82_fu_544_p2() {
    xor_ln82_fu_544_p2 = (bitcast_ln82_fu_541_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_xor_ln83_1_fu_600_p2() {
    xor_ln83_1_fu_600_p2 = (bitcast_ln83_2_fu_597_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_xor_ln83_fu_586_p2() {
    xor_ln83_fu_586_p2 = (bitcast_ln83_fu_583_p1.read() ^ ap_const_lv32_80000000);
}

void Reorder_fft::thread_zext_ln100_1_fu_647_p1() {
    zext_ln100_1_fu_647_p1 = esl_zext<64,8>(lshr_ln2_fu_637_p4.read());
}

void Reorder_fft::thread_zext_ln100_fu_673_p1() {
    zext_ln100_fu_673_p1 = esl_zext<32,2>(trunc_ln100_reg_1018.read());
}

void Reorder_fft::thread_zext_ln102_1_fu_704_p1() {
    zext_ln102_1_fu_704_p1 = esl_zext<64,8>(lshr_ln3_reg_1068.read());
}

void Reorder_fft::thread_zext_ln102_fu_715_p1() {
    zext_ln102_fu_715_p1 = esl_zext<32,2>(trunc_ln102_reg_1063.read());
}

void Reorder_fft::thread_zext_ln48_fu_471_p1() {
    zext_ln48_fu_471_p1 = esl_zext<64,9>(lshr_ln_fu_461_p4.read());
}

void Reorder_fft::thread_zext_ln85_fu_611_p1() {
    zext_ln85_fu_611_p1 = esl_zext<64,8>(lshr_ln1_reg_798_pp0_iter4_reg.read());
}

void Reorder_fft::thread_zext_ln97_fu_627_p1() {
    zext_ln97_fu_627_p1 = esl_zext<64,9>(ap_phi_mux_i_0_phi_fu_416_p4.read());
}

void Reorder_fft::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_8_fu_453_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(tmp_8_fu_453_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter3.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln92_fu_615_p2.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln92_fu_615_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state23;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 64 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            }
            break;
        case 128 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            }
            break;
        case 256 : 
            if (esl_seteq<1,1,1>(ap_block_pp1_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage3;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

void Reorder_fft::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"Real_0_address0\" :  \"" << Real_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_0_ce0\" :  \"" << Real_0_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_0_we0\" :  \"" << Real_0_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_0_d0\" :  \"" << Real_0_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Real_0_q0\" :  \"" << Real_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_1_address0\" :  \"" << Real_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_1_ce0\" :  \"" << Real_1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_1_we0\" :  \"" << Real_1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_1_d0\" :  \"" << Real_1_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Real_1_q0\" :  \"" << Real_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_2_address0\" :  \"" << Real_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_2_ce0\" :  \"" << Real_2_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_2_we0\" :  \"" << Real_2_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_2_d0\" :  \"" << Real_2_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Real_2_q0\" :  \"" << Real_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_3_address0\" :  \"" << Real_3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_3_ce0\" :  \"" << Real_3_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_3_we0\" :  \"" << Real_3_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_3_d0\" :  \"" << Real_3_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Real_3_q0\" :  \"" << Real_3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_0_address0\" :  \"" << Imag_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_0_ce0\" :  \"" << Imag_0_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_0_we0\" :  \"" << Imag_0_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_0_d0\" :  \"" << Imag_0_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Imag_0_q0\" :  \"" << Imag_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_1_address0\" :  \"" << Imag_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_1_ce0\" :  \"" << Imag_1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_1_we0\" :  \"" << Imag_1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_1_d0\" :  \"" << Imag_1_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Imag_1_q0\" :  \"" << Imag_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_2_address0\" :  \"" << Imag_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_2_ce0\" :  \"" << Imag_2_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_2_we0\" :  \"" << Imag_2_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_2_d0\" :  \"" << Imag_2_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Imag_2_q0\" :  \"" << Imag_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_3_address0\" :  \"" << Imag_3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_3_ce0\" :  \"" << Imag_3_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_3_we0\" :  \"" << Imag_3_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_3_d0\" :  \"" << Imag_3_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Imag_3_q0\" :  \"" << Imag_3_q0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

