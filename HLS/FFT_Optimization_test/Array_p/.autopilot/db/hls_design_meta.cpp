#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("Real_0_address0", 8, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("Real_0_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("Real_0_we0", 1, hls_out, 0, "ap_memory", "mem_we", 1),
	Port_Property("Real_0_d0", 32, hls_out, 0, "ap_memory", "mem_din", 1),
	Port_Property("Real_0_q0", 32, hls_in, 0, "ap_memory", "mem_dout", 1),
	Port_Property("Real_1_address0", 8, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("Real_1_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("Real_1_we0", 1, hls_out, 1, "ap_memory", "mem_we", 1),
	Port_Property("Real_1_d0", 32, hls_out, 1, "ap_memory", "mem_din", 1),
	Port_Property("Real_1_q0", 32, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("Real_2_address0", 8, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("Real_2_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("Real_2_we0", 1, hls_out, 2, "ap_memory", "mem_we", 1),
	Port_Property("Real_2_d0", 32, hls_out, 2, "ap_memory", "mem_din", 1),
	Port_Property("Real_2_q0", 32, hls_in, 2, "ap_memory", "mem_dout", 1),
	Port_Property("Real_3_address0", 8, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("Real_3_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("Real_3_we0", 1, hls_out, 3, "ap_memory", "mem_we", 1),
	Port_Property("Real_3_d0", 32, hls_out, 3, "ap_memory", "mem_din", 1),
	Port_Property("Real_3_q0", 32, hls_in, 3, "ap_memory", "mem_dout", 1),
	Port_Property("Imag_0_address0", 8, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("Imag_0_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("Imag_0_we0", 1, hls_out, 4, "ap_memory", "mem_we", 1),
	Port_Property("Imag_0_d0", 32, hls_out, 4, "ap_memory", "mem_din", 1),
	Port_Property("Imag_0_q0", 32, hls_in, 4, "ap_memory", "mem_dout", 1),
	Port_Property("Imag_1_address0", 8, hls_out, 5, "ap_memory", "mem_address", 1),
	Port_Property("Imag_1_ce0", 1, hls_out, 5, "ap_memory", "mem_ce", 1),
	Port_Property("Imag_1_we0", 1, hls_out, 5, "ap_memory", "mem_we", 1),
	Port_Property("Imag_1_d0", 32, hls_out, 5, "ap_memory", "mem_din", 1),
	Port_Property("Imag_1_q0", 32, hls_in, 5, "ap_memory", "mem_dout", 1),
	Port_Property("Imag_2_address0", 8, hls_out, 6, "ap_memory", "mem_address", 1),
	Port_Property("Imag_2_ce0", 1, hls_out, 6, "ap_memory", "mem_ce", 1),
	Port_Property("Imag_2_we0", 1, hls_out, 6, "ap_memory", "mem_we", 1),
	Port_Property("Imag_2_d0", 32, hls_out, 6, "ap_memory", "mem_din", 1),
	Port_Property("Imag_2_q0", 32, hls_in, 6, "ap_memory", "mem_dout", 1),
	Port_Property("Imag_3_address0", 8, hls_out, 7, "ap_memory", "mem_address", 1),
	Port_Property("Imag_3_ce0", 1, hls_out, 7, "ap_memory", "mem_ce", 1),
	Port_Property("Imag_3_we0", 1, hls_out, 7, "ap_memory", "mem_we", 1),
	Port_Property("Imag_3_d0", 32, hls_out, 7, "ap_memory", "mem_din", 1),
	Port_Property("Imag_3_q0", 32, hls_in, 7, "ap_memory", "mem_dout", 1),
	Port_Property("s_axi_AXILiteS_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_AWADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_ARADDR", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_AXILiteS_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "Reorder_fft";
