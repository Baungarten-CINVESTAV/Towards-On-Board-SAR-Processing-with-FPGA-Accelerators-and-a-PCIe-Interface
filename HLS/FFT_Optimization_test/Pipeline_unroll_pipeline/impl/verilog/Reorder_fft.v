// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1.3
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Reorder_fft,hls_ip_2019_1_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.954000,HLS_SYN_LAT=9411,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=30,HLS_SYN_FF=4779,HLS_SYN_LUT=6982,HLS_VERSION=2019_1_3}" *)

module Reorder_fft (
        ap_clk,
        ap_rst_n,
        Real_r_Addr_A,
        Real_r_EN_A,
        Real_r_WEN_A,
        Real_r_Din_A,
        Real_r_Dout_A,
        Real_r_Clk_A,
        Real_r_Rst_A,
        Imag_Addr_A,
        Imag_EN_A,
        Imag_WEN_A,
        Imag_Din_A,
        Imag_Dout_A,
        Imag_Clk_A,
        Imag_Rst_A,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 39'd1;
parameter    ap_ST_fsm_state2 = 39'd2;
parameter    ap_ST_fsm_state3 = 39'd4;
parameter    ap_ST_fsm_state4 = 39'd8;
parameter    ap_ST_fsm_state5 = 39'd16;
parameter    ap_ST_fsm_state6 = 39'd32;
parameter    ap_ST_fsm_state7 = 39'd64;
parameter    ap_ST_fsm_state8 = 39'd128;
parameter    ap_ST_fsm_pp0_stage0 = 39'd256;
parameter    ap_ST_fsm_state28 = 39'd512;
parameter    ap_ST_fsm_state29 = 39'd1024;
parameter    ap_ST_fsm_state30 = 39'd2048;
parameter    ap_ST_fsm_state31 = 39'd4096;
parameter    ap_ST_fsm_state32 = 39'd8192;
parameter    ap_ST_fsm_state33 = 39'd16384;
parameter    ap_ST_fsm_state34 = 39'd32768;
parameter    ap_ST_fsm_pp1_stage0 = 39'd65536;
parameter    ap_ST_fsm_state54 = 39'd131072;
parameter    ap_ST_fsm_state55 = 39'd262144;
parameter    ap_ST_fsm_state56 = 39'd524288;
parameter    ap_ST_fsm_state57 = 39'd1048576;
parameter    ap_ST_fsm_state58 = 39'd2097152;
parameter    ap_ST_fsm_state59 = 39'd4194304;
parameter    ap_ST_fsm_state60 = 39'd8388608;
parameter    ap_ST_fsm_pp2_stage0 = 39'd16777216;
parameter    ap_ST_fsm_state80 = 39'd33554432;
parameter    ap_ST_fsm_state81 = 39'd67108864;
parameter    ap_ST_fsm_state82 = 39'd134217728;
parameter    ap_ST_fsm_state83 = 39'd268435456;
parameter    ap_ST_fsm_state84 = 39'd536870912;
parameter    ap_ST_fsm_state85 = 39'd1073741824;
parameter    ap_ST_fsm_state86 = 39'd2147483648;
parameter    ap_ST_fsm_pp3_stage0 = 39'd4294967296;
parameter    ap_ST_fsm_state106 = 39'd8589934592;
parameter    ap_ST_fsm_pp4_stage0 = 39'd17179869184;
parameter    ap_ST_fsm_pp4_stage1 = 39'd34359738368;
parameter    ap_ST_fsm_pp4_stage2 = 39'd68719476736;
parameter    ap_ST_fsm_pp4_stage3 = 39'd137438953472;
parameter    ap_ST_fsm_state112 = 39'd274877906944;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [31:0] Real_r_Addr_A;
output   Real_r_EN_A;
output  [3:0] Real_r_WEN_A;
output  [31:0] Real_r_Din_A;
input  [31:0] Real_r_Dout_A;
output   Real_r_Clk_A;
output   Real_r_Rst_A;
output  [31:0] Imag_Addr_A;
output   Imag_EN_A;
output  [3:0] Imag_WEN_A;
output  [31:0] Imag_Din_A;
input  [31:0] Imag_Dout_A;
output   Imag_Clk_A;
output   Imag_Rst_A;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg Real_r_EN_A;
reg[3:0] Real_r_WEN_A;
reg[31:0] Real_r_Din_A;
reg Imag_EN_A;
reg[3:0] Imag_WEN_A;
reg[31:0] Imag_Din_A;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [38:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [8:0] lut_reorder_I_address0;
reg    lut_reorder_I_ce0;
wire   [9:0] lut_reorder_I_q0;
wire   [8:0] lut_reorder_J_address0;
reg    lut_reorder_J_ce0;
wire   [9:0] lut_reorder_J_q0;
reg   [2:0] c_aux_0_0_reg_518;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state9_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state12_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state14_pp0_stage0_iter5;
wire    ap_block_state15_pp0_stage0_iter6;
wire    ap_block_state16_pp0_stage0_iter7;
wire    ap_block_state17_pp0_stage0_iter8;
wire    ap_block_state18_pp0_stage0_iter9;
wire    ap_block_state19_pp0_stage0_iter10;
wire    ap_block_state20_pp0_stage0_iter11;
wire    ap_block_state21_pp0_stage0_iter12;
wire    ap_block_state22_pp0_stage0_iter13;
wire    ap_block_state23_pp0_stage0_iter14;
wire    ap_block_state24_pp0_stage0_iter15;
wire    ap_block_state25_pp0_stage0_iter16;
wire    ap_block_state26_pp0_stage0_iter17;
wire    ap_block_state27_pp0_stage0_iter18;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter2_reg;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter3_reg;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter4_reg;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter5_reg;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter6_reg;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter7_reg;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter8_reg;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter9_reg;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter10_reg;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter11_reg;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter12_reg;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter13_reg;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter14_reg;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter15_reg;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter16_reg;
reg   [2:0] c_aux_0_0_reg_518_pp0_iter17_reg;
reg   [2:0] c_aux_0_1_reg_530;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state35_pp1_stage0_iter0;
wire    ap_block_state36_pp1_stage0_iter1;
wire    ap_block_state37_pp1_stage0_iter2;
wire    ap_block_state38_pp1_stage0_iter3;
wire    ap_block_state39_pp1_stage0_iter4;
wire    ap_block_state40_pp1_stage0_iter5;
wire    ap_block_state41_pp1_stage0_iter6;
wire    ap_block_state42_pp1_stage0_iter7;
wire    ap_block_state43_pp1_stage0_iter8;
wire    ap_block_state44_pp1_stage0_iter9;
wire    ap_block_state45_pp1_stage0_iter10;
wire    ap_block_state46_pp1_stage0_iter11;
wire    ap_block_state47_pp1_stage0_iter12;
wire    ap_block_state48_pp1_stage0_iter13;
wire    ap_block_state49_pp1_stage0_iter14;
wire    ap_block_state50_pp1_stage0_iter15;
wire    ap_block_state51_pp1_stage0_iter16;
wire    ap_block_state52_pp1_stage0_iter17;
wire    ap_block_state53_pp1_stage0_iter18;
wire    ap_block_pp1_stage0_11001;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter2_reg;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter3_reg;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter4_reg;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter5_reg;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter6_reg;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter7_reg;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter8_reg;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter9_reg;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter10_reg;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter11_reg;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter12_reg;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter13_reg;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter14_reg;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter15_reg;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter16_reg;
reg   [2:0] c_aux_0_1_reg_530_pp1_iter17_reg;
reg   [2:0] c_aux_0_2_reg_542;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter1_reg;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state61_pp2_stage0_iter0;
wire    ap_block_state62_pp2_stage0_iter1;
wire    ap_block_state63_pp2_stage0_iter2;
wire    ap_block_state64_pp2_stage0_iter3;
wire    ap_block_state65_pp2_stage0_iter4;
wire    ap_block_state66_pp2_stage0_iter5;
wire    ap_block_state67_pp2_stage0_iter6;
wire    ap_block_state68_pp2_stage0_iter7;
wire    ap_block_state69_pp2_stage0_iter8;
wire    ap_block_state70_pp2_stage0_iter9;
wire    ap_block_state71_pp2_stage0_iter10;
wire    ap_block_state72_pp2_stage0_iter11;
wire    ap_block_state73_pp2_stage0_iter12;
wire    ap_block_state74_pp2_stage0_iter13;
wire    ap_block_state75_pp2_stage0_iter14;
wire    ap_block_state76_pp2_stage0_iter15;
wire    ap_block_state77_pp2_stage0_iter16;
wire    ap_block_state78_pp2_stage0_iter17;
wire    ap_block_state79_pp2_stage0_iter18;
wire    ap_block_pp2_stage0_11001;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter2_reg;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter3_reg;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter4_reg;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter5_reg;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter6_reg;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter7_reg;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter8_reg;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter9_reg;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter10_reg;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter11_reg;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter12_reg;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter13_reg;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter14_reg;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter15_reg;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter16_reg;
reg   [2:0] c_aux_0_2_reg_542_pp2_iter17_reg;
reg   [2:0] c_aux_0_3_reg_554;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter1_reg;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state87_pp3_stage0_iter0;
wire    ap_block_state88_pp3_stage0_iter1;
wire    ap_block_state89_pp3_stage0_iter2;
wire    ap_block_state90_pp3_stage0_iter3;
wire    ap_block_state91_pp3_stage0_iter4;
wire    ap_block_state92_pp3_stage0_iter5;
wire    ap_block_state93_pp3_stage0_iter6;
wire    ap_block_state94_pp3_stage0_iter7;
wire    ap_block_state95_pp3_stage0_iter8;
wire    ap_block_state96_pp3_stage0_iter9;
wire    ap_block_state97_pp3_stage0_iter10;
wire    ap_block_state98_pp3_stage0_iter11;
wire    ap_block_state99_pp3_stage0_iter12;
wire    ap_block_state100_pp3_stage0_iter13;
wire    ap_block_state101_pp3_stage0_iter14;
wire    ap_block_state102_pp3_stage0_iter15;
wire    ap_block_state103_pp3_stage0_iter16;
wire    ap_block_state104_pp3_stage0_iter17;
wire    ap_block_state105_pp3_stage0_iter18;
wire    ap_block_pp3_stage0_11001;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter2_reg;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter3_reg;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter4_reg;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter5_reg;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter6_reg;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter7_reg;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter8_reg;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter9_reg;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter10_reg;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter11_reg;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter12_reg;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter13_reg;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter14_reg;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter15_reg;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter16_reg;
reg   [2:0] c_aux_0_3_reg_554_pp3_iter17_reg;
reg   [8:0] i_0_reg_566;
reg   [31:0] reg_625;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state55;
wire    ap_CS_fsm_state81;
wire    ap_CS_fsm_pp4_stage2;
reg    ap_enable_reg_pp4_iter0;
wire    ap_block_state109_pp4_stage2_iter0;
wire    ap_block_pp4_stage2_11001;
reg   [0:0] icmp_ln95_reg_1913;
reg   [31:0] reg_631;
reg   [31:0] reg_636;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state82;
reg   [31:0] reg_641;
reg   [31:0] reg_645;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state83;
reg   [31:0] reg_649;
reg   [31:0] reg_654;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state84;
reg   [31:0] reg_658;
reg   [31:0] reg_663;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state85;
reg   [31:0] reg_667;
reg   [31:0] reg_671;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state86;
reg   [31:0] reg_675;
wire   [31:0] grp_fu_601_p2;
reg   [31:0] reg_679;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln70_reg_1497;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter2_reg;
reg    ap_enable_reg_pp1_iter3;
reg   [0:0] icmp_ln70_1_reg_1616;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter2_reg;
reg    ap_enable_reg_pp2_iter3;
reg   [0:0] icmp_ln70_2_reg_1730;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter2_reg;
reg    ap_enable_reg_pp3_iter3;
reg   [0:0] icmp_ln70_3_reg_1849;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter2_reg;
wire   [31:0] grp_fu_605_p2;
reg   [31:0] reg_684;
wire   [31:0] grp_fu_609_p2;
reg   [31:0] reg_689;
reg    ap_enable_reg_pp0_iter7;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter6_reg;
reg    ap_enable_reg_pp1_iter7;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter6_reg;
reg    ap_enable_reg_pp2_iter7;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter6_reg;
reg    ap_enable_reg_pp3_iter7;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter6_reg;
wire   [31:0] grp_fu_613_p2;
reg   [31:0] reg_694;
wire   [31:0] grp_fu_577_p2;
reg   [31:0] reg_699;
reg    ap_enable_reg_pp0_iter8;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter7_reg;
reg    ap_enable_reg_pp1_iter8;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter7_reg;
reg    ap_enable_reg_pp2_iter8;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter7_reg;
reg    ap_enable_reg_pp3_iter8;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter7_reg;
wire   [31:0] grp_fu_581_p2;
reg   [31:0] reg_704;
wire   [31:0] grp_fu_585_p2;
reg   [31:0] reg_709;
reg    ap_enable_reg_pp0_iter12;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter11_reg;
reg    ap_enable_reg_pp1_iter12;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter11_reg;
reg    ap_enable_reg_pp2_iter12;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter11_reg;
reg    ap_enable_reg_pp3_iter12;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter11_reg;
wire   [31:0] grp_fu_617_p2;
reg   [31:0] reg_714;
wire   [31:0] grp_fu_589_p2;
reg   [31:0] reg_719;
wire   [31:0] grp_fu_621_p2;
reg   [31:0] reg_724;
wire   [31:0] grp_fu_593_p2;
reg   [31:0] reg_729;
reg    ap_enable_reg_pp0_iter17;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter16_reg;
reg    ap_enable_reg_pp1_iter17;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter16_reg;
reg    ap_enable_reg_pp2_iter17;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter16_reg;
reg    ap_enable_reg_pp3_iter17;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter16_reg;
wire   [31:0] grp_fu_597_p2;
reg   [31:0] reg_734;
wire   [0:0] tmp_37_fu_739_p3;
wire    ap_CS_fsm_state2;
wire   [9:0] empty_19_fu_747_p1;
reg   [9:0] empty_19_reg_1429;
wire   [63:0] zext_ln52_fu_757_p1;
reg   [63:0] zext_ln52_reg_1447;
reg   [9:0] Real_addr_2_reg_1457;
reg   [9:0] Imag_addr_reg_1462;
wire   [63:0] zext_ln53_fu_778_p1;
reg   [63:0] zext_ln53_reg_1467;
reg   [9:0] Real_addr_3_reg_1477;
reg   [9:0] Imag_addr_1_reg_1482;
wire   [0:0] icmp_ln70_fu_789_p2;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter1_reg;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter3_reg;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter4_reg;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter5_reg;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter8_reg;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter9_reg;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter10_reg;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter12_reg;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter13_reg;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter14_reg;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter15_reg;
reg   [0:0] icmp_ln70_reg_1497_pp0_iter17_reg;
wire   [2:0] add_ln70_fu_795_p2;
reg   [2:0] add_ln70_reg_1501;
reg    ap_enable_reg_pp0_iter0;
wire   [1:0] trunc_ln78_fu_801_p1;
reg   [1:0] trunc_ln78_reg_1506;
reg   [1:0] trunc_ln78_reg_1506_pp0_iter1_reg;
reg   [1:0] trunc_ln78_reg_1506_pp0_iter2_reg;
reg   [1:0] trunc_ln78_reg_1506_pp0_iter3_reg;
reg   [1:0] trunc_ln78_reg_1506_pp0_iter4_reg;
reg   [1:0] trunc_ln78_reg_1506_pp0_iter5_reg;
reg   [1:0] trunc_ln78_reg_1506_pp0_iter6_reg;
reg   [1:0] trunc_ln78_reg_1506_pp0_iter7_reg;
reg   [1:0] trunc_ln78_reg_1506_pp0_iter8_reg;
wire   [31:0] tmp_4_fu_805_p6;
reg   [31:0] tmp_4_reg_1512;
reg   [31:0] tmp_4_reg_1512_pp0_iter1_reg;
reg   [31:0] tmp_4_reg_1512_pp0_iter2_reg;
reg   [31:0] tmp_4_reg_1512_pp0_iter3_reg;
wire   [0:0] trunc_ln79_fu_821_p1;
reg   [0:0] trunc_ln79_reg_1520;
reg   [0:0] trunc_ln79_reg_1520_pp0_iter1_reg;
reg   [0:0] trunc_ln79_reg_1520_pp0_iter2_reg;
reg   [0:0] trunc_ln79_reg_1520_pp0_iter3_reg;
wire   [31:0] select_ln79_fu_825_p3;
wire   [31:0] select_ln85_fu_834_p3;
wire   [31:0] select_ln79_1_fu_843_p3;
wire   [31:0] select_ln85_1_fu_851_p3;
wire   [31:0] tmp_14_fu_859_p6;
wire   [31:0] tmp_20_fu_873_p6;
wire   [9:0] or_ln44_fu_911_p2;
reg   [9:0] or_ln44_reg_1556;
wire    ap_CS_fsm_state28;
wire   [63:0] zext_ln52_1_fu_921_p1;
reg   [63:0] zext_ln52_1_reg_1561;
reg   [9:0] Real_addr_8_reg_1571;
reg   [9:0] Imag_addr_6_reg_1576;
wire   [63:0] zext_ln53_1_fu_942_p1;
reg   [63:0] zext_ln53_1_reg_1581;
reg   [9:0] Real_addr_9_reg_1591;
reg   [9:0] Imag_addr_7_reg_1596;
wire   [10:0] zext_ln52_4_fu_953_p1;
reg   [10:0] zext_ln52_4_reg_1611;
wire   [0:0] icmp_ln70_1_fu_956_p2;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter1_reg;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter3_reg;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter4_reg;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter5_reg;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter8_reg;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter9_reg;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter10_reg;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter12_reg;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter13_reg;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter14_reg;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter15_reg;
reg   [0:0] icmp_ln70_1_reg_1616_pp1_iter17_reg;
wire   [2:0] add_ln70_1_fu_962_p2;
reg   [2:0] add_ln70_1_reg_1620;
reg    ap_enable_reg_pp1_iter0;
wire   [1:0] trunc_ln78_1_fu_968_p1;
reg   [1:0] trunc_ln78_1_reg_1625;
reg   [1:0] trunc_ln78_1_reg_1625_pp1_iter1_reg;
reg   [1:0] trunc_ln78_1_reg_1625_pp1_iter2_reg;
reg   [1:0] trunc_ln78_1_reg_1625_pp1_iter3_reg;
reg   [1:0] trunc_ln78_1_reg_1625_pp1_iter4_reg;
reg   [1:0] trunc_ln78_1_reg_1625_pp1_iter5_reg;
reg   [1:0] trunc_ln78_1_reg_1625_pp1_iter6_reg;
reg   [1:0] trunc_ln78_1_reg_1625_pp1_iter7_reg;
reg   [1:0] trunc_ln78_1_reg_1625_pp1_iter8_reg;
wire   [31:0] tmp_24_fu_972_p6;
reg   [31:0] tmp_24_reg_1631;
reg   [31:0] tmp_24_reg_1631_pp1_iter1_reg;
reg   [31:0] tmp_24_reg_1631_pp1_iter2_reg;
reg   [31:0] tmp_24_reg_1631_pp1_iter3_reg;
wire   [0:0] trunc_ln79_1_fu_988_p1;
reg   [0:0] trunc_ln79_1_reg_1639;
reg   [0:0] trunc_ln79_1_reg_1639_pp1_iter1_reg;
reg   [0:0] trunc_ln79_1_reg_1639_pp1_iter2_reg;
reg   [0:0] trunc_ln79_1_reg_1639_pp1_iter3_reg;
wire   [31:0] select_ln79_2_fu_992_p3;
wire   [31:0] select_ln85_2_fu_1001_p3;
wire   [31:0] select_ln79_3_fu_1010_p3;
wire   [31:0] select_ln85_3_fu_1018_p3;
wire   [31:0] tmp_26_fu_1026_p6;
wire   [31:0] tmp_28_fu_1040_p6;
wire   [9:0] or_ln44_1_fu_1069_p2;
reg   [9:0] or_ln44_1_reg_1675;
wire    ap_CS_fsm_state54;
wire   [63:0] zext_ln52_2_fu_1079_p1;
reg   [63:0] zext_ln52_2_reg_1680;
reg   [9:0] Real_addr_13_reg_1690;
reg   [9:0] Imag_addr_11_reg_1695;
wire   [63:0] zext_ln53_2_fu_1100_p1;
reg   [63:0] zext_ln53_2_reg_1700;
reg   [9:0] Real_addr_14_reg_1710;
reg   [9:0] Imag_addr_12_reg_1715;
wire   [0:0] icmp_ln70_2_fu_1111_p2;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter1_reg;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter3_reg;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter4_reg;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter5_reg;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter8_reg;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter9_reg;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter10_reg;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter12_reg;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter13_reg;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter14_reg;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter15_reg;
reg   [0:0] icmp_ln70_2_reg_1730_pp2_iter17_reg;
wire   [2:0] add_ln70_2_fu_1117_p2;
reg   [2:0] add_ln70_2_reg_1734;
reg    ap_enable_reg_pp2_iter0;
wire   [1:0] trunc_ln78_2_fu_1123_p1;
reg   [1:0] trunc_ln78_2_reg_1739;
reg   [1:0] trunc_ln78_2_reg_1739_pp2_iter1_reg;
reg   [1:0] trunc_ln78_2_reg_1739_pp2_iter2_reg;
reg   [1:0] trunc_ln78_2_reg_1739_pp2_iter3_reg;
reg   [1:0] trunc_ln78_2_reg_1739_pp2_iter4_reg;
reg   [1:0] trunc_ln78_2_reg_1739_pp2_iter5_reg;
reg   [1:0] trunc_ln78_2_reg_1739_pp2_iter6_reg;
reg   [1:0] trunc_ln78_2_reg_1739_pp2_iter7_reg;
reg   [1:0] trunc_ln78_2_reg_1739_pp2_iter8_reg;
wire   [31:0] tmp_29_fu_1127_p6;
reg   [31:0] tmp_29_reg_1745;
reg   [31:0] tmp_29_reg_1745_pp2_iter1_reg;
reg   [31:0] tmp_29_reg_1745_pp2_iter2_reg;
reg   [31:0] tmp_29_reg_1745_pp2_iter3_reg;
wire   [0:0] trunc_ln79_2_fu_1143_p1;
reg   [0:0] trunc_ln79_2_reg_1753;
reg   [0:0] trunc_ln79_2_reg_1753_pp2_iter1_reg;
reg   [0:0] trunc_ln79_2_reg_1753_pp2_iter2_reg;
reg   [0:0] trunc_ln79_2_reg_1753_pp2_iter3_reg;
wire   [31:0] select_ln79_4_fu_1147_p3;
wire   [31:0] select_ln85_4_fu_1156_p3;
wire   [31:0] select_ln79_5_fu_1165_p3;
wire   [31:0] select_ln85_5_fu_1173_p3;
wire   [31:0] tmp_30_fu_1181_p6;
wire   [31:0] tmp_31_fu_1195_p6;
wire   [9:0] or_ln44_2_fu_1232_p2;
reg   [9:0] or_ln44_2_reg_1789;
wire    ap_CS_fsm_state80;
wire   [63:0] zext_ln52_3_fu_1242_p1;
reg   [63:0] zext_ln52_3_reg_1794;
reg   [9:0] Real_addr_18_reg_1804;
reg   [9:0] Imag_addr_16_reg_1809;
wire   [63:0] zext_ln53_3_fu_1263_p1;
reg   [63:0] zext_ln53_3_reg_1814;
reg   [9:0] Real_addr_19_reg_1824;
reg   [9:0] Imag_addr_17_reg_1829;
wire   [10:0] zext_ln52_5_fu_1274_p1;
reg   [10:0] zext_ln52_5_reg_1844;
wire   [0:0] icmp_ln70_3_fu_1277_p2;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter1_reg;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter3_reg;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter4_reg;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter5_reg;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter8_reg;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter9_reg;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter10_reg;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter12_reg;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter13_reg;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter14_reg;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter15_reg;
reg   [0:0] icmp_ln70_3_reg_1849_pp3_iter17_reg;
wire   [2:0] add_ln70_3_fu_1283_p2;
reg   [2:0] add_ln70_3_reg_1853;
reg    ap_enable_reg_pp3_iter0;
wire   [1:0] trunc_ln78_3_fu_1289_p1;
reg   [1:0] trunc_ln78_3_reg_1858;
reg   [1:0] trunc_ln78_3_reg_1858_pp3_iter1_reg;
reg   [1:0] trunc_ln78_3_reg_1858_pp3_iter2_reg;
reg   [1:0] trunc_ln78_3_reg_1858_pp3_iter3_reg;
reg   [1:0] trunc_ln78_3_reg_1858_pp3_iter4_reg;
reg   [1:0] trunc_ln78_3_reg_1858_pp3_iter5_reg;
reg   [1:0] trunc_ln78_3_reg_1858_pp3_iter6_reg;
reg   [1:0] trunc_ln78_3_reg_1858_pp3_iter7_reg;
reg   [1:0] trunc_ln78_3_reg_1858_pp3_iter8_reg;
wire   [31:0] tmp_34_fu_1293_p6;
reg   [31:0] tmp_34_reg_1864;
reg   [31:0] tmp_34_reg_1864_pp3_iter1_reg;
reg   [31:0] tmp_34_reg_1864_pp3_iter2_reg;
reg   [31:0] tmp_34_reg_1864_pp3_iter3_reg;
wire   [0:0] trunc_ln79_3_fu_1309_p1;
reg   [0:0] trunc_ln79_3_reg_1872;
reg   [0:0] trunc_ln79_3_reg_1872_pp3_iter1_reg;
reg   [0:0] trunc_ln79_3_reg_1872_pp3_iter2_reg;
reg   [0:0] trunc_ln79_3_reg_1872_pp3_iter3_reg;
wire   [31:0] select_ln79_6_fu_1313_p3;
wire   [31:0] select_ln85_6_fu_1322_p3;
wire   [31:0] select_ln79_7_fu_1331_p3;
wire   [31:0] select_ln85_7_fu_1339_p3;
wire   [31:0] tmp_35_fu_1347_p6;
wire   [31:0] tmp_36_fu_1361_p6;
wire   [10:0] add_ln44_fu_1390_p2;
wire    ap_CS_fsm_state106;
wire   [0:0] icmp_ln95_fu_1396_p2;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state107_pp4_stage0_iter0;
wire    ap_block_state111_pp4_stage0_iter1;
wire    ap_block_pp4_stage0_11001;
wire   [8:0] i_fu_1402_p2;
reg   [8:0] i_reg_1917;
reg   [9:0] indexJ_reg_1932;
wire    ap_CS_fsm_pp4_stage1;
wire    ap_block_state108_pp4_stage1_iter0;
wire    ap_block_pp4_stage1_11001;
reg   [9:0] Real_addr_4_reg_1937;
reg   [9:0] Imag_addr_4_reg_1942;
reg   [9:0] Real_addr_5_reg_1947;
reg   [9:0] Imag_addr_5_reg_1952;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter18;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state35;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter13;
reg    ap_enable_reg_pp1_iter14;
reg    ap_enable_reg_pp1_iter15;
reg    ap_enable_reg_pp1_iter16;
reg    ap_enable_reg_pp1_iter18;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state61;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter13;
reg    ap_enable_reg_pp2_iter14;
reg    ap_enable_reg_pp2_iter15;
reg    ap_enable_reg_pp2_iter16;
reg    ap_enable_reg_pp2_iter18;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state87;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter9;
reg    ap_enable_reg_pp3_iter10;
reg    ap_enable_reg_pp3_iter11;
reg    ap_enable_reg_pp3_iter13;
reg    ap_enable_reg_pp3_iter14;
reg    ap_enable_reg_pp3_iter15;
reg    ap_enable_reg_pp3_iter16;
reg    ap_enable_reg_pp3_iter18;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state107;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_state110_pp4_stage3_iter0;
wire    ap_block_pp4_stage3_subdone;
wire    ap_CS_fsm_pp4_stage3;
reg   [10:0] c_0_0_reg_506;
reg   [2:0] ap_phi_mux_c_aux_0_0_phi_fu_522_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_c_aux_0_1_phi_fu_534_p4;
wire    ap_block_pp1_stage0;
reg   [2:0] ap_phi_mux_c_aux_0_2_phi_fu_546_p4;
wire    ap_block_pp2_stage0;
reg   [2:0] ap_phi_mux_c_aux_0_3_phi_fu_558_p4;
wire    ap_block_pp3_stage0;
reg   [8:0] ap_phi_mux_i_0_phi_fu_570_p4;
wire    ap_block_pp4_stage0;
wire   [63:0] zext_ln54_fu_762_p1;
wire   [63:0] zext_ln56_fu_783_p1;
wire   [63:0] zext_ln88_fu_905_p1;
wire   [63:0] zext_ln54_1_fu_926_p1;
wire   [63:0] zext_ln56_1_fu_947_p1;
wire   [63:0] zext_ln88_1_fu_1063_p1;
wire   [63:0] zext_ln54_2_fu_1084_p1;
wire   [63:0] zext_ln56_2_fu_1105_p1;
wire   [63:0] zext_ln88_2_fu_1226_p1;
wire   [63:0] zext_ln54_3_fu_1247_p1;
wire   [63:0] zext_ln56_3_fu_1268_p1;
wire   [63:0] zext_ln88_3_fu_1384_p1;
wire   [63:0] zext_ln99_fu_1408_p1;
wire   [63:0] zext_ln102_fu_1414_p1;
wire    ap_block_pp4_stage1;
wire   [63:0] zext_ln104_fu_1420_p1;
wire    ap_block_pp4_stage2;
reg   [31:0] Real_r_Addr_A_orig;
wire    ap_block_pp4_stage3_11001;
wire    ap_block_pp4_stage3;
reg   [31:0] Imag_Addr_A_orig;
reg   [31:0] grp_fu_577_p1;
reg   [31:0] grp_fu_581_p1;
reg   [31:0] grp_fu_601_p0;
reg   [31:0] grp_fu_601_p1;
reg   [31:0] grp_fu_605_p0;
reg   [31:0] grp_fu_605_p1;
reg   [31:0] grp_fu_609_p0;
reg   [31:0] grp_fu_613_p0;
reg   [31:0] grp_fu_617_p0;
reg   [31:0] grp_fu_621_p0;
wire   [9:0] or_ln48_fu_751_p2;
wire   [9:0] or_ln49_fu_768_p2;
wire   [9:0] or_ln50_fu_773_p2;
wire   [1:0] tmp_4_fu_805_p5;
wire   [7:0] tmp_23_fu_887_p4;
wire   [10:0] add_ln_fu_897_p3;
wire   [9:0] or_ln48_1_fu_916_p2;
wire   [9:0] or_ln49_1_fu_932_p2;
wire   [9:0] or_ln50_1_fu_937_p2;
wire   [1:0] tmp_24_fu_972_p5;
wire   [10:0] zext_ln78_fu_1054_p1;
wire   [10:0] add_ln88_fu_1058_p2;
wire   [9:0] or_ln48_2_fu_1074_p2;
wire   [9:0] or_ln49_2_fu_1090_p2;
wire   [9:0] or_ln50_2_fu_1095_p2;
wire   [1:0] tmp_29_fu_1127_p5;
wire   [6:0] tmp_32_fu_1209_p4;
wire   [9:0] tmp_33_fu_1218_p3;
wire   [9:0] or_ln48_3_fu_1237_p2;
wire   [9:0] or_ln49_3_fu_1253_p2;
wire   [9:0] or_ln50_3_fu_1258_p2;
wire   [1:0] tmp_34_fu_1293_p5;
wire   [10:0] zext_ln78_1_fu_1375_p1;
wire   [10:0] add_ln88_1_fu_1379_p2;
wire    ap_CS_fsm_state112;
reg   [38:0] ap_NS_fsm;
wire    ap_block_pp4_stage1_subdone;
wire    ap_block_pp4_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;

// power-on initialization
initial begin
#0 ap_CS_fsm = 39'd1;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp3_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp3_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp1_iter17 = 1'b0;
#0 ap_enable_reg_pp2_iter17 = 1'b0;
#0 ap_enable_reg_pp3_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp1_iter18 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp2_iter14 = 1'b0;
#0 ap_enable_reg_pp2_iter15 = 1'b0;
#0 ap_enable_reg_pp2_iter16 = 1'b0;
#0 ap_enable_reg_pp2_iter18 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter9 = 1'b0;
#0 ap_enable_reg_pp3_iter10 = 1'b0;
#0 ap_enable_reg_pp3_iter11 = 1'b0;
#0 ap_enable_reg_pp3_iter13 = 1'b0;
#0 ap_enable_reg_pp3_iter14 = 1'b0;
#0 ap_enable_reg_pp3_iter15 = 1'b0;
#0 ap_enable_reg_pp3_iter16 = 1'b0;
#0 ap_enable_reg_pp3_iter18 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
end

Reorder_fft_lut_rbkb #(
    .DataWidth( 10 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
lut_reorder_I_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lut_reorder_I_address0),
    .ce0(lut_reorder_I_ce0),
    .q0(lut_reorder_I_q0)
);

Reorder_fft_lut_rcud #(
    .DataWidth( 10 ),
    .AddressRange( 480 ),
    .AddressWidth( 9 ))
lut_reorder_J_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(lut_reorder_J_address0),
    .ce0(lut_reorder_J_ce0),
    .q0(lut_reorder_J_q0)
);

Reorder_fft_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
Reorder_fft_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_679),
    .din1(grp_fu_577_p1),
    .ce(1'b1),
    .dout(grp_fu_577_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_684),
    .din1(grp_fu_581_p1),
    .ce(1'b1),
    .dout(grp_fu_581_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_689),
    .din1(reg_625),
    .ce(1'b1),
    .dout(grp_fu_585_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_694),
    .din1(reg_649),
    .ce(1'b1),
    .dout(grp_fu_589_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_714),
    .din1(reg_709),
    .ce(1'b1),
    .dout(grp_fu_593_p2)
);

Reorder_fft_fadd_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fadd_dEe_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_724),
    .din1(reg_719),
    .ce(1'b1),
    .dout(grp_fu_597_p2)
);

Reorder_fft_fmul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fmul_eOg_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_601_p0),
    .din1(grp_fu_601_p1),
    .ce(1'b1),
    .dout(grp_fu_601_p2)
);

Reorder_fft_fmul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fmul_eOg_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_605_p0),
    .din1(grp_fu_605_p1),
    .ce(1'b1),
    .dout(grp_fu_605_p2)
);

Reorder_fft_fmul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fmul_eOg_U9(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_609_p0),
    .din1(reg_636),
    .ce(1'b1),
    .dout(grp_fu_609_p2)
);

Reorder_fft_fmul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fmul_eOg_U10(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_613_p0),
    .din1(reg_658),
    .ce(1'b1),
    .dout(grp_fu_613_p2)
);

Reorder_fft_fmul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fmul_eOg_U11(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_617_p0),
    .din1(reg_699),
    .ce(1'b1),
    .dout(grp_fu_617_p2)
);

Reorder_fft_fmul_eOg #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Reorder_fft_fmul_eOg_U12(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_621_p0),
    .din1(reg_704),
    .ce(1'b1),
    .dout(grp_fu_621_p2)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U13(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd1065353216),
    .din3(32'd3212836864),
    .din4(tmp_4_fu_805_p5),
    .dout(tmp_4_fu_805_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U14(
    .din0(32'd1065353216),
    .din1(32'd1065353216),
    .din2(32'd3212836864),
    .din3(32'd3212836864),
    .din4(trunc_ln78_reg_1506_pp0_iter8_reg),
    .dout(tmp_14_fu_859_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U15(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd3212836864),
    .din3(32'd1065353216),
    .din4(trunc_ln78_reg_1506_pp0_iter8_reg),
    .dout(tmp_20_fu_873_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U16(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd1065353216),
    .din3(32'd3212836864),
    .din4(tmp_24_fu_972_p5),
    .dout(tmp_24_fu_972_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U17(
    .din0(32'd1065353216),
    .din1(32'd1065353216),
    .din2(32'd3212836864),
    .din3(32'd3212836864),
    .din4(trunc_ln78_1_reg_1625_pp1_iter8_reg),
    .dout(tmp_26_fu_1026_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U18(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd3212836864),
    .din3(32'd1065353216),
    .din4(trunc_ln78_1_reg_1625_pp1_iter8_reg),
    .dout(tmp_28_fu_1040_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U19(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd1065353216),
    .din3(32'd3212836864),
    .din4(tmp_29_fu_1127_p5),
    .dout(tmp_29_fu_1127_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U20(
    .din0(32'd1065353216),
    .din1(32'd1065353216),
    .din2(32'd3212836864),
    .din3(32'd3212836864),
    .din4(trunc_ln78_2_reg_1739_pp2_iter8_reg),
    .dout(tmp_30_fu_1181_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U21(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd3212836864),
    .din3(32'd1065353216),
    .din4(trunc_ln78_2_reg_1739_pp2_iter8_reg),
    .dout(tmp_31_fu_1195_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U22(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd1065353216),
    .din3(32'd3212836864),
    .din4(tmp_34_fu_1293_p5),
    .dout(tmp_34_fu_1293_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U23(
    .din0(32'd1065353216),
    .din1(32'd1065353216),
    .din2(32'd3212836864),
    .din3(32'd3212836864),
    .din4(trunc_ln78_3_reg_1858_pp3_iter8_reg),
    .dout(tmp_35_fu_1347_p6)
);

Reorder_fft_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
Reorder_fft_mux_4fYi_U24(
    .din0(32'd1065353216),
    .din1(32'd3212836864),
    .din2(32'd3212836864),
    .din3(32'd1065353216),
    .din4(trunc_ln78_3_reg_1858_pp3_iter8_reg),
    .dout(tmp_36_fu_1361_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state35) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state34)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state35)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state35);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
        end else if ((1'b1 == ap_CS_fsm_state34)) begin
            ap_enable_reg_pp1_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state61) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state60)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state61)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state61);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
        end else if ((1'b1 == ap_CS_fsm_state60)) begin
            ap_enable_reg_pp2_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state87) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state86)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state87)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state87);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter10 <= ap_enable_reg_pp3_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter11 <= ap_enable_reg_pp3_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter12 <= ap_enable_reg_pp3_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter13 <= ap_enable_reg_pp3_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter14 <= ap_enable_reg_pp3_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter15 <= ap_enable_reg_pp3_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter16 <= ap_enable_reg_pp3_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter17 <= ap_enable_reg_pp3_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter18 <= ap_enable_reg_pp3_iter17;
        end else if ((1'b1 == ap_CS_fsm_state86)) begin
            ap_enable_reg_pp3_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter9 <= ap_enable_reg_pp3_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp4_exit_iter0_state107) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((tmp_37_fu_739_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_subdone)) | ((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
            ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
        end else if (((tmp_37_fu_739_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp4_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state106)) begin
        c_0_0_reg_506 <= add_ln44_fu_1390_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        c_0_0_reg_506 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln70_reg_1497 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_aux_0_0_reg_518 <= add_ln70_reg_1501;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        c_aux_0_0_reg_518 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln70_1_reg_1616 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1))) begin
        c_aux_0_1_reg_530 <= add_ln70_1_reg_1620;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        c_aux_0_1_reg_530 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln70_2_reg_1730 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1))) begin
        c_aux_0_2_reg_542 <= add_ln70_2_reg_1734;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        c_aux_0_2_reg_542 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln70_3_reg_1849 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1))) begin
        c_aux_0_3_reg_554 <= add_ln70_3_reg_1853;
    end else if ((1'b1 == ap_CS_fsm_state86)) begin
        c_aux_0_3_reg_554 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_37_fu_739_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_566 <= 9'd0;
    end else if (((icmp_ln95_reg_1913 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        i_0_reg_566 <= i_reg_1917;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        Imag_addr_11_reg_1695[2 : 1] <= zext_ln54_2_fu_1084_p1[2 : 1];
Imag_addr_11_reg_1695[9 : 4] <= zext_ln54_2_fu_1084_p1[9 : 4];
        Real_addr_13_reg_1690[2 : 1] <= zext_ln54_2_fu_1084_p1[2 : 1];
Real_addr_13_reg_1690[9 : 4] <= zext_ln54_2_fu_1084_p1[9 : 4];
        or_ln44_1_reg_1675[2 : 0] <= or_ln44_1_fu_1069_p2[2 : 0];
or_ln44_1_reg_1675[9 : 4] <= or_ln44_1_fu_1069_p2[9 : 4];
        zext_ln52_2_reg_1680[2 : 0] <= zext_ln52_2_fu_1079_p1[2 : 0];
zext_ln52_2_reg_1680[9 : 4] <= zext_ln52_2_fu_1079_p1[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        Imag_addr_12_reg_1715[2] <= zext_ln56_2_fu_1105_p1[2];
Imag_addr_12_reg_1715[9 : 4] <= zext_ln56_2_fu_1105_p1[9 : 4];
        Real_addr_14_reg_1710[2] <= zext_ln56_2_fu_1105_p1[2];
Real_addr_14_reg_1710[9 : 4] <= zext_ln56_2_fu_1105_p1[9 : 4];
        zext_ln53_2_reg_1700[0] <= zext_ln53_2_fu_1100_p1[0];
zext_ln53_2_reg_1700[2] <= zext_ln53_2_fu_1100_p1[2];
zext_ln53_2_reg_1700[9 : 4] <= zext_ln53_2_fu_1100_p1[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        Imag_addr_16_reg_1809[1] <= zext_ln54_3_fu_1247_p1[1];
Imag_addr_16_reg_1809[9 : 4] <= zext_ln54_3_fu_1247_p1[9 : 4];
        Real_addr_18_reg_1804[1] <= zext_ln54_3_fu_1247_p1[1];
Real_addr_18_reg_1804[9 : 4] <= zext_ln54_3_fu_1247_p1[9 : 4];
        or_ln44_2_reg_1789[1 : 0] <= or_ln44_2_fu_1232_p2[1 : 0];
or_ln44_2_reg_1789[9 : 4] <= or_ln44_2_fu_1232_p2[9 : 4];
        zext_ln52_3_reg_1794[1 : 0] <= zext_ln52_3_fu_1242_p1[1 : 0];
zext_ln52_3_reg_1794[9 : 4] <= zext_ln52_3_fu_1242_p1[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        Imag_addr_17_reg_1829[9 : 4] <= zext_ln56_3_fu_1268_p1[9 : 4];
        Real_addr_19_reg_1824[9 : 4] <= zext_ln56_3_fu_1268_p1[9 : 4];
        zext_ln53_3_reg_1814[0] <= zext_ln53_3_fu_1263_p1[0];
zext_ln53_3_reg_1814[9 : 4] <= zext_ln53_3_fu_1263_p1[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Imag_addr_1_reg_1482[9 : 2] <= zext_ln56_fu_783_p1[9 : 2];
        Real_addr_3_reg_1477[9 : 2] <= zext_ln56_fu_783_p1[9 : 2];
        zext_ln53_reg_1467[0] <= zext_ln53_fu_778_p1[0];
zext_ln53_reg_1467[9 : 2] <= zext_ln53_fu_778_p1[9 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_reg_1913 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_11001))) begin
        Imag_addr_4_reg_1942 <= zext_ln102_fu_1414_p1;
        Real_addr_4_reg_1937 <= zext_ln102_fu_1414_p1;
        indexJ_reg_1932 <= lut_reorder_J_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_reg_1913 == 1'd0) & (1'b0 == ap_block_pp4_stage2_11001) & (1'b1 == ap_CS_fsm_pp4_stage2))) begin
        Imag_addr_5_reg_1952 <= zext_ln104_fu_1420_p1;
        Real_addr_5_reg_1947 <= zext_ln104_fu_1420_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        Imag_addr_6_reg_1576[1] <= zext_ln54_1_fu_926_p1[1];
Imag_addr_6_reg_1576[9 : 3] <= zext_ln54_1_fu_926_p1[9 : 3];
        Real_addr_8_reg_1571[1] <= zext_ln54_1_fu_926_p1[1];
Real_addr_8_reg_1571[9 : 3] <= zext_ln54_1_fu_926_p1[9 : 3];
        or_ln44_reg_1556[1 : 0] <= or_ln44_fu_911_p2[1 : 0];
or_ln44_reg_1556[9 : 3] <= or_ln44_fu_911_p2[9 : 3];
        zext_ln52_1_reg_1561[1 : 0] <= zext_ln52_1_fu_921_p1[1 : 0];
zext_ln52_1_reg_1561[9 : 3] <= zext_ln52_1_fu_921_p1[9 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        Imag_addr_7_reg_1596[9 : 3] <= zext_ln56_1_fu_947_p1[9 : 3];
        Real_addr_9_reg_1591[9 : 3] <= zext_ln56_1_fu_947_p1[9 : 3];
        zext_ln53_1_reg_1581[0] <= zext_ln53_1_fu_942_p1[0];
zext_ln53_1_reg_1581[9 : 3] <= zext_ln53_1_fu_942_p1[9 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_37_fu_739_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        Imag_addr_reg_1462[9 : 1] <= zext_ln54_fu_762_p1[9 : 1];
        Real_addr_2_reg_1457[9 : 1] <= zext_ln54_fu_762_p1[9 : 1];
        empty_19_reg_1429 <= empty_19_fu_747_p1;
        zext_ln52_reg_1447[10 : 0] <= zext_ln52_fu_757_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln70_1_reg_1620 <= add_ln70_1_fu_962_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        add_ln70_2_reg_1734 <= add_ln70_2_fu_1117_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        add_ln70_3_reg_1853 <= add_ln70_3_fu_1283_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln70_reg_1501 <= add_ln70_fu_795_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        c_aux_0_0_reg_518_pp0_iter10_reg <= c_aux_0_0_reg_518_pp0_iter9_reg;
        c_aux_0_0_reg_518_pp0_iter11_reg <= c_aux_0_0_reg_518_pp0_iter10_reg;
        c_aux_0_0_reg_518_pp0_iter12_reg <= c_aux_0_0_reg_518_pp0_iter11_reg;
        c_aux_0_0_reg_518_pp0_iter13_reg <= c_aux_0_0_reg_518_pp0_iter12_reg;
        c_aux_0_0_reg_518_pp0_iter14_reg <= c_aux_0_0_reg_518_pp0_iter13_reg;
        c_aux_0_0_reg_518_pp0_iter15_reg <= c_aux_0_0_reg_518_pp0_iter14_reg;
        c_aux_0_0_reg_518_pp0_iter16_reg <= c_aux_0_0_reg_518_pp0_iter15_reg;
        c_aux_0_0_reg_518_pp0_iter17_reg <= c_aux_0_0_reg_518_pp0_iter16_reg;
        c_aux_0_0_reg_518_pp0_iter2_reg <= c_aux_0_0_reg_518_pp0_iter1_reg;
        c_aux_0_0_reg_518_pp0_iter3_reg <= c_aux_0_0_reg_518_pp0_iter2_reg;
        c_aux_0_0_reg_518_pp0_iter4_reg <= c_aux_0_0_reg_518_pp0_iter3_reg;
        c_aux_0_0_reg_518_pp0_iter5_reg <= c_aux_0_0_reg_518_pp0_iter4_reg;
        c_aux_0_0_reg_518_pp0_iter6_reg <= c_aux_0_0_reg_518_pp0_iter5_reg;
        c_aux_0_0_reg_518_pp0_iter7_reg <= c_aux_0_0_reg_518_pp0_iter6_reg;
        c_aux_0_0_reg_518_pp0_iter8_reg <= c_aux_0_0_reg_518_pp0_iter7_reg;
        c_aux_0_0_reg_518_pp0_iter9_reg <= c_aux_0_0_reg_518_pp0_iter8_reg;
        icmp_ln70_reg_1497_pp0_iter10_reg <= icmp_ln70_reg_1497_pp0_iter9_reg;
        icmp_ln70_reg_1497_pp0_iter11_reg <= icmp_ln70_reg_1497_pp0_iter10_reg;
        icmp_ln70_reg_1497_pp0_iter12_reg <= icmp_ln70_reg_1497_pp0_iter11_reg;
        icmp_ln70_reg_1497_pp0_iter13_reg <= icmp_ln70_reg_1497_pp0_iter12_reg;
        icmp_ln70_reg_1497_pp0_iter14_reg <= icmp_ln70_reg_1497_pp0_iter13_reg;
        icmp_ln70_reg_1497_pp0_iter15_reg <= icmp_ln70_reg_1497_pp0_iter14_reg;
        icmp_ln70_reg_1497_pp0_iter16_reg <= icmp_ln70_reg_1497_pp0_iter15_reg;
        icmp_ln70_reg_1497_pp0_iter17_reg <= icmp_ln70_reg_1497_pp0_iter16_reg;
        icmp_ln70_reg_1497_pp0_iter2_reg <= icmp_ln70_reg_1497_pp0_iter1_reg;
        icmp_ln70_reg_1497_pp0_iter3_reg <= icmp_ln70_reg_1497_pp0_iter2_reg;
        icmp_ln70_reg_1497_pp0_iter4_reg <= icmp_ln70_reg_1497_pp0_iter3_reg;
        icmp_ln70_reg_1497_pp0_iter5_reg <= icmp_ln70_reg_1497_pp0_iter4_reg;
        icmp_ln70_reg_1497_pp0_iter6_reg <= icmp_ln70_reg_1497_pp0_iter5_reg;
        icmp_ln70_reg_1497_pp0_iter7_reg <= icmp_ln70_reg_1497_pp0_iter6_reg;
        icmp_ln70_reg_1497_pp0_iter8_reg <= icmp_ln70_reg_1497_pp0_iter7_reg;
        icmp_ln70_reg_1497_pp0_iter9_reg <= icmp_ln70_reg_1497_pp0_iter8_reg;
        tmp_4_reg_1512_pp0_iter2_reg <= tmp_4_reg_1512_pp0_iter1_reg;
        tmp_4_reg_1512_pp0_iter3_reg <= tmp_4_reg_1512_pp0_iter2_reg;
        trunc_ln78_reg_1506_pp0_iter2_reg <= trunc_ln78_reg_1506_pp0_iter1_reg;
        trunc_ln78_reg_1506_pp0_iter3_reg <= trunc_ln78_reg_1506_pp0_iter2_reg;
        trunc_ln78_reg_1506_pp0_iter4_reg <= trunc_ln78_reg_1506_pp0_iter3_reg;
        trunc_ln78_reg_1506_pp0_iter5_reg <= trunc_ln78_reg_1506_pp0_iter4_reg;
        trunc_ln78_reg_1506_pp0_iter6_reg <= trunc_ln78_reg_1506_pp0_iter5_reg;
        trunc_ln78_reg_1506_pp0_iter7_reg <= trunc_ln78_reg_1506_pp0_iter6_reg;
        trunc_ln78_reg_1506_pp0_iter8_reg <= trunc_ln78_reg_1506_pp0_iter7_reg;
        trunc_ln79_reg_1520_pp0_iter2_reg <= trunc_ln79_reg_1520_pp0_iter1_reg;
        trunc_ln79_reg_1520_pp0_iter3_reg <= trunc_ln79_reg_1520_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        c_aux_0_0_reg_518_pp0_iter1_reg <= c_aux_0_0_reg_518;
        icmp_ln70_reg_1497 <= icmp_ln70_fu_789_p2;
        icmp_ln70_reg_1497_pp0_iter1_reg <= icmp_ln70_reg_1497;
        tmp_4_reg_1512_pp0_iter1_reg <= tmp_4_reg_1512;
        trunc_ln78_reg_1506_pp0_iter1_reg <= trunc_ln78_reg_1506;
        trunc_ln79_reg_1520_pp0_iter1_reg <= trunc_ln79_reg_1520;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        c_aux_0_1_reg_530_pp1_iter10_reg <= c_aux_0_1_reg_530_pp1_iter9_reg;
        c_aux_0_1_reg_530_pp1_iter11_reg <= c_aux_0_1_reg_530_pp1_iter10_reg;
        c_aux_0_1_reg_530_pp1_iter12_reg <= c_aux_0_1_reg_530_pp1_iter11_reg;
        c_aux_0_1_reg_530_pp1_iter13_reg <= c_aux_0_1_reg_530_pp1_iter12_reg;
        c_aux_0_1_reg_530_pp1_iter14_reg <= c_aux_0_1_reg_530_pp1_iter13_reg;
        c_aux_0_1_reg_530_pp1_iter15_reg <= c_aux_0_1_reg_530_pp1_iter14_reg;
        c_aux_0_1_reg_530_pp1_iter16_reg <= c_aux_0_1_reg_530_pp1_iter15_reg;
        c_aux_0_1_reg_530_pp1_iter17_reg <= c_aux_0_1_reg_530_pp1_iter16_reg;
        c_aux_0_1_reg_530_pp1_iter2_reg <= c_aux_0_1_reg_530_pp1_iter1_reg;
        c_aux_0_1_reg_530_pp1_iter3_reg <= c_aux_0_1_reg_530_pp1_iter2_reg;
        c_aux_0_1_reg_530_pp1_iter4_reg <= c_aux_0_1_reg_530_pp1_iter3_reg;
        c_aux_0_1_reg_530_pp1_iter5_reg <= c_aux_0_1_reg_530_pp1_iter4_reg;
        c_aux_0_1_reg_530_pp1_iter6_reg <= c_aux_0_1_reg_530_pp1_iter5_reg;
        c_aux_0_1_reg_530_pp1_iter7_reg <= c_aux_0_1_reg_530_pp1_iter6_reg;
        c_aux_0_1_reg_530_pp1_iter8_reg <= c_aux_0_1_reg_530_pp1_iter7_reg;
        c_aux_0_1_reg_530_pp1_iter9_reg <= c_aux_0_1_reg_530_pp1_iter8_reg;
        icmp_ln70_1_reg_1616_pp1_iter10_reg <= icmp_ln70_1_reg_1616_pp1_iter9_reg;
        icmp_ln70_1_reg_1616_pp1_iter11_reg <= icmp_ln70_1_reg_1616_pp1_iter10_reg;
        icmp_ln70_1_reg_1616_pp1_iter12_reg <= icmp_ln70_1_reg_1616_pp1_iter11_reg;
        icmp_ln70_1_reg_1616_pp1_iter13_reg <= icmp_ln70_1_reg_1616_pp1_iter12_reg;
        icmp_ln70_1_reg_1616_pp1_iter14_reg <= icmp_ln70_1_reg_1616_pp1_iter13_reg;
        icmp_ln70_1_reg_1616_pp1_iter15_reg <= icmp_ln70_1_reg_1616_pp1_iter14_reg;
        icmp_ln70_1_reg_1616_pp1_iter16_reg <= icmp_ln70_1_reg_1616_pp1_iter15_reg;
        icmp_ln70_1_reg_1616_pp1_iter17_reg <= icmp_ln70_1_reg_1616_pp1_iter16_reg;
        icmp_ln70_1_reg_1616_pp1_iter2_reg <= icmp_ln70_1_reg_1616_pp1_iter1_reg;
        icmp_ln70_1_reg_1616_pp1_iter3_reg <= icmp_ln70_1_reg_1616_pp1_iter2_reg;
        icmp_ln70_1_reg_1616_pp1_iter4_reg <= icmp_ln70_1_reg_1616_pp1_iter3_reg;
        icmp_ln70_1_reg_1616_pp1_iter5_reg <= icmp_ln70_1_reg_1616_pp1_iter4_reg;
        icmp_ln70_1_reg_1616_pp1_iter6_reg <= icmp_ln70_1_reg_1616_pp1_iter5_reg;
        icmp_ln70_1_reg_1616_pp1_iter7_reg <= icmp_ln70_1_reg_1616_pp1_iter6_reg;
        icmp_ln70_1_reg_1616_pp1_iter8_reg <= icmp_ln70_1_reg_1616_pp1_iter7_reg;
        icmp_ln70_1_reg_1616_pp1_iter9_reg <= icmp_ln70_1_reg_1616_pp1_iter8_reg;
        tmp_24_reg_1631_pp1_iter2_reg <= tmp_24_reg_1631_pp1_iter1_reg;
        tmp_24_reg_1631_pp1_iter3_reg <= tmp_24_reg_1631_pp1_iter2_reg;
        trunc_ln78_1_reg_1625_pp1_iter2_reg <= trunc_ln78_1_reg_1625_pp1_iter1_reg;
        trunc_ln78_1_reg_1625_pp1_iter3_reg <= trunc_ln78_1_reg_1625_pp1_iter2_reg;
        trunc_ln78_1_reg_1625_pp1_iter4_reg <= trunc_ln78_1_reg_1625_pp1_iter3_reg;
        trunc_ln78_1_reg_1625_pp1_iter5_reg <= trunc_ln78_1_reg_1625_pp1_iter4_reg;
        trunc_ln78_1_reg_1625_pp1_iter6_reg <= trunc_ln78_1_reg_1625_pp1_iter5_reg;
        trunc_ln78_1_reg_1625_pp1_iter7_reg <= trunc_ln78_1_reg_1625_pp1_iter6_reg;
        trunc_ln78_1_reg_1625_pp1_iter8_reg <= trunc_ln78_1_reg_1625_pp1_iter7_reg;
        trunc_ln79_1_reg_1639_pp1_iter2_reg <= trunc_ln79_1_reg_1639_pp1_iter1_reg;
        trunc_ln79_1_reg_1639_pp1_iter3_reg <= trunc_ln79_1_reg_1639_pp1_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        c_aux_0_1_reg_530_pp1_iter1_reg <= c_aux_0_1_reg_530;
        icmp_ln70_1_reg_1616 <= icmp_ln70_1_fu_956_p2;
        icmp_ln70_1_reg_1616_pp1_iter1_reg <= icmp_ln70_1_reg_1616;
        tmp_24_reg_1631_pp1_iter1_reg <= tmp_24_reg_1631;
        trunc_ln78_1_reg_1625_pp1_iter1_reg <= trunc_ln78_1_reg_1625;
        trunc_ln79_1_reg_1639_pp1_iter1_reg <= trunc_ln79_1_reg_1639;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        c_aux_0_2_reg_542_pp2_iter10_reg <= c_aux_0_2_reg_542_pp2_iter9_reg;
        c_aux_0_2_reg_542_pp2_iter11_reg <= c_aux_0_2_reg_542_pp2_iter10_reg;
        c_aux_0_2_reg_542_pp2_iter12_reg <= c_aux_0_2_reg_542_pp2_iter11_reg;
        c_aux_0_2_reg_542_pp2_iter13_reg <= c_aux_0_2_reg_542_pp2_iter12_reg;
        c_aux_0_2_reg_542_pp2_iter14_reg <= c_aux_0_2_reg_542_pp2_iter13_reg;
        c_aux_0_2_reg_542_pp2_iter15_reg <= c_aux_0_2_reg_542_pp2_iter14_reg;
        c_aux_0_2_reg_542_pp2_iter16_reg <= c_aux_0_2_reg_542_pp2_iter15_reg;
        c_aux_0_2_reg_542_pp2_iter17_reg <= c_aux_0_2_reg_542_pp2_iter16_reg;
        c_aux_0_2_reg_542_pp2_iter2_reg <= c_aux_0_2_reg_542_pp2_iter1_reg;
        c_aux_0_2_reg_542_pp2_iter3_reg <= c_aux_0_2_reg_542_pp2_iter2_reg;
        c_aux_0_2_reg_542_pp2_iter4_reg <= c_aux_0_2_reg_542_pp2_iter3_reg;
        c_aux_0_2_reg_542_pp2_iter5_reg <= c_aux_0_2_reg_542_pp2_iter4_reg;
        c_aux_0_2_reg_542_pp2_iter6_reg <= c_aux_0_2_reg_542_pp2_iter5_reg;
        c_aux_0_2_reg_542_pp2_iter7_reg <= c_aux_0_2_reg_542_pp2_iter6_reg;
        c_aux_0_2_reg_542_pp2_iter8_reg <= c_aux_0_2_reg_542_pp2_iter7_reg;
        c_aux_0_2_reg_542_pp2_iter9_reg <= c_aux_0_2_reg_542_pp2_iter8_reg;
        icmp_ln70_2_reg_1730_pp2_iter10_reg <= icmp_ln70_2_reg_1730_pp2_iter9_reg;
        icmp_ln70_2_reg_1730_pp2_iter11_reg <= icmp_ln70_2_reg_1730_pp2_iter10_reg;
        icmp_ln70_2_reg_1730_pp2_iter12_reg <= icmp_ln70_2_reg_1730_pp2_iter11_reg;
        icmp_ln70_2_reg_1730_pp2_iter13_reg <= icmp_ln70_2_reg_1730_pp2_iter12_reg;
        icmp_ln70_2_reg_1730_pp2_iter14_reg <= icmp_ln70_2_reg_1730_pp2_iter13_reg;
        icmp_ln70_2_reg_1730_pp2_iter15_reg <= icmp_ln70_2_reg_1730_pp2_iter14_reg;
        icmp_ln70_2_reg_1730_pp2_iter16_reg <= icmp_ln70_2_reg_1730_pp2_iter15_reg;
        icmp_ln70_2_reg_1730_pp2_iter17_reg <= icmp_ln70_2_reg_1730_pp2_iter16_reg;
        icmp_ln70_2_reg_1730_pp2_iter2_reg <= icmp_ln70_2_reg_1730_pp2_iter1_reg;
        icmp_ln70_2_reg_1730_pp2_iter3_reg <= icmp_ln70_2_reg_1730_pp2_iter2_reg;
        icmp_ln70_2_reg_1730_pp2_iter4_reg <= icmp_ln70_2_reg_1730_pp2_iter3_reg;
        icmp_ln70_2_reg_1730_pp2_iter5_reg <= icmp_ln70_2_reg_1730_pp2_iter4_reg;
        icmp_ln70_2_reg_1730_pp2_iter6_reg <= icmp_ln70_2_reg_1730_pp2_iter5_reg;
        icmp_ln70_2_reg_1730_pp2_iter7_reg <= icmp_ln70_2_reg_1730_pp2_iter6_reg;
        icmp_ln70_2_reg_1730_pp2_iter8_reg <= icmp_ln70_2_reg_1730_pp2_iter7_reg;
        icmp_ln70_2_reg_1730_pp2_iter9_reg <= icmp_ln70_2_reg_1730_pp2_iter8_reg;
        tmp_29_reg_1745_pp2_iter2_reg <= tmp_29_reg_1745_pp2_iter1_reg;
        tmp_29_reg_1745_pp2_iter3_reg <= tmp_29_reg_1745_pp2_iter2_reg;
        trunc_ln78_2_reg_1739_pp2_iter2_reg <= trunc_ln78_2_reg_1739_pp2_iter1_reg;
        trunc_ln78_2_reg_1739_pp2_iter3_reg <= trunc_ln78_2_reg_1739_pp2_iter2_reg;
        trunc_ln78_2_reg_1739_pp2_iter4_reg <= trunc_ln78_2_reg_1739_pp2_iter3_reg;
        trunc_ln78_2_reg_1739_pp2_iter5_reg <= trunc_ln78_2_reg_1739_pp2_iter4_reg;
        trunc_ln78_2_reg_1739_pp2_iter6_reg <= trunc_ln78_2_reg_1739_pp2_iter5_reg;
        trunc_ln78_2_reg_1739_pp2_iter7_reg <= trunc_ln78_2_reg_1739_pp2_iter6_reg;
        trunc_ln78_2_reg_1739_pp2_iter8_reg <= trunc_ln78_2_reg_1739_pp2_iter7_reg;
        trunc_ln79_2_reg_1753_pp2_iter2_reg <= trunc_ln79_2_reg_1753_pp2_iter1_reg;
        trunc_ln79_2_reg_1753_pp2_iter3_reg <= trunc_ln79_2_reg_1753_pp2_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        c_aux_0_2_reg_542_pp2_iter1_reg <= c_aux_0_2_reg_542;
        icmp_ln70_2_reg_1730 <= icmp_ln70_2_fu_1111_p2;
        icmp_ln70_2_reg_1730_pp2_iter1_reg <= icmp_ln70_2_reg_1730;
        tmp_29_reg_1745_pp2_iter1_reg <= tmp_29_reg_1745;
        trunc_ln78_2_reg_1739_pp2_iter1_reg <= trunc_ln78_2_reg_1739;
        trunc_ln79_2_reg_1753_pp2_iter1_reg <= trunc_ln79_2_reg_1753;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        c_aux_0_3_reg_554_pp3_iter10_reg <= c_aux_0_3_reg_554_pp3_iter9_reg;
        c_aux_0_3_reg_554_pp3_iter11_reg <= c_aux_0_3_reg_554_pp3_iter10_reg;
        c_aux_0_3_reg_554_pp3_iter12_reg <= c_aux_0_3_reg_554_pp3_iter11_reg;
        c_aux_0_3_reg_554_pp3_iter13_reg <= c_aux_0_3_reg_554_pp3_iter12_reg;
        c_aux_0_3_reg_554_pp3_iter14_reg <= c_aux_0_3_reg_554_pp3_iter13_reg;
        c_aux_0_3_reg_554_pp3_iter15_reg <= c_aux_0_3_reg_554_pp3_iter14_reg;
        c_aux_0_3_reg_554_pp3_iter16_reg <= c_aux_0_3_reg_554_pp3_iter15_reg;
        c_aux_0_3_reg_554_pp3_iter17_reg <= c_aux_0_3_reg_554_pp3_iter16_reg;
        c_aux_0_3_reg_554_pp3_iter2_reg <= c_aux_0_3_reg_554_pp3_iter1_reg;
        c_aux_0_3_reg_554_pp3_iter3_reg <= c_aux_0_3_reg_554_pp3_iter2_reg;
        c_aux_0_3_reg_554_pp3_iter4_reg <= c_aux_0_3_reg_554_pp3_iter3_reg;
        c_aux_0_3_reg_554_pp3_iter5_reg <= c_aux_0_3_reg_554_pp3_iter4_reg;
        c_aux_0_3_reg_554_pp3_iter6_reg <= c_aux_0_3_reg_554_pp3_iter5_reg;
        c_aux_0_3_reg_554_pp3_iter7_reg <= c_aux_0_3_reg_554_pp3_iter6_reg;
        c_aux_0_3_reg_554_pp3_iter8_reg <= c_aux_0_3_reg_554_pp3_iter7_reg;
        c_aux_0_3_reg_554_pp3_iter9_reg <= c_aux_0_3_reg_554_pp3_iter8_reg;
        icmp_ln70_3_reg_1849_pp3_iter10_reg <= icmp_ln70_3_reg_1849_pp3_iter9_reg;
        icmp_ln70_3_reg_1849_pp3_iter11_reg <= icmp_ln70_3_reg_1849_pp3_iter10_reg;
        icmp_ln70_3_reg_1849_pp3_iter12_reg <= icmp_ln70_3_reg_1849_pp3_iter11_reg;
        icmp_ln70_3_reg_1849_pp3_iter13_reg <= icmp_ln70_3_reg_1849_pp3_iter12_reg;
        icmp_ln70_3_reg_1849_pp3_iter14_reg <= icmp_ln70_3_reg_1849_pp3_iter13_reg;
        icmp_ln70_3_reg_1849_pp3_iter15_reg <= icmp_ln70_3_reg_1849_pp3_iter14_reg;
        icmp_ln70_3_reg_1849_pp3_iter16_reg <= icmp_ln70_3_reg_1849_pp3_iter15_reg;
        icmp_ln70_3_reg_1849_pp3_iter17_reg <= icmp_ln70_3_reg_1849_pp3_iter16_reg;
        icmp_ln70_3_reg_1849_pp3_iter2_reg <= icmp_ln70_3_reg_1849_pp3_iter1_reg;
        icmp_ln70_3_reg_1849_pp3_iter3_reg <= icmp_ln70_3_reg_1849_pp3_iter2_reg;
        icmp_ln70_3_reg_1849_pp3_iter4_reg <= icmp_ln70_3_reg_1849_pp3_iter3_reg;
        icmp_ln70_3_reg_1849_pp3_iter5_reg <= icmp_ln70_3_reg_1849_pp3_iter4_reg;
        icmp_ln70_3_reg_1849_pp3_iter6_reg <= icmp_ln70_3_reg_1849_pp3_iter5_reg;
        icmp_ln70_3_reg_1849_pp3_iter7_reg <= icmp_ln70_3_reg_1849_pp3_iter6_reg;
        icmp_ln70_3_reg_1849_pp3_iter8_reg <= icmp_ln70_3_reg_1849_pp3_iter7_reg;
        icmp_ln70_3_reg_1849_pp3_iter9_reg <= icmp_ln70_3_reg_1849_pp3_iter8_reg;
        tmp_34_reg_1864_pp3_iter2_reg <= tmp_34_reg_1864_pp3_iter1_reg;
        tmp_34_reg_1864_pp3_iter3_reg <= tmp_34_reg_1864_pp3_iter2_reg;
        trunc_ln78_3_reg_1858_pp3_iter2_reg <= trunc_ln78_3_reg_1858_pp3_iter1_reg;
        trunc_ln78_3_reg_1858_pp3_iter3_reg <= trunc_ln78_3_reg_1858_pp3_iter2_reg;
        trunc_ln78_3_reg_1858_pp3_iter4_reg <= trunc_ln78_3_reg_1858_pp3_iter3_reg;
        trunc_ln78_3_reg_1858_pp3_iter5_reg <= trunc_ln78_3_reg_1858_pp3_iter4_reg;
        trunc_ln78_3_reg_1858_pp3_iter6_reg <= trunc_ln78_3_reg_1858_pp3_iter5_reg;
        trunc_ln78_3_reg_1858_pp3_iter7_reg <= trunc_ln78_3_reg_1858_pp3_iter6_reg;
        trunc_ln78_3_reg_1858_pp3_iter8_reg <= trunc_ln78_3_reg_1858_pp3_iter7_reg;
        trunc_ln79_3_reg_1872_pp3_iter2_reg <= trunc_ln79_3_reg_1872_pp3_iter1_reg;
        trunc_ln79_3_reg_1872_pp3_iter3_reg <= trunc_ln79_3_reg_1872_pp3_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        c_aux_0_3_reg_554_pp3_iter1_reg <= c_aux_0_3_reg_554;
        icmp_ln70_3_reg_1849 <= icmp_ln70_3_fu_1277_p2;
        icmp_ln70_3_reg_1849_pp3_iter1_reg <= icmp_ln70_3_reg_1849;
        tmp_34_reg_1864_pp3_iter1_reg <= tmp_34_reg_1864;
        trunc_ln78_3_reg_1858_pp3_iter1_reg <= trunc_ln78_3_reg_1858;
        trunc_ln79_3_reg_1872_pp3_iter1_reg <= trunc_ln79_3_reg_1872;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        i_reg_1917 <= i_fu_1402_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln95_reg_1913 <= icmp_ln95_fu_1396_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state3) | ((icmp_ln95_reg_1913 == 1'd0) & (1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)))) begin
        reg_625 <= Real_r_Dout_A;
        reg_631 <= Imag_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_636 <= Real_r_Dout_A;
        reg_641 <= Imag_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_645 <= Real_r_Dout_A;
        reg_649 <= Imag_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_654 <= Real_r_Dout_A;
        reg_658 <= Imag_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_663 <= Imag_Dout_A;
        reg_667 <= Real_r_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_671 <= Imag_Dout_A;
        reg_675 <= Real_r_Dout_A;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln70_3_reg_1849_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1)) | ((icmp_ln70_2_reg_1730_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1)) | ((icmp_ln70_1_reg_1616_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((icmp_ln70_reg_1497_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_679 <= grp_fu_601_p2;
        reg_684 <= grp_fu_605_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln70_3_reg_1849_pp3_iter6_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter7 == 1'b1)) | ((icmp_ln70_2_reg_1730_pp2_iter6_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter7 == 1'b1)) | ((icmp_ln70_1_reg_1616_pp1_iter6_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter7 == 1'b1)) | ((icmp_ln70_reg_1497_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_689 <= grp_fu_609_p2;
        reg_694 <= grp_fu_613_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln70_3_reg_1849_pp3_iter7_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter8 == 1'b1)) | ((icmp_ln70_2_reg_1730_pp2_iter7_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter8 == 1'b1)) | ((icmp_ln70_1_reg_1616_pp1_iter7_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1)) | ((icmp_ln70_reg_1497_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_699 <= grp_fu_577_p2;
        reg_704 <= grp_fu_581_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln70_3_reg_1849_pp3_iter11_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter12 == 1'b1)) | ((icmp_ln70_2_reg_1730_pp2_iter11_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter12 == 1'b1)) | ((icmp_ln70_1_reg_1616_pp1_iter11_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter12 == 1'b1)) | ((icmp_ln70_reg_1497_pp0_iter11_reg == 1'd0) & (ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_709 <= grp_fu_585_p2;
        reg_714 <= grp_fu_617_p2;
        reg_719 <= grp_fu_589_p2;
        reg_724 <= grp_fu_621_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln70_3_reg_1849_pp3_iter16_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter17 == 1'b1)) | ((icmp_ln70_2_reg_1730_pp2_iter16_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter17 == 1'b1)) | ((icmp_ln70_1_reg_1616_pp1_iter16_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter17 == 1'b1)) | ((icmp_ln70_reg_1497_pp0_iter16_reg == 1'd0) & (ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_729 <= grp_fu_593_p2;
        reg_734 <= grp_fu_597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln70_1_fu_956_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_24_reg_1631 <= tmp_24_fu_972_p6;
        trunc_ln78_1_reg_1625 <= trunc_ln78_1_fu_968_p1;
        trunc_ln79_1_reg_1639 <= trunc_ln79_1_fu_988_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln70_2_fu_1111_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_29_reg_1745 <= tmp_29_fu_1127_p6;
        trunc_ln78_2_reg_1739 <= trunc_ln78_2_fu_1123_p1;
        trunc_ln79_2_reg_1753 <= trunc_ln79_2_fu_1143_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln70_3_fu_1277_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_34_reg_1864 <= tmp_34_fu_1293_p6;
        trunc_ln78_3_reg_1858 <= trunc_ln78_3_fu_1289_p1;
        trunc_ln79_3_reg_1872 <= trunc_ln79_3_fu_1309_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln70_fu_789_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_4_reg_1512 <= tmp_4_fu_805_p6;
        trunc_ln78_reg_1506 <= trunc_ln78_fu_801_p1;
        trunc_ln79_reg_1520 <= trunc_ln79_fu_821_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        zext_ln52_4_reg_1611[1 : 0] <= zext_ln52_4_fu_953_p1[1 : 0];
zext_ln52_4_reg_1611[9 : 3] <= zext_ln52_4_fu_953_p1[9 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        zext_ln52_5_reg_1844[1 : 0] <= zext_ln52_5_fu_1274_p1[1 : 0];
zext_ln52_5_reg_1844[9 : 4] <= zext_ln52_5_fu_1274_p1[9 : 4];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        Imag_Addr_A_orig = Imag_addr_5_reg_1952;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3))) begin
        Imag_Addr_A_orig = Imag_addr_4_reg_1942;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2))) begin
        Imag_Addr_A_orig = zext_ln104_fu_1420_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1))) begin
        Imag_Addr_A_orig = zext_ln102_fu_1414_p1;
    end else if (((ap_enable_reg_pp3_iter18 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        Imag_Addr_A_orig = zext_ln88_3_fu_1384_p1;
    end else if ((1'b1 == ap_CS_fsm_state85)) begin
        Imag_Addr_A_orig = Imag_addr_17_reg_1829;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        Imag_Addr_A_orig = Imag_addr_16_reg_1809;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        Imag_Addr_A_orig = zext_ln53_3_reg_1814;
    end else if ((1'b1 == ap_CS_fsm_state82)) begin
        Imag_Addr_A_orig = zext_ln52_3_reg_1794;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        Imag_Addr_A_orig = zext_ln56_3_fu_1268_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        Imag_Addr_A_orig = zext_ln54_3_fu_1247_p1;
    end else if (((ap_enable_reg_pp2_iter18 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        Imag_Addr_A_orig = zext_ln88_2_fu_1226_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        Imag_Addr_A_orig = Imag_addr_12_reg_1715;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        Imag_Addr_A_orig = Imag_addr_11_reg_1695;
    end else if ((1'b1 == ap_CS_fsm_state57)) begin
        Imag_Addr_A_orig = zext_ln53_2_reg_1700;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        Imag_Addr_A_orig = zext_ln52_2_reg_1680;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        Imag_Addr_A_orig = zext_ln56_2_fu_1105_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        Imag_Addr_A_orig = zext_ln54_2_fu_1084_p1;
    end else if (((ap_enable_reg_pp1_iter18 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        Imag_Addr_A_orig = zext_ln88_1_fu_1063_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        Imag_Addr_A_orig = Imag_addr_7_reg_1596;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        Imag_Addr_A_orig = Imag_addr_6_reg_1576;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        Imag_Addr_A_orig = zext_ln53_1_reg_1581;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        Imag_Addr_A_orig = zext_ln52_1_reg_1561;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        Imag_Addr_A_orig = zext_ln56_1_fu_947_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        Imag_Addr_A_orig = zext_ln54_1_fu_926_p1;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        Imag_Addr_A_orig = zext_ln88_fu_905_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        Imag_Addr_A_orig = Imag_addr_1_reg_1482;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        Imag_Addr_A_orig = Imag_addr_reg_1462;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        Imag_Addr_A_orig = zext_ln53_reg_1467;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Imag_Addr_A_orig = zext_ln52_reg_1447;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Imag_Addr_A_orig = zext_ln56_fu_783_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        Imag_Addr_A_orig = zext_ln54_fu_762_p1;
    end else begin
        Imag_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        Imag_Din_A = reg_631;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3))) begin
        Imag_Din_A = Imag_Dout_A;
    end else if ((((ap_enable_reg_pp3_iter18 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp2_iter18 == 1'b1) & (1'b0 == ap_block_pp2_stage0)) | ((ap_enable_reg_pp1_iter18 == 1'b1) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        Imag_Din_A = reg_734;
    end else begin
        Imag_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state54) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_11001)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_11001)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter18 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter18 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        Imag_EN_A = 1'b1;
    end else begin
        Imag_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln95_reg_1913 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((icmp_ln95_reg_1913 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_11001)) | ((icmp_ln70_3_reg_1849_pp3_iter17_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter18 == 1'b1)) | ((icmp_ln70_2_reg_1730_pp2_iter17_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter18 == 1'b1)) | ((icmp_ln70_1_reg_1616_pp1_iter17_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1)) | ((icmp_ln70_reg_1497_pp0_iter17_reg == 1'd0) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        Imag_WEN_A = 4'd15;
    end else begin
        Imag_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        Real_r_Addr_A_orig = Real_addr_5_reg_1947;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3))) begin
        Real_r_Addr_A_orig = Real_addr_4_reg_1937;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2) & (1'b0 == ap_block_pp4_stage2))) begin
        Real_r_Addr_A_orig = zext_ln104_fu_1420_p1;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1))) begin
        Real_r_Addr_A_orig = zext_ln102_fu_1414_p1;
    end else if (((ap_enable_reg_pp3_iter18 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        Real_r_Addr_A_orig = zext_ln88_3_fu_1384_p1;
    end else if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state83))) begin
        Real_r_Addr_A_orig = Real_addr_19_reg_1824;
    end else if (((1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state82))) begin
        Real_r_Addr_A_orig = Real_addr_18_reg_1804;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        Real_r_Addr_A_orig = zext_ln53_3_fu_1263_p1;
    end else if ((1'b1 == ap_CS_fsm_state80)) begin
        Real_r_Addr_A_orig = zext_ln52_3_fu_1242_p1;
    end else if (((ap_enable_reg_pp2_iter18 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        Real_r_Addr_A_orig = zext_ln88_2_fu_1226_p1;
    end else if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state57))) begin
        Real_r_Addr_A_orig = Real_addr_14_reg_1710;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56))) begin
        Real_r_Addr_A_orig = Real_addr_13_reg_1690;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        Real_r_Addr_A_orig = zext_ln53_2_fu_1100_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        Real_r_Addr_A_orig = zext_ln52_2_fu_1079_p1;
    end else if (((ap_enable_reg_pp1_iter18 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        Real_r_Addr_A_orig = zext_ln88_1_fu_1063_p1;
    end else if (((1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31))) begin
        Real_r_Addr_A_orig = Real_addr_9_reg_1591;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30))) begin
        Real_r_Addr_A_orig = Real_addr_8_reg_1571;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        Real_r_Addr_A_orig = zext_ln53_1_fu_942_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        Real_r_Addr_A_orig = zext_ln52_1_fu_921_p1;
    end else if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        Real_r_Addr_A_orig = zext_ln88_fu_905_p1;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5))) begin
        Real_r_Addr_A_orig = Real_addr_3_reg_1477;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        Real_r_Addr_A_orig = Real_addr_2_reg_1457;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        Real_r_Addr_A_orig = zext_ln53_fu_778_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        Real_r_Addr_A_orig = zext_ln52_fu_757_p1;
    end else begin
        Real_r_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        Real_r_Din_A = reg_625;
    end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3))) begin
        Real_r_Din_A = Real_r_Dout_A;
    end else if ((((ap_enable_reg_pp3_iter18 == 1'b1) & (1'b0 == ap_block_pp3_stage0)) | ((ap_enable_reg_pp2_iter18 == 1'b1) & (1'b0 == ap_block_pp2_stage0)) | ((ap_enable_reg_pp1_iter18 == 1'b1) & (1'b0 == ap_block_pp1_stage0)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        Real_r_Din_A = reg_729;
    end else begin
        Real_r_Din_A = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state54) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_11001)) | ((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage1) & (1'b0 == ap_block_pp4_stage1_11001)) | ((1'b0 == ap_block_pp4_stage2_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage2)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter18 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter18 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1)) | ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)))) begin
        Real_r_EN_A = 1'b1;
    end else begin
        Real_r_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln95_reg_1913 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((icmp_ln95_reg_1913 == 1'd0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage3) & (1'b0 == ap_block_pp4_stage3_11001)) | ((icmp_ln70_3_reg_1849_pp3_iter17_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter18 == 1'b1)) | ((icmp_ln70_2_reg_1730_pp2_iter17_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter18 == 1'b1)) | ((icmp_ln70_1_reg_1616_pp1_iter17_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter18 == 1'b1)) | ((icmp_ln70_reg_1497_pp0_iter17_reg == 1'd0) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        Real_r_WEN_A = 4'd15;
    end else begin
        Real_r_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if ((icmp_ln70_fu_789_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln70_1_fu_956_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state35 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state35 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln70_2_fu_1111_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state61 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state61 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln70_3_fu_1277_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state87 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state87 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln95_fu_1396_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state107 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state107 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b0) & (ap_enable_reg_pp2_iter16 == 1'b0) & (ap_enable_reg_pp2_iter15 == 1'b0) & (ap_enable_reg_pp2_iter14 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter17 == 1'b0) & (ap_enable_reg_pp3_iter12 == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter18 == 1'b0) & (ap_enable_reg_pp3_iter16 == 1'b0) & (ap_enable_reg_pp3_iter15 == 1'b0) & (ap_enable_reg_pp3_iter14 == 1'b0) & (ap_enable_reg_pp3_iter13 == 1'b0) & (ap_enable_reg_pp3_iter11 == 1'b0) & (ap_enable_reg_pp3_iter10 == 1'b0) & (ap_enable_reg_pp3_iter9 == 1'b0) & (ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln70_reg_1497 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_c_aux_0_0_phi_fu_522_p4 = add_ln70_reg_1501;
    end else begin
        ap_phi_mux_c_aux_0_0_phi_fu_522_p4 = c_aux_0_0_reg_518;
    end
end

always @ (*) begin
    if (((icmp_ln70_1_reg_1616 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_c_aux_0_1_phi_fu_534_p4 = add_ln70_1_reg_1620;
    end else begin
        ap_phi_mux_c_aux_0_1_phi_fu_534_p4 = c_aux_0_1_reg_530;
    end
end

always @ (*) begin
    if (((icmp_ln70_2_reg_1730 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_c_aux_0_2_phi_fu_546_p4 = add_ln70_2_reg_1734;
    end else begin
        ap_phi_mux_c_aux_0_2_phi_fu_546_p4 = c_aux_0_2_reg_542;
    end
end

always @ (*) begin
    if (((icmp_ln70_3_reg_1849 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_c_aux_0_3_phi_fu_558_p4 = add_ln70_3_reg_1853;
    end else begin
        ap_phi_mux_c_aux_0_3_phi_fu_558_p4 = c_aux_0_3_reg_554;
    end
end

always @ (*) begin
    if (((icmp_ln95_reg_1913 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0))) begin
        ap_phi_mux_i_0_phi_fu_570_p4 = i_reg_1917;
    end else begin
        ap_phi_mux_i_0_phi_fu_570_p4 = i_0_reg_566;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_577_p1 = select_ln79_7_fu_1331_p3;
    end else if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_577_p1 = select_ln79_5_fu_1165_p3;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_577_p1 = select_ln79_3_fu_1010_p3;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_577_p1 = select_ln79_1_fu_843_p3;
    end else begin
        grp_fu_577_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_581_p1 = select_ln85_7_fu_1339_p3;
    end else if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_581_p1 = select_ln85_5_fu_1173_p3;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_581_p1 = select_ln85_3_fu_1018_p3;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_581_p1 = select_ln85_1_fu_851_p3;
    end else begin
        grp_fu_581_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_601_p0 = tmp_34_fu_1293_p6;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_601_p0 = tmp_29_fu_1127_p6;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_601_p0 = tmp_24_fu_972_p6;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_601_p0 = tmp_4_fu_805_p6;
    end else begin
        grp_fu_601_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_601_p1 = select_ln79_6_fu_1313_p3;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_601_p1 = select_ln79_4_fu_1147_p3;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_601_p1 = select_ln79_2_fu_992_p3;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_601_p1 = select_ln79_fu_825_p3;
    end else begin
        grp_fu_601_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_605_p0 = tmp_34_fu_1293_p6;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_605_p0 = tmp_29_fu_1127_p6;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_605_p0 = tmp_24_fu_972_p6;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_605_p0 = tmp_4_fu_805_p6;
    end else begin
        grp_fu_605_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_605_p1 = select_ln85_6_fu_1322_p3;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_605_p1 = select_ln85_4_fu_1156_p3;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_605_p1 = select_ln85_2_fu_1001_p3;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_605_p1 = select_ln85_fu_834_p3;
    end else begin
        grp_fu_605_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_609_p0 = tmp_34_reg_1864_pp3_iter3_reg;
    end else if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_609_p0 = tmp_29_reg_1745_pp2_iter3_reg;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_609_p0 = tmp_24_reg_1631_pp1_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_609_p0 = tmp_4_reg_1512_pp0_iter3_reg;
    end else begin
        grp_fu_609_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_613_p0 = tmp_34_reg_1864_pp3_iter3_reg;
    end else if (((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_613_p0 = tmp_29_reg_1745_pp2_iter3_reg;
    end else if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_613_p0 = tmp_24_reg_1631_pp1_iter3_reg;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_613_p0 = tmp_4_reg_1512_pp0_iter3_reg;
    end else begin
        grp_fu_613_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter9 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_617_p0 = tmp_35_fu_1347_p6;
    end else if (((ap_enable_reg_pp2_iter9 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_617_p0 = tmp_30_fu_1181_p6;
    end else if (((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_617_p0 = tmp_26_fu_1026_p6;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_617_p0 = tmp_14_fu_859_p6;
    end else begin
        grp_fu_617_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter9 == 1'b1) & (1'b0 == ap_block_pp3_stage0))) begin
        grp_fu_621_p0 = tmp_36_fu_1361_p6;
    end else if (((ap_enable_reg_pp2_iter9 == 1'b1) & (1'b0 == ap_block_pp2_stage0))) begin
        grp_fu_621_p0 = tmp_31_fu_1195_p6;
    end else if (((ap_enable_reg_pp1_iter9 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        grp_fu_621_p0 = tmp_28_fu_1040_p6;
    end else if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_621_p0 = tmp_20_fu_873_p6;
    end else begin
        grp_fu_621_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        lut_reorder_I_ce0 = 1'b1;
    end else begin
        lut_reorder_I_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        lut_reorder_J_ce0 = 1'b1;
    end else begin
        lut_reorder_J_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_37_fu_739_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln70_fu_789_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln70_fu_789_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((icmp_ln70_1_fu_956_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((icmp_ln70_1_fu_956_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln70_2_fu_1111_p2 == 1'd1)) & ~((ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln70_2_fu_1111_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln70_3_fu_1277_p2 == 1'd1)) & ~((ap_enable_reg_pp3_iter17 == 1'b0) & (ap_enable_reg_pp3_iter18 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter17 == 1'b0) & (ap_enable_reg_pp3_iter18 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln70_3_fu_1277_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state106;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln95_fu_1396_p2 == 1'd1)) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end else if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln95_fu_1396_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state112;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_pp4_stage1 : begin
            if ((1'b0 == ap_block_pp4_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage1;
            end
        end
        ap_ST_fsm_pp4_stage2 : begin
            if ((1'b0 == ap_block_pp4_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage2;
            end
        end
        ap_ST_fsm_pp4_stage3 : begin
            if ((1'b0 == ap_block_pp4_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage3;
            end
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Imag_Addr_A = Imag_Addr_A_orig << 32'd2;

assign Imag_Clk_A = ap_clk;

assign Imag_Rst_A = ap_rst_n_inv;

assign Real_r_Addr_A = Real_r_Addr_A_orig << 32'd2;

assign Real_r_Clk_A = ap_clk;

assign Real_r_Rst_A = ap_rst_n_inv;

assign add_ln44_fu_1390_p2 = (c_0_0_reg_506 + 11'd16);

assign add_ln70_1_fu_962_p2 = (ap_phi_mux_c_aux_0_1_phi_fu_534_p4 + 3'd1);

assign add_ln70_2_fu_1117_p2 = (ap_phi_mux_c_aux_0_2_phi_fu_546_p4 + 3'd1);

assign add_ln70_3_fu_1283_p2 = (ap_phi_mux_c_aux_0_3_phi_fu_558_p4 + 3'd1);

assign add_ln70_fu_795_p2 = (ap_phi_mux_c_aux_0_0_phi_fu_522_p4 + 3'd1);

assign add_ln88_1_fu_1379_p2 = (zext_ln52_5_reg_1844 + zext_ln78_1_fu_1375_p1);

assign add_ln88_fu_1058_p2 = (zext_ln52_4_reg_1611 + zext_ln78_fu_1054_p1);

assign add_ln_fu_897_p3 = {{tmp_23_fu_887_p4}, {c_aux_0_0_reg_518_pp0_iter17_reg}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp4_stage1 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp4_stage2 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp4_stage3 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state106 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd31];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp3_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp3_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp3_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp3_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp3_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp3_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp4_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp4_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp4_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp1_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp1_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp1_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp2_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp2_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp2_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp2_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp2_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp2_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp3_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp3_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp3_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp3_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp3_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp3_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_19_fu_747_p1 = c_0_0_reg_506[9:0];

assign i_fu_1402_p2 = (ap_phi_mux_i_0_phi_fu_570_p4 + 9'd1);

assign icmp_ln70_1_fu_956_p2 = ((ap_phi_mux_c_aux_0_1_phi_fu_534_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln70_2_fu_1111_p2 = ((ap_phi_mux_c_aux_0_2_phi_fu_546_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln70_3_fu_1277_p2 = ((ap_phi_mux_c_aux_0_3_phi_fu_558_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_789_p2 = ((ap_phi_mux_c_aux_0_0_phi_fu_522_p4 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_1396_p2 = ((ap_phi_mux_i_0_phi_fu_570_p4 == 9'd480) ? 1'b1 : 1'b0);

assign lut_reorder_I_address0 = zext_ln99_fu_1408_p1;

assign lut_reorder_J_address0 = zext_ln99_fu_1408_p1;

assign or_ln44_1_fu_1069_p2 = (empty_19_reg_1429 | 10'd8);

assign or_ln44_2_fu_1232_p2 = (empty_19_reg_1429 | 10'd12);

assign or_ln44_fu_911_p2 = (empty_19_reg_1429 | 10'd4);

assign or_ln48_1_fu_916_p2 = (empty_19_reg_1429 | 10'd5);

assign or_ln48_2_fu_1074_p2 = (empty_19_reg_1429 | 10'd9);

assign or_ln48_3_fu_1237_p2 = (empty_19_reg_1429 | 10'd13);

assign or_ln48_fu_751_p2 = (empty_19_fu_747_p1 | 10'd1);

assign or_ln49_1_fu_932_p2 = (empty_19_reg_1429 | 10'd6);

assign or_ln49_2_fu_1090_p2 = (empty_19_reg_1429 | 10'd10);

assign or_ln49_3_fu_1253_p2 = (empty_19_reg_1429 | 10'd14);

assign or_ln49_fu_768_p2 = (empty_19_reg_1429 | 10'd2);

assign or_ln50_1_fu_937_p2 = (empty_19_reg_1429 | 10'd7);

assign or_ln50_2_fu_1095_p2 = (empty_19_reg_1429 | 10'd11);

assign or_ln50_3_fu_1258_p2 = (empty_19_reg_1429 | 10'd15);

assign or_ln50_fu_773_p2 = (empty_19_reg_1429 | 10'd3);

assign select_ln79_1_fu_843_p3 = ((trunc_ln79_reg_1520_pp0_iter3_reg[0:0] === 1'b1) ? reg_631 : reg_645);

assign select_ln79_2_fu_992_p3 = ((trunc_ln79_1_fu_988_p1[0:0] === 1'b1) ? reg_641 : reg_654);

assign select_ln79_3_fu_1010_p3 = ((trunc_ln79_1_reg_1639_pp1_iter3_reg[0:0] === 1'b1) ? reg_631 : reg_645);

assign select_ln79_4_fu_1147_p3 = ((trunc_ln79_2_fu_1143_p1[0:0] === 1'b1) ? reg_641 : reg_654);

assign select_ln79_5_fu_1165_p3 = ((trunc_ln79_2_reg_1753_pp2_iter3_reg[0:0] === 1'b1) ? reg_631 : reg_645);

assign select_ln79_6_fu_1313_p3 = ((trunc_ln79_3_fu_1309_p1[0:0] === 1'b1) ? reg_641 : reg_654);

assign select_ln79_7_fu_1331_p3 = ((trunc_ln79_3_reg_1872_pp3_iter3_reg[0:0] === 1'b1) ? reg_631 : reg_645);

assign select_ln79_fu_825_p3 = ((trunc_ln79_fu_821_p1[0:0] === 1'b1) ? reg_641 : reg_654);

assign select_ln85_1_fu_851_p3 = ((trunc_ln79_reg_1520_pp0_iter3_reg[0:0] === 1'b1) ? reg_667 : reg_663);

assign select_ln85_2_fu_1001_p3 = ((trunc_ln79_1_fu_988_p1[0:0] === 1'b1) ? reg_675 : reg_671);

assign select_ln85_3_fu_1018_p3 = ((trunc_ln79_1_reg_1639_pp1_iter3_reg[0:0] === 1'b1) ? reg_667 : reg_663);

assign select_ln85_4_fu_1156_p3 = ((trunc_ln79_2_fu_1143_p1[0:0] === 1'b1) ? reg_675 : reg_671);

assign select_ln85_5_fu_1173_p3 = ((trunc_ln79_2_reg_1753_pp2_iter3_reg[0:0] === 1'b1) ? reg_667 : reg_663);

assign select_ln85_6_fu_1322_p3 = ((trunc_ln79_3_fu_1309_p1[0:0] === 1'b1) ? reg_675 : reg_671);

assign select_ln85_7_fu_1339_p3 = ((trunc_ln79_3_reg_1872_pp3_iter3_reg[0:0] === 1'b1) ? reg_667 : reg_663);

assign select_ln85_fu_834_p3 = ((trunc_ln79_fu_821_p1[0:0] === 1'b1) ? reg_675 : reg_671);

assign tmp_23_fu_887_p4 = {{c_0_0_reg_506[10:3]}};

assign tmp_24_fu_972_p5 = ap_phi_mux_c_aux_0_1_phi_fu_534_p4[1:0];

assign tmp_29_fu_1127_p5 = ap_phi_mux_c_aux_0_2_phi_fu_546_p4[1:0];

assign tmp_32_fu_1209_p4 = {{or_ln44_1_reg_1675[9:3]}};

assign tmp_33_fu_1218_p3 = {{tmp_32_fu_1209_p4}, {c_aux_0_2_reg_542_pp2_iter17_reg}};

assign tmp_34_fu_1293_p5 = ap_phi_mux_c_aux_0_3_phi_fu_558_p4[1:0];

assign tmp_37_fu_739_p3 = c_0_0_reg_506[32'd10];

assign tmp_4_fu_805_p5 = ap_phi_mux_c_aux_0_0_phi_fu_522_p4[1:0];

assign trunc_ln78_1_fu_968_p1 = ap_phi_mux_c_aux_0_1_phi_fu_534_p4[1:0];

assign trunc_ln78_2_fu_1123_p1 = ap_phi_mux_c_aux_0_2_phi_fu_546_p4[1:0];

assign trunc_ln78_3_fu_1289_p1 = ap_phi_mux_c_aux_0_3_phi_fu_558_p4[1:0];

assign trunc_ln78_fu_801_p1 = ap_phi_mux_c_aux_0_0_phi_fu_522_p4[1:0];

assign trunc_ln79_1_fu_988_p1 = ap_phi_mux_c_aux_0_1_phi_fu_534_p4[0:0];

assign trunc_ln79_2_fu_1143_p1 = ap_phi_mux_c_aux_0_2_phi_fu_546_p4[0:0];

assign trunc_ln79_3_fu_1309_p1 = ap_phi_mux_c_aux_0_3_phi_fu_558_p4[0:0];

assign trunc_ln79_fu_821_p1 = ap_phi_mux_c_aux_0_0_phi_fu_522_p4[0:0];

assign zext_ln102_fu_1414_p1 = lut_reorder_I_q0;

assign zext_ln104_fu_1420_p1 = indexJ_reg_1932;

assign zext_ln52_1_fu_921_p1 = or_ln44_fu_911_p2;

assign zext_ln52_2_fu_1079_p1 = or_ln44_1_fu_1069_p2;

assign zext_ln52_3_fu_1242_p1 = or_ln44_2_fu_1232_p2;

assign zext_ln52_4_fu_953_p1 = or_ln44_reg_1556;

assign zext_ln52_5_fu_1274_p1 = or_ln44_2_reg_1789;

assign zext_ln52_fu_757_p1 = c_0_0_reg_506;

assign zext_ln53_1_fu_942_p1 = or_ln49_1_fu_932_p2;

assign zext_ln53_2_fu_1100_p1 = or_ln49_2_fu_1090_p2;

assign zext_ln53_3_fu_1263_p1 = or_ln49_3_fu_1253_p2;

assign zext_ln53_fu_778_p1 = or_ln49_fu_768_p2;

assign zext_ln54_1_fu_926_p1 = or_ln48_1_fu_916_p2;

assign zext_ln54_2_fu_1084_p1 = or_ln48_2_fu_1074_p2;

assign zext_ln54_3_fu_1247_p1 = or_ln48_3_fu_1237_p2;

assign zext_ln54_fu_762_p1 = or_ln48_fu_751_p2;

assign zext_ln56_1_fu_947_p1 = or_ln50_1_fu_937_p2;

assign zext_ln56_2_fu_1105_p1 = or_ln50_2_fu_1095_p2;

assign zext_ln56_3_fu_1268_p1 = or_ln50_3_fu_1258_p2;

assign zext_ln56_fu_783_p1 = or_ln50_fu_773_p2;

assign zext_ln78_1_fu_1375_p1 = c_aux_0_3_reg_554_pp3_iter17_reg;

assign zext_ln78_fu_1054_p1 = c_aux_0_1_reg_530_pp1_iter17_reg;

assign zext_ln88_1_fu_1063_p1 = add_ln88_fu_1058_p2;

assign zext_ln88_2_fu_1226_p1 = tmp_33_fu_1218_p3;

assign zext_ln88_3_fu_1384_p1 = add_ln88_1_fu_1379_p2;

assign zext_ln88_fu_905_p1 = add_ln_fu_897_p3;

assign zext_ln99_fu_1408_p1 = ap_phi_mux_i_0_phi_fu_570_p4;

always @ (posedge ap_clk) begin
    zext_ln52_reg_1447[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    Real_addr_2_reg_1457[0] <= 1'b1;
    Imag_addr_reg_1462[0] <= 1'b1;
    zext_ln53_reg_1467[1] <= 1'b1;
    zext_ln53_reg_1467[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    Real_addr_3_reg_1477[1:0] <= 2'b11;
    Imag_addr_1_reg_1482[1:0] <= 2'b11;
    or_ln44_reg_1556[2] <= 1'b1;
    zext_ln52_1_reg_1561[2] <= 1'b1;
    zext_ln52_1_reg_1561[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    Real_addr_8_reg_1571[0] <= 1'b1;
    Real_addr_8_reg_1571[2] <= 1'b1;
    Imag_addr_6_reg_1576[0] <= 1'b1;
    Imag_addr_6_reg_1576[2] <= 1'b1;
    zext_ln53_1_reg_1581[2:1] <= 2'b11;
    zext_ln53_1_reg_1581[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    Real_addr_9_reg_1591[2:0] <= 3'b111;
    Imag_addr_7_reg_1596[2:0] <= 3'b111;
    zext_ln52_4_reg_1611[2] <= 1'b1;
    zext_ln52_4_reg_1611[10] <= 1'b0;
    or_ln44_1_reg_1675[3] <= 1'b1;
    zext_ln52_2_reg_1680[3] <= 1'b1;
    zext_ln52_2_reg_1680[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    Real_addr_13_reg_1690[0] <= 1'b1;
    Real_addr_13_reg_1690[3] <= 1'b1;
    Imag_addr_11_reg_1695[0] <= 1'b1;
    Imag_addr_11_reg_1695[3] <= 1'b1;
    zext_ln53_2_reg_1700[1] <= 1'b1;
    zext_ln53_2_reg_1700[3:3] <= 1'b1;
    zext_ln53_2_reg_1700[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    Real_addr_14_reg_1710[1:0] <= 2'b11;
    Real_addr_14_reg_1710[3] <= 1'b1;
    Imag_addr_12_reg_1715[1:0] <= 2'b11;
    Imag_addr_12_reg_1715[3] <= 1'b1;
    or_ln44_2_reg_1789[3:2] <= 2'b11;
    zext_ln52_3_reg_1794[3:2] <= 2'b11;
    zext_ln52_3_reg_1794[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    Real_addr_18_reg_1804[0] <= 1'b1;
    Real_addr_18_reg_1804[3:2] <= 2'b11;
    Imag_addr_16_reg_1809[0] <= 1'b1;
    Imag_addr_16_reg_1809[3:2] <= 2'b11;
    zext_ln53_3_reg_1814[3:1] <= 3'b111;
    zext_ln53_3_reg_1814[63:10] <= 54'b000000000000000000000000000000000000000000000000000000;
    Real_addr_19_reg_1824[3:0] <= 4'b1111;
    Imag_addr_17_reg_1829[3:0] <= 4'b1111;
    zext_ln52_5_reg_1844[3:2] <= 2'b11;
    zext_ln52_5_reg_1844[10] <= 1'b0;
end

endmodule //Reorder_fft
