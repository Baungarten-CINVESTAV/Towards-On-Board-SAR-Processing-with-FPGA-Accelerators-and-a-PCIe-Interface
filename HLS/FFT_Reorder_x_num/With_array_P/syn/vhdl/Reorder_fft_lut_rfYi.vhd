-- ==============================================================
-- File generated on Sun Mar 28 22:02:54 -0600 2021
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
-- SW Build 2405991 on Thu Dec  6 23:38:27 MST 2018
-- IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
-- Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Reorder_fft_lut_rfYi_rom is 
    generic(
             DWIDTH     : integer := 9; 
             AWIDTH     : integer := 13; 
             MEM_SIZE    : integer := 8064
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Reorder_fft_lut_rfYi_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "000000001", 1 => "000000010", 2 => "000000011", 3 => "000000100", 
    4 => "000000101", 5 => "000000110", 6 => "000000111", 7 => "000001000", 
    8 => "000001001", 9 => "000001010", 10 => "000001011", 11 => "000001100", 
    12 => "000001101", 13 => "000001110", 14 => "000001111", 15 => "000010000", 
    16 => "000010001", 17 => "000010010", 18 => "000010011", 19 => "000010100", 
    20 => "000010101", 21 => "000010110", 22 => "000010111", 23 => "000011000", 
    24 => "000011001", 25 => "000011010", 26 => "000011011", 27 => "000011100", 
    28 => "000011101", 29 => "000011110", 30 => "000011111", 31 => "000100000", 
    32 => "000100001", 33 => "000100010", 34 => "000100011", 35 => "000100100", 
    36 => "000100101", 37 => "000100110", 38 => "000100111", 39 => "000101000", 
    40 => "000101001", 41 => "000101010", 42 => "000101011", 43 => "000101100", 
    44 => "000101101", 45 => "000101110", 46 => "000101111", 47 => "000110000", 
    48 => "000110001", 49 => "000110010", 50 => "000110011", 51 => "000110100", 
    52 => "000110101", 53 => "000110110", 54 => "000110111", 55 => "000111000", 
    56 => "000111001", 57 => "000111010", 58 => "000111011", 59 => "000111100", 
    60 => "000111101", 61 => "000111110", 62 => "000111111", 63 => "001000001", 
    64 => "001000010", 65 => "001000011", 66 => "001000100", 67 => "001000101", 
    68 => "001000110", 69 => "001000111", 70 => "001001000", 71 => "001001001", 
    72 => "001001010", 73 => "001001011", 74 => "001001100", 75 => "001001101", 
    76 => "001001110", 77 => "001001111", 78 => "001010000", 79 => "001010001", 
    80 => "001010010", 81 => "001010011", 82 => "001010100", 83 => "001010101", 
    84 => "001010110", 85 => "001010111", 86 => "001011000", 87 => "001011001", 
    88 => "001011010", 89 => "001011011", 90 => "001011100", 91 => "001011101", 
    92 => "001011110", 93 => "001011111", 94 => "001100000", 95 => "001100001", 
    96 => "001100010", 97 => "001100011", 98 => "001100100", 99 => "001100101", 
    100 => "001100110", 101 => "001100111", 102 => "001101000", 103 => "001101001", 
    104 => "001101010", 105 => "001101011", 106 => "001101100", 107 => "001101101", 
    108 => "001101110", 109 => "001101111", 110 => "001110000", 111 => "001110001", 
    112 => "001110010", 113 => "001110011", 114 => "001110100", 115 => "001110101", 
    116 => "001110110", 117 => "001110111", 118 => "001111000", 119 => "001111001", 
    120 => "001111010", 121 => "001111011", 122 => "001111100", 123 => "001111101", 
    124 => "001111110", 125 => "001111111", 126 => "010000001", 127 => "010000010", 
    128 => "010000011", 129 => "010000100", 130 => "010000101", 131 => "010000110", 
    132 => "010000111", 133 => "010001000", 134 => "010001001", 135 => "010001010", 
    136 => "010001011", 137 => "010001100", 138 => "010001101", 139 => "010001110", 
    140 => "010001111", 141 => "010010000", 142 => "010010001", 143 => "010010010", 
    144 => "010010011", 145 => "010010100", 146 => "010010101", 147 => "010010110", 
    148 => "010010111", 149 => "010011000", 150 => "010011001", 151 => "010011010", 
    152 => "010011011", 153 => "010011100", 154 => "010011101", 155 => "010011110", 
    156 => "010011111", 157 => "010100000", 158 => "010100001", 159 => "010100010", 
    160 => "010100011", 161 => "010100100", 162 => "010100101", 163 => "010100110", 
    164 => "010100111", 165 => "010101000", 166 => "010101001", 167 => "010101010", 
    168 => "010101011", 169 => "010101100", 170 => "010101101", 171 => "010101110", 
    172 => "010101111", 173 => "010110000", 174 => "010110001", 175 => "010110010", 
    176 => "010110011", 177 => "010110100", 178 => "010110101", 179 => "010110110", 
    180 => "010110111", 181 => "010111000", 182 => "010111001", 183 => "010111010", 
    184 => "010111011", 185 => "010111100", 186 => "010111101", 187 => "010111110", 
    188 => "010111111", 189 => "011000001", 190 => "011000010", 191 => "011000011", 
    192 => "011000100", 193 => "011000101", 194 => "011000110", 195 => "011000111", 
    196 => "011001000", 197 => "011001001", 198 => "011001010", 199 => "011001011", 
    200 => "011001100", 201 => "011001101", 202 => "011001110", 203 => "011001111", 
    204 => "011010000", 205 => "011010001", 206 => "011010010", 207 => "011010011", 
    208 => "011010100", 209 => "011010101", 210 => "011010110", 211 => "011010111", 
    212 => "011011000", 213 => "011011001", 214 => "011011010", 215 => "011011011", 
    216 => "011011100", 217 => "011011101", 218 => "011011110", 219 => "011011111", 
    220 => "011100000", 221 => "011100001", 222 => "011100010", 223 => "011100011", 
    224 => "011100100", 225 => "011100101", 226 => "011100110", 227 => "011100111", 
    228 => "011101000", 229 => "011101001", 230 => "011101010", 231 => "011101011", 
    232 => "011101100", 233 => "011101101", 234 => "011101110", 235 => "011101111", 
    236 => "011110000", 237 => "011110001", 238 => "011110010", 239 => "011110011", 
    240 => "011110100", 241 => "011110101", 242 => "011110110", 243 => "011110111", 
    244 => "011111000", 245 => "011111001", 246 => "011111010", 247 => "011111011", 
    248 => "011111100", 249 => "011111101", 250 => "011111110", 251 => "011111111", 
    252 => "100000001", 253 => "100000010", 254 => "100000011", 255 => "100000100", 
    256 => "100000101", 257 => "100000110", 258 => "100000111", 259 => "100001000", 
    260 => "100001001", 261 => "100001010", 262 => "100001011", 263 => "100001100", 
    264 => "100001101", 265 => "100001110", 266 => "100001111", 267 => "100010001", 
    268 => "100010010", 269 => "100010011", 270 => "100010100", 271 => "100010101", 
    272 => "100010110", 273 => "100010111", 274 => "100011000", 275 => "100011001", 
    276 => "100011010", 277 => "100011011", 278 => "100011100", 279 => "100011101", 
    280 => "100011110", 281 => "100011111", 282 => "100100000", 283 => "100100001", 
    284 => "100100010", 285 => "100100011", 286 => "100100100", 287 => "100100101", 
    288 => "100100110", 289 => "100100111", 290 => "100101000", 291 => "100101001", 
    292 => "100101010", 293 => "100101011", 294 => "100101100", 295 => "100101101", 
    296 => "100101110", 297 => "100101111", 298 => "100110000", 299 => "100110001", 
    300 => "100110010", 301 => "100110011", 302 => "100110100", 303 => "100110101", 
    304 => "100110110", 305 => "100110111", 306 => "100111000", 307 => "100111001", 
    308 => "100111010", 309 => "100111011", 310 => "100111100", 311 => "100111101", 
    312 => "100111110", 313 => "100111111", 314 => "101000001", 315 => "101000010", 
    316 => "101000011", 317 => "101000100", 318 => "101000101", 319 => "101000110", 
    320 => "101000111", 321 => "101001000", 322 => "101001001", 323 => "101001010", 
    324 => "101001011", 325 => "101001100", 326 => "101001101", 327 => "101001110", 
    328 => "101001111", 329 => "101010001", 330 => "101010010", 331 => "101010011", 
    332 => "101010100", 333 => "101010101", 334 => "101010110", 335 => "101010111", 
    336 => "101011000", 337 => "101011001", 338 => "101011010", 339 => "101011011", 
    340 => "101011100", 341 => "101011101", 342 => "101011110", 343 => "101011111", 
    344 => "101100000", 345 => "101100001", 346 => "101100010", 347 => "101100011", 
    348 => "101100100", 349 => "101100101", 350 => "101100110", 351 => "101100111", 
    352 => "101101000", 353 => "101101001", 354 => "101101010", 355 => "101101011", 
    356 => "101101100", 357 => "101101101", 358 => "101101110", 359 => "101101111", 
    360 => "101110000", 361 => "101110001", 362 => "101110010", 363 => "101110011", 
    364 => "101110100", 365 => "101110101", 366 => "101110110", 367 => "101110111", 
    368 => "101111000", 369 => "101111001", 370 => "101111010", 371 => "101111011", 
    372 => "101111100", 373 => "101111101", 374 => "101111110", 375 => "101111111", 
    376 => "110000001", 377 => "110000010", 378 => "110000011", 379 => "110000100", 
    380 => "110000101", 381 => "110000110", 382 => "110000111", 383 => "110001000", 
    384 => "110001001", 385 => "110001010", 386 => "110001011", 387 => "110001100", 
    388 => "110001101", 389 => "110001110", 390 => "110001111", 391 => "110010001", 
    392 => "110010010", 393 => "110010011", 394 => "110010100", 395 => "110010101", 
    396 => "110010110", 397 => "110010111", 398 => "110011000", 399 => "110011001", 
    400 => "110011010", 401 => "110011011", 402 => "110011100", 403 => "110011101", 
    404 => "110011110", 405 => "110011111", 406 => "110100000", 407 => "110100001", 
    408 => "110100010", 409 => "110100011", 410 => "110100100", 411 => "110100101", 
    412 => "110100110", 413 => "110100111", 414 => "110101000", 415 => "110101001", 
    416 => "110101010", 417 => "110101011", 418 => "110101100", 419 => "110101101", 
    420 => "110101110", 421 => "110101111", 422 => "110110000", 423 => "110110001", 
    424 => "110110010", 425 => "110110011", 426 => "110110100", 427 => "110110101", 
    428 => "110110110", 429 => "110110111", 430 => "110111000", 431 => "110111001", 
    432 => "110111010", 433 => "110111011", 434 => "110111100", 435 => "110111101", 
    436 => "110111110", 437 => "110111111", 438 => "111000001", 439 => "111000010", 
    440 => "111000011", 441 => "111000100", 442 => "111000101", 443 => "111000110", 
    444 => "111000111", 445 => "111001000", 446 => "111001001", 447 => "111001010", 
    448 => "111001011", 449 => "111001100", 450 => "111001101", 451 => "111001110", 
    452 => "111001111", 453 => "111010001", 454 => "111010010", 455 => "111010011", 
    456 => "111010100", 457 => "111010101", 458 => "111010110", 459 => "111010111", 
    460 => "111011000", 461 => "111011001", 462 => "111011010", 463 => "111011011", 
    464 => "111011100", 465 => "111011101", 466 => "111011110", 467 => "111011111", 
    468 => "111100000", 469 => "111100001", 470 => "111100010", 471 => "111100011", 
    472 => "111100100", 473 => "111100101", 474 => "111100110", 475 => "111100111", 
    476 => "111101000", 477 => "111101001", 478 => "111101010", 479 => "111101011", 
    480 to 8063=> "000000000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity Reorder_fft_lut_rfYi is
    generic (
        DataWidth : INTEGER := 9;
        AddressRange : INTEGER := 8064;
        AddressWidth : INTEGER := 13);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Reorder_fft_lut_rfYi is
    component Reorder_fft_lut_rfYi_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Reorder_fft_lut_rfYi_rom_U :  component Reorder_fft_lut_rfYi_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


