/*
//#pragma HLS INTERFACE s_axilite port=return
//#pragma HLS array_partition variable=Real cyclic factor=4
//#pragma HLS array_partition variable=Imag cyclic factor=4

#pragma HLS INTERFACE BRAM port=Real
#pragma HLS INTERFACE bram port=Imag

#pragma HLS RESOURCE variable=Real core=RAM_1P_BRAM
#pragma HLS RESOURCE variable=Imag core=RAM_1P_BRAM
*/
#include "FFT_reorder.h"
#define N 16384
#define max_leng_reorder 8064

void Reorder_fft(int num_word, volatile float Real[N],volatile float Imag[N]){
//#pragma HLS array_partition variable=Real cyclic factor=4
//#pragma HLS array_partition variable=Imag cyclic factor=4

//#pragma HLS INTERFACE bram port=Real
//#pragma HLS INTERFACE bram port=Imag


#pragma HLS RESOURCE variable=Real core=RAM_1P_BRAM
#pragma HLS RESOURCE variable=Imag core=RAM_1P_BRAM


	unsigned ind1, ind2, ind3; // Data memory
	int c, c_aux, less2, i; // Counter
	int leng_reorder; // Number of data to reaorder
	float sign[4] = {1, -1, 1, -1};
	float signRE[4] = {1, 1, -1, -1};
	float signIM[4] = {1, -1, -1, 1};
	int lut_reorder_I_1024[480] = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,69,70,71,72,73,74,75,76,77,78,79,81,82,83,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,102,103,104,105,106,107,108,109,110,111,113,114,115,117,118,119,120,121,122,123,124,125,126,127,129,130,131,133,134,135,137,138,139,140,141,142,143,145,146,147,149,150,151,153,154,155,156,157,158,159,161,162,163,165,166,167,169,170,171,172,173,174,175,177,178,179,181,182,183,185,186,187,188,189,190,191,193,194,195,197,198,199,201,202,203,205,206,207,209,210,211,213,214,215,217,218,219,221,222,223,225,226,227,229,230,231,233,234,235,237,238,239,241,242,243,245,246,247,249,250,251,253,254,255,258,259,261,262,263,265,266,267,269,270,271,274,275,277,278,279,281,282,283,285,286,287,290,291,293,294,295,297,298,299,301,302,303,306,307,309,310,311,313,314,315,317,318,319,322,323,326,327,329,330,331,333,334,335,338,339,342,343,345,346,347,349,350,351,354,355,358,359,361,362,363,365,366,367,370,371,374,375,377,378,379,381,382,383,386,387,390,391,394,395,397,398,399,402,403,406,407,410,411,413,414,415,418,419,422,423,426,427,429,430,431,434,435,438,439,442,443,445,446,447,450,451,454,455,458,459,462,463,466,467,470,471,474,475,478,479,482,483,486,487,490,491,494,495,498,499,502,503,506,507,510,511,515,518,519,522,523,526,527,531,534,535,538,539,542,543,547,550,551,554,555,558,559,563,566,567,570,571,574,575,579,583,586,587,590,591,595,599,602,603,606,607,611,615,618,619,622,623,627,631,634,635,638,639,643,647,651,654,655,659,663,667,670,671,675,679,683,686,687,691,695,699,702,703,707,711,715,719,723,727,731,735,739,743,747,751,755,759,763,767,775,779,783,791,795,799,807,811,815,823,827,831,843,847,859,863,875,879,891,895,911,927,943,959};
	int lut_reorder_J_1024[480]= {256,512,768,64,320,576,832,128,384,640,896,192,448,704,960,272,528,784,80,336,592,848,144,400,656,912,208,464,720,976,288,544,800,96,352,608,864,160,416,672,928,224,480,736,992,304,560,816,112,368,624,880,176,432,688,944,240,496,752,1008,260,516,772,324,580,836,132,388,644,900,196,452,708,964,276,532,788,340,596,852,148,404,660,916,212,468,724,980,292,548,804,356,612,868,164,420,676,932,228,484,740,996,308,564,820,372,628,884,180,436,692,948,244,500,756,1012,264,520,776,328,584,840,392,648,904,200,456,712,968,280,536,792,344,600,856,408,664,920,216,472,728,984,296,552,808,360,616,872,424,680,936,232,488,744,1000,312,568,824,376,632,888,440,696,952,248,504,760,1016,268,524,780,332,588,844,396,652,908,460,716,972,284,540,796,348,604,860,412,668,924,476,732,988,300,556,812,364,620,876,428,684,940,492,748,1004,316,572,828,380,636,892,444,700,956,508,764,1020,513,769,321,577,833,385,641,897,449,705,961,529,785,337,593,849,401,657,913,465,721,977,545,801,353,609,865,417,673,929,481,737,993,561,817,369,625,881,433,689,945,497,753,1009,517,773,581,837,389,645,901,453,709,965,533,789,597,853,405,661,917,469,725,981,549,805,613,869,421,677,933,485,741,997,565,821,629,885,437,693,949,501,757,1013,521,777,585,841,649,905,457,713,969,537,793,601,857,665,921,473,729,985,553,809,617,873,681,937,489,745,1001,569,825,633,889,697,953,505,761,1017,525,781,589,845,653,909,717,973,541,797,605,861,669,925,733,989,557,813,621,877,685,941,749,1005,573,829,637,893,701,957,765,1021,770,578,834,642,898,706,962,786,594,850,658,914,722,978,802,610,866,674,930,738,994,818,626,882,690,946,754,1010,774,838,646,902,710,966,790,854,662,918,726,982,806,870,678,934,742,998,822,886,694,950,758,1014,778,842,906,714,970,794,858,922,730,986,810,874,938,746,1002,826,890,954,762,1018,782,846,910,974,798,862,926,990,814,878,942,1006,830,894,958,1022,835,899,963,851,915,979,867,931,995,883,947,1011,903,967,919,983,935,999,951,1015,971,987,1003,1019};
	int lut_reorder_I_4096[2016] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 517};
	int lut_reorder_J_4096[2016] = {1024, 2048, 3072, 256, 1280, 2304, 3328, 512, 1536, 2560, 3584, 768, 1792, 2816, 3840, 64, 1088, 2112, 3136, 320, 1344, 2368, 3392, 576, 1600, 2624, 3648, 832, 1856, 2880, 3904, 128, 1152, 2176, 3200, 384, 1408, 2432, 3456, 640, 1664, 2688, 3712, 896, 1920, 2944, 3968, 192, 1216, 2240, 3264, 448, 1472, 2496, 3520, 704, 1728, 2752, 3776, 960, 1984, 3008, 4032, 1040, 2064, 3088, 272, 1296, 2320, 3344, 528, 1552, 2576, 3600, 784, 1808, 2832, 3856, 1104, 2128, 3152, 336, 1360, 2384, 3408, 592, 1616, 2640, 3664, 848, 1872, 2896, 3920, 144, 1168, 2192, 3216, 400, 1424, 2448, 3472, 656, 1680, 2704, 3728, 912, 1936, 2960, 3984, 208, 1232, 2256, 3280, 464, 1488, 2512, 3536, 720, 1744, 2768, 3792, 976, 2000, 3024, 4048, 1056, 2080, 3104, 288, 1312, 2336, 3360, 544, 1568, 2592, 3616, 800, 1824, 2848, 3872, 1120, 2144, 3168, 352, 1376, 2400, 3424, 608, 1632, 2656, 3680, 864, 1888, 2912, 3936, 1184, 2208, 3232, 416, 1440, 2464, 3488, 672, 1696, 2720, 3744, 928, 1952, 2976, 4000, 224, 1248, 2272, 3296, 480, 1504, 2528, 3552, 736, 1760, 2784, 3808, 992, 2016, 3040, 4064, 1072, 2096, 3120, 304, 1328, 2352, 3376, 560, 1584, 2608, 3632, 816, 1840, 2864, 3888, 1136, 2160, 3184, 368, 1392, 2416, 3440, 624, 1648, 2672, 3696, 880, 1904, 2928, 3952, 1200, 2224, 3248, 432, 1456, 2480, 3504, 688, 1712, 2736, 3760, 944, 1968, 2992, 4016, 1264, 2288, 3312, 496, 1520, 2544, 3568, 752, 1776, 2800, 3824, 1008, 2032, 3056, 4080, 1028, 2052, 3076, 1284, 2308, 3332, 516, 1540, 2564, 3588, 772, 1796, 2820, 3844, 1092, 2116, 3140, 324, 1348, 2372, 3396, 580, 1604, 2628, 3652, 836, 1860, 2884, 3908, 1156, 2180, 3204, 388, 1412, 2436, 3460, 644, 1668, 2692, 3716, 900, 1924, 2948, 3972, 1220, 2244, 3268, 452, 1476, 2500, 3524, 708, 1732, 2756, 3780, 964, 1988, 3012, 4036, 1044, 2068, 3092, 1300, 2324, 3348, 532, 1556, 2580, 3604, 788, 1812, 2836, 3860, 1108, 2132, 3156, 1364, 2388, 3412, 596, 1620, 2644, 3668, 852, 1876, 2900, 3924, 1172, 2196, 3220, 404, 1428, 2452, 3476, 660, 1684, 2708, 3732, 916, 1940, 2964, 3988, 1236, 2260, 3284, 468, 1492, 2516, 3540, 724, 1748, 2772, 3796, 980, 2004, 3028, 4052, 1060, 2084, 3108, 1316, 2340, 3364, 548, 1572, 2596, 3620, 804, 1828, 2852, 3876, 1124, 2148, 3172, 1380, 2404, 3428, 612, 1636, 2660, 3684, 868, 1892, 2916, 3940, 1188, 2212, 3236, 1444, 2468, 3492, 676, 1700, 2724, 3748, 932, 1956, 2980, 4004, 1252, 2276, 3300, 484, 1508, 2532, 3556, 740, 1764, 2788, 3812, 996, 2020, 3044, 4068, 1076, 2100, 3124, 1332, 2356, 3380, 564, 1588, 2612, 3636, 820, 1844, 2868, 3892, 1140, 2164, 3188, 1396, 2420, 3444, 628, 1652, 2676, 3700, 884, 1908, 2932, 3956, 1204, 2228, 3252, 1460, 2484, 3508, 692, 1716, 2740, 3764, 948, 1972, 2996, 4020, 1268, 2292, 3316, 1524, 2548, 3572, 756, 1780, 2804, 3828, 1012, 2036, 3060, 4084, 1032, 2056, 3080, 1288};
	int lut_reorder_I_16384[8064]  = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491};
	int lut_reorder_J_16384[8064]= {4096, 8192, 12288, 1024, 5120, 9216, 13312, 2048, 6144, 10240, 14336, 3072, 7168, 11264, 15360, 256, 4352, 8448, 12544, 1280, 5376, 9472, 13568, 2304, 6400, 10496, 14592, 3328, 7424, 11520, 15616, 512, 4608, 8704, 12800, 1536, 5632, 9728, 13824, 2560, 6656, 10752, 14848, 3584, 7680, 11776, 15872, 768, 4864, 8960, 13056, 1792, 5888, 9984, 14080, 2816, 6912, 11008, 15104, 3840, 7936, 12032, 16128, 4160, 8256, 12352, 1088, 5184, 9280, 13376, 2112, 6208, 10304, 14400, 3136, 7232, 11328, 15424, 320, 4416, 8512, 12608, 1344, 5440, 9536, 13632, 2368, 6464, 10560, 14656, 3392, 7488, 11584, 15680, 576, 4672, 8768, 12864, 1600, 5696, 9792, 13888, 2624, 6720, 10816, 14912, 3648, 7744, 11840, 15936, 832, 4928, 9024, 13120, 1856, 5952, 10048, 14144, 2880, 6976, 11072, 15168, 3904, 8000, 12096, 16192, 4224, 8320, 12416, 1152, 5248, 9344, 13440, 2176, 6272, 10368, 14464, 3200, 7296, 11392, 15488, 384, 4480, 8576, 12672, 1408, 5504, 9600, 13696, 2432, 6528, 10624, 14720, 3456, 7552, 11648, 15744, 640, 4736, 8832, 12928, 1664, 5760, 9856, 13952, 2688, 6784, 10880, 14976, 3712, 7808, 11904, 16000, 896, 4992, 9088, 13184, 1920, 6016, 10112, 14208, 2944, 7040, 11136, 15232, 3968, 8064, 12160, 16256, 4288, 8384, 12480, 1216, 5312, 9408, 13504, 2240, 6336, 10432, 14528, 3264, 7360, 11456, 15552, 448, 4544, 8640, 12736, 1472, 5568, 9664, 13760, 2496, 6592, 10688, 14784, 3520, 7616, 11712, 15808, 704, 4800, 8896, 12992, 1728, 5824, 9920, 14016, 2752, 6848, 10944, 15040, 3776, 7872, 11968, 16064, 960, 5056, 9152, 13248, 1984, 6080, 10176, 14272, 3008, 7104, 11200, 15296, 4032, 8128, 12224, 16320, 4112, 8208, 12304, 1040, 5136, 9232, 13328, 2064, 6160, 10256, 14352, 3088, 7184, 11280, 15376, 4368, 8464, 12560, 1296, 5392, 9488, 13584, 2320, 6416, 10512, 14608, 3344, 7440, 11536, 15632, 528, 4624, 8720, 12816, 1552, 5648, 9744, 13840, 2576, 6672, 10768, 14864, 3600, 7696, 11792, 15888, 784, 4880, 8976, 13072, 1808, 5904, 10000, 14096, 2832, 6928, 11024, 15120, 3856, 7952, 12048, 16144, 4176, 8272, 12368, 1104, 5200, 9296, 13392, 2128, 6224, 10320, 14416, 3152, 7248, 11344, 15440, 4432, 8528, 12624, 1360, 5456, 9552, 13648, 2384, 6480, 10576, 14672, 3408, 7504, 11600, 15696, 592, 4688, 8784, 12880, 1616, 5712, 9808, 13904, 2640, 6736, 10832, 14928, 3664, 7760, 11856, 15952, 848, 4944, 9040, 13136, 1872, 5968, 10064, 14160, 2896, 6992, 11088, 15184, 3920, 8016, 12112, 16208, 4240, 8336, 12432, 1168, 5264, 9360, 13456, 2192, 6288, 10384, 14480, 3216, 7312, 11408, 15504, 4496, 8592, 12688, 1424, 5520, 9616, 13712, 2448, 6544, 10640, 14736, 3472, 7568, 11664, 15760, 656, 4752, 8848, 12944, 1680, 5776, 9872, 13968, 2704, 6800, 10896, 14992, 3728, 7824, 11920, 16016, 912, 5008, 9104, 13200, 1936, 6032, 10128, 14224, 2960, 7056, 11152, 15248, 3984, 8080, 12176, 16272, 4304, 8400, 12496, 1232, 5328, 9424, 13520, 2256, 6352, 10448, 14544, 3280, 7376, 11472, 15568, 4560, 8656, 12752, 1488, 5584, 9680, 13776, 2512, 6608, 10704, 14800, 3536, 7632, 11728, 15824, 720, 4816, 8912, 13008, 1744, 5840, 9936, 14032, 2768, 6864, 10960, 15056};
	int indexI, indexJ; // Number array
	float tempr,tempi;	// Valiu in the array
	int var_fft;

	float RE_vec_128_a,			IM_vec_128_a,
	   	   RE_vec_128_b,			IM_vec_128_b,
		   RE_vec_128_c[2],			IM_vec_128_c[2],
		   RE_vec_128_d[2],		    IM_vec_128_d[2],
		   RE_sum_128_ab[4],		IM_sum_128_ab[4],
		   RE_sum_128_cd[4],		IM_sum_128_cd[4],
		   RE_out_vec_128_a[4],		IM_out_vec_128_a[4];

	// define number of words
	if(num_word == 1024)
	{
		leng_reorder = 480;
		var_fft = 480;
	}
	else if (num_word == 4096)
	{
		leng_reorder = 2016;
		var_fft = 4096;
	}
	else if(num_word == 16384)
	{
		leng_reorder = 8064;
		var_fft = 16384;
	}




for(c=0; c < var_fft ; c +=4){
//#pragma HLS PIPELINE
		ind1   = 1 + c;
		ind2   = 2 + c;
		ind3   = 3 + c;
// ----- Real part---------------------------------
		RE_vec_128_a = Real[c];
		RE_vec_128_b = Real[ind2];
		RE_vec_128_c[0] = Real [ind1];
		RE_vec_128_c[1] = Imag[ind1];
		RE_vec_128_d[0] = Real [ind3];
		RE_vec_128_d[1] = Imag[ind3];
// ----- Real part---------------------------------

// ----- Imag part---------------------------------
		IM_vec_128_a = Imag[c];
		IM_vec_128_b = Imag[ind2];
		IM_vec_128_c[0] = Imag [ind1];
		IM_vec_128_c[1] = Real[ind1];
		IM_vec_128_d[0] = Imag [ind3];
		IM_vec_128_d[1] = Real[ind3];
// ----- Imag part---------------------------------

//------------------------FMADD---------------------------
for (c_aux = 0; c_aux < 4; c_aux +=1){
//#pragma HLS PIPELINE
			if(c_aux>1){ less2 = 2;}else {less2 = 0;}

			// ----- Real part---------------------------------
			RE_sum_128_ab[c_aux] = (sign[c_aux]*RE_vec_128_b)+RE_vec_128_a; //__M128_MM_FMADD_PS	(RE_sum_128_ab,    sign,   RE_vec_128_b,  RE_vec_128_a)
			RE_sum_128_cd[c_aux] = (sign[c_aux]*RE_vec_128_d[c_aux-less2])+RE_vec_128_c[c_aux-less2]; //__M128_MM_FMADD_PS	(RE_sum_128_cd,    sign,   RE_vec_128_d,  RE_vec_128_c)
			RE_out_vec_128_a[c_aux] = (signRE[c_aux]*RE_sum_128_cd[c_aux])+RE_sum_128_ab[c_aux]; //__M128_MM_FMADD_PS	(RE_out_vec_128_a, signRE, RE_sum_128_cd, RE_sum_128_ab)
			// ----- Real part---------------------------------

			// ----- Imag part---------------------------------
			IM_sum_128_ab[c_aux] = (sign[c_aux]*IM_vec_128_b)+IM_vec_128_a; //__M128_MM_FMADD_PS	(IM_sum_128_ab,    sign,   IM_vec_128_b,  IM_vec_128_a)
			IM_sum_128_cd[c_aux] = (sign[c_aux]*IM_vec_128_d[c_aux-less2])+IM_vec_128_c[c_aux-less2]; //__M128_MM_FMADD_PS	(IM_sum_128_cd,    sign,   IM_vec_128_d,  IM_vec_128_c)
			IM_out_vec_128_a[c_aux] = (signIM[c_aux]*IM_sum_128_cd[c_aux])+IM_sum_128_ab[c_aux];
			// ----- Imag part---------------------------------
			*(Real+c+c_aux) = RE_out_vec_128_a[c_aux];
			*(Imag+c+c_aux) = IM_out_vec_128_a[c_aux];

		}
//------------------------FMADD---------------------------
	}

	for (i = 0; i < leng_reorder; i++)
	{
//#pragma HLS PIPELINE

		/*Unrolling 1*******************************************/
		if(num_word == 1024)
		{
			indexI 			= lut_reorder_I_1024[i];
			indexJ 			= lut_reorder_J_1024[i];
		}
		else if (num_word == 4096)
		{
			indexI 			= lut_reorder_I_4096[i];
			indexJ 			= lut_reorder_J_4096[i];
		}
		else if(num_word == 16384)
		{
			indexI 			= lut_reorder_I_16384[i];
			indexJ 			= lut_reorder_J_16384[i];
		}

		//printf("indexI %d indexJ %d\n",indexI,indexJ);
		tempr     		= Real[indexI];
		tempi     		=  Imag[indexI];
		Real[indexI]	= Real[indexJ];
		Imag[indexI] 	=  Imag[indexJ];
		 Real[indexJ] 	= tempr;
		 Imag[indexJ] 	= tempi;
	}

}

