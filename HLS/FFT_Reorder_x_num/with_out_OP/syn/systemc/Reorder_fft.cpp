// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Reorder_fft.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Reorder_fft::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Reorder_fft::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<52> Reorder_fft::ap_ST_fsm_state1 = "1";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state2 = "10";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state3 = "100";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state4 = "1000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state5 = "10000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state6 = "100000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state7 = "1000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state8 = "10000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state9 = "100000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state10 = "1000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state11 = "10000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state12 = "100000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<52> Reorder_fft::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<32> Reorder_fft::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Reorder_fft::ap_const_lv32_3 = "11";
const sc_lv<32> Reorder_fft::ap_const_lv32_30 = "110000";
const sc_lv<32> Reorder_fft::ap_const_lv32_4 = "100";
const sc_lv<32> Reorder_fft::ap_const_lv32_31 = "110001";
const sc_lv<32> Reorder_fft::ap_const_lv32_E = "1110";
const sc_lv<32> Reorder_fft::ap_const_lv32_1B = "11011";
const sc_lv<32> Reorder_fft::ap_const_lv32_16 = "10110";
const sc_lv<32> Reorder_fft::ap_const_lv32_23 = "100011";
const sc_lv<32> Reorder_fft::ap_const_lv32_2B = "101011";
const sc_lv<32> Reorder_fft::ap_const_lv32_1 = "1";
const sc_lv<32> Reorder_fft::ap_const_lv32_2 = "10";
const sc_lv<1> Reorder_fft::ap_const_lv1_0 = "0";
const sc_lv<1> Reorder_fft::ap_const_lv1_1 = "1";
const sc_lv<32> Reorder_fft::ap_const_lv32_5 = "101";
const sc_lv<32> Reorder_fft::ap_const_lv32_6 = "110";
const sc_lv<32> Reorder_fft::ap_const_lv32_7 = "111";
const sc_lv<32> Reorder_fft::ap_const_lv32_8 = "1000";
const sc_lv<32> Reorder_fft::ap_const_lv32_9 = "1001";
const sc_lv<32> Reorder_fft::ap_const_lv32_2D = "101101";
const sc_lv<32> Reorder_fft::ap_const_lv32_2E = "101110";
const sc_lv<3> Reorder_fft::ap_const_lv3_0 = "000";
const sc_lv<32> Reorder_fft::ap_const_lv32_2C = "101100";
const sc_lv<32> Reorder_fft::ap_const_lv32_33 = "110011";
const sc_lv<13> Reorder_fft::ap_const_lv13_0 = "0000000000000";
const sc_lv<32> Reorder_fft::ap_const_lv32_2F = "101111";
const sc_lv<32> Reorder_fft::ap_const_lv32_32 = "110010";
const sc_lv<32> Reorder_fft::ap_const_lv32_F = "1111";
const sc_lv<32> Reorder_fft::ap_const_lv32_1C = "11100";
const sc_lv<32> Reorder_fft::ap_const_lv32_24 = "100100";
const sc_lv<32> Reorder_fft::ap_const_lv32_A = "1010";
const sc_lv<32> Reorder_fft::ap_const_lv32_17 = "10111";
const sc_lv<32> Reorder_fft::ap_const_lv32_FFFFFFFD = "11111111111111111111111111111101";
const sc_lv<32> Reorder_fft::ap_const_lv32_1F = "11111";
const sc_lv<32> Reorder_fft::ap_const_lv32_400 = "10000000000";
const sc_lv<32> Reorder_fft::ap_const_lv32_1000 = "1000000000000";
const sc_lv<12> Reorder_fft::ap_const_lv12_1E0 = "111100000";
const sc_lv<12> Reorder_fft::ap_const_lv12_7E0 = "11111100000";
const sc_lv<12> Reorder_fft::ap_const_lv12_F80 = "111110000000";
const sc_lv<30> Reorder_fft::ap_const_lv30_0 = "000000000000000000000000000000";
const sc_lv<2> Reorder_fft::ap_const_lv2_0 = "00";
const sc_lv<32> Reorder_fft::ap_const_lv32_4000 = "100000000000000";
const sc_lv<3> Reorder_fft::ap_const_lv3_4 = "100";
const sc_lv<3> Reorder_fft::ap_const_lv3_1 = "1";
const sc_lv<32> Reorder_fft::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> Reorder_fft::ap_const_lv32_BF800000 = "10111111100000000000000000000000";
const sc_lv<13> Reorder_fft::ap_const_lv13_1 = "1";
const bool Reorder_fft::ap_const_boolean_1 = true;

Reorder_fft::Reorder_fft(sc_module_name name) : sc_module(name), mVcdFile(0) {
    lut_reorder_I_1024_U = new Reorder_fft_lut_rbkb("lut_reorder_I_1024_U");
    lut_reorder_I_1024_U->clk(ap_clk);
    lut_reorder_I_1024_U->reset(ap_rst);
    lut_reorder_I_1024_U->address0(lut_reorder_I_1024_address0);
    lut_reorder_I_1024_U->ce0(lut_reorder_I_1024_ce0);
    lut_reorder_I_1024_U->q0(lut_reorder_I_1024_q0);
    lut_reorder_J_1024_U = new Reorder_fft_lut_rcud("lut_reorder_J_1024_U");
    lut_reorder_J_1024_U->clk(ap_clk);
    lut_reorder_J_1024_U->reset(ap_rst);
    lut_reorder_J_1024_U->address0(lut_reorder_J_1024_address0);
    lut_reorder_J_1024_U->ce0(lut_reorder_J_1024_ce0);
    lut_reorder_J_1024_U->q0(lut_reorder_J_1024_q0);
    lut_reorder_I_4096_U = new Reorder_fft_lut_rdEe("lut_reorder_I_4096_U");
    lut_reorder_I_4096_U->clk(ap_clk);
    lut_reorder_I_4096_U->reset(ap_rst);
    lut_reorder_I_4096_U->address0(lut_reorder_I_4096_address0);
    lut_reorder_I_4096_U->ce0(lut_reorder_I_4096_ce0);
    lut_reorder_I_4096_U->q0(lut_reorder_I_4096_q0);
    lut_reorder_J_4096_U = new Reorder_fft_lut_reOg("lut_reorder_J_4096_U");
    lut_reorder_J_4096_U->clk(ap_clk);
    lut_reorder_J_4096_U->reset(ap_rst);
    lut_reorder_J_4096_U->address0(lut_reorder_J_4096_address0);
    lut_reorder_J_4096_U->ce0(lut_reorder_J_4096_ce0);
    lut_reorder_J_4096_U->q0(lut_reorder_J_4096_q0);
    lut_reorder_I_16384_U = new Reorder_fft_lut_rfYi("lut_reorder_I_16384_U");
    lut_reorder_I_16384_U->clk(ap_clk);
    lut_reorder_I_16384_U->reset(ap_rst);
    lut_reorder_I_16384_U->address0(lut_reorder_I_16384_address0);
    lut_reorder_I_16384_U->ce0(lut_reorder_I_16384_ce0);
    lut_reorder_I_16384_U->q0(lut_reorder_I_16384_q0);
    lut_reorder_J_16384_U = new Reorder_fft_lut_rg8j("lut_reorder_J_16384_U");
    lut_reorder_J_16384_U->clk(ap_clk);
    lut_reorder_J_16384_U->reset(ap_rst);
    lut_reorder_J_16384_U->address0(lut_reorder_J_16384_address0);
    lut_reorder_J_16384_U->ce0(lut_reorder_J_16384_ce0);
    lut_reorder_J_16384_U->q0(lut_reorder_J_16384_q0);
    Reorder_fft_fadd_hbi_U1 = new Reorder_fft_fadd_hbi<1,8,32,32,32>("Reorder_fft_fadd_hbi_U1");
    Reorder_fft_fadd_hbi_U1->clk(ap_clk);
    Reorder_fft_fadd_hbi_U1->reset(ap_rst);
    Reorder_fft_fadd_hbi_U1->din0(grp_fu_340_p0);
    Reorder_fft_fadd_hbi_U1->din1(grp_fu_340_p1);
    Reorder_fft_fadd_hbi_U1->ce(ap_var_for_const0);
    Reorder_fft_fadd_hbi_U1->dout(grp_fu_340_p2);
    Reorder_fft_fadd_hbi_U2 = new Reorder_fft_fadd_hbi<1,8,32,32,32>("Reorder_fft_fadd_hbi_U2");
    Reorder_fft_fadd_hbi_U2->clk(ap_clk);
    Reorder_fft_fadd_hbi_U2->reset(ap_rst);
    Reorder_fft_fadd_hbi_U2->din0(grp_fu_344_p0);
    Reorder_fft_fadd_hbi_U2->din1(grp_fu_344_p1);
    Reorder_fft_fadd_hbi_U2->ce(ap_var_for_const0);
    Reorder_fft_fadd_hbi_U2->dout(grp_fu_344_p2);
    Reorder_fft_fmul_ibs_U3 = new Reorder_fft_fmul_ibs<1,5,32,32,32>("Reorder_fft_fmul_ibs_U3");
    Reorder_fft_fmul_ibs_U3->clk(ap_clk);
    Reorder_fft_fmul_ibs_U3->reset(ap_rst);
    Reorder_fft_fmul_ibs_U3->din0(grp_fu_348_p0);
    Reorder_fft_fmul_ibs_U3->din1(grp_fu_348_p1);
    Reorder_fft_fmul_ibs_U3->ce(ap_var_for_const0);
    Reorder_fft_fmul_ibs_U3->dout(grp_fu_348_p2);
    Reorder_fft_fmul_ibs_U4 = new Reorder_fft_fmul_ibs<1,5,32,32,32>("Reorder_fft_fmul_ibs_U4");
    Reorder_fft_fmul_ibs_U4->clk(ap_clk);
    Reorder_fft_fmul_ibs_U4->reset(ap_rst);
    Reorder_fft_fmul_ibs_U4->din0(grp_fu_352_p0);
    Reorder_fft_fmul_ibs_U4->din1(grp_fu_352_p1);
    Reorder_fft_fmul_ibs_U4->ce(ap_var_for_const0);
    Reorder_fft_fmul_ibs_U4->dout(grp_fu_352_p2);
    Reorder_fft_fmul_ibs_U5 = new Reorder_fft_fmul_ibs<1,5,32,32,32>("Reorder_fft_fmul_ibs_U5");
    Reorder_fft_fmul_ibs_U5->clk(ap_clk);
    Reorder_fft_fmul_ibs_U5->reset(ap_rst);
    Reorder_fft_fmul_ibs_U5->din0(IM_vec_128_b_reg_950);
    Reorder_fft_fmul_ibs_U5->din1(tmp_10_reg_994);
    Reorder_fft_fmul_ibs_U5->ce(ap_var_for_const0);
    Reorder_fft_fmul_ibs_U5->dout(grp_fu_356_p2);
    Reorder_fft_fmul_ibs_U6 = new Reorder_fft_fmul_ibs<1,5,32,32,32>("Reorder_fft_fmul_ibs_U6");
    Reorder_fft_fmul_ibs_U6->clk(ap_clk);
    Reorder_fft_fmul_ibs_U6->reset(ap_rst);
    Reorder_fft_fmul_ibs_U6->din0(tmp_10_reg_994);
    Reorder_fft_fmul_ibs_U6->din1(IM_vec_128_d_load_ph_reg_1012);
    Reorder_fft_fmul_ibs_U6->ce(ap_var_for_const0);
    Reorder_fft_fmul_ibs_U6->dout(grp_fu_360_p2);
    Reorder_fft_mux_4jbC_U7 = new Reorder_fft_mux_4jbC<1,1,32,32,32,32,2,32>("Reorder_fft_mux_4jbC_U7");
    Reorder_fft_mux_4jbC_U7->din0(ap_var_for_const1);
    Reorder_fft_mux_4jbC_U7->din1(ap_var_for_const2);
    Reorder_fft_mux_4jbC_U7->din2(ap_var_for_const1);
    Reorder_fft_mux_4jbC_U7->din3(ap_var_for_const2);
    Reorder_fft_mux_4jbC_U7->din4(tmp_10_fu_611_p5);
    Reorder_fft_mux_4jbC_U7->dout(tmp_10_fu_611_p6);
    Reorder_fft_mux_4jbC_U8 = new Reorder_fft_mux_4jbC<1,1,32,32,32,32,2,32>("Reorder_fft_mux_4jbC_U8");
    Reorder_fft_mux_4jbC_U8->din0(ap_var_for_const1);
    Reorder_fft_mux_4jbC_U8->din1(ap_var_for_const1);
    Reorder_fft_mux_4jbC_U8->din2(ap_var_for_const2);
    Reorder_fft_mux_4jbC_U8->din3(ap_var_for_const2);
    Reorder_fft_mux_4jbC_U8->din4(tmp_32_reg_988);
    Reorder_fft_mux_4jbC_U8->dout(tmp_14_fu_666_p6);
    Reorder_fft_mux_4jbC_U9 = new Reorder_fft_mux_4jbC<1,1,32,32,32,32,2,32>("Reorder_fft_mux_4jbC_U9");
    Reorder_fft_mux_4jbC_U9->din0(ap_var_for_const1);
    Reorder_fft_mux_4jbC_U9->din1(ap_var_for_const2);
    Reorder_fft_mux_4jbC_U9->din2(ap_var_for_const2);
    Reorder_fft_mux_4jbC_U9->din3(ap_var_for_const1);
    Reorder_fft_mux_4jbC_U9->din4(tmp_32_reg_988);
    Reorder_fft_mux_4jbC_U9->dout(tmp_20_fu_679_p6);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_IM_vec_128_c_load_ph_fu_649_p3);
    sensitive << ( IM_vec_128_c_0_reg_955 );
    sensitive << ( IM_vec_128_c_1_reg_960 );
    sensitive << ( tmp_33_fu_625_p1 );

    SC_METHOD(thread_IM_vec_128_d_load_ph_fu_643_p3);
    sensitive << ( IM_vec_128_d_0_reg_970 );
    sensitive << ( IM_vec_128_d_1_reg_975 );
    sensitive << ( tmp_33_fu_625_p1 );

    SC_METHOD(thread_Imag_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_3_reg_856 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( Imag_addr_reg_871 );
    sensitive << ( tmp_4_reg_905 );
    sensitive << ( Imag_addr_1_reg_920 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( Imag_addr_5_reg_1105 );
    sensitive << ( Imag_addr_6_reg_1115 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( tmp_5_fu_529_p1 );
    sensitive << ( tmp_6_fu_581_p1 );
    sensitive << ( sum8_cast_fu_692_p1 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_Imag_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_Imag_d0);
    sensitive << ( reg_370 );
    sensitive << ( reg_381 );
    sensitive << ( reg_399 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_Imag_we0);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_RE_vec_128_c_load_ph_fu_636_p3);
    sensitive << ( reg_370 );
    sensitive << ( RE_vec_128_c_0_reg_930 );
    sensitive << ( tmp_33_fu_625_p1 );

    SC_METHOD(thread_RE_vec_128_d_load_ph_fu_629_p3);
    sensitive << ( reg_381 );
    sensitive << ( RE_vec_128_d_0_reg_945 );
    sensitive << ( tmp_33_fu_625_p1 );

    SC_METHOD(thread_Real_r_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_3_fu_524_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( Real_addr_2_reg_866 );
    sensitive << ( tmp_4_fu_576_p1 );
    sensitive << ( Real_addr_3_reg_915 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( Real_addr_5_reg_1100 );
    sensitive << ( Real_addr_6_reg_1110 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( sum8_cast_fu_692_p1 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_Real_r_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_Real_r_d0);
    sensitive << ( reg_364 );
    sensitive << ( reg_375 );
    sensitive << ( reg_392 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_Real_r_we0);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state51 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( exitcond1_fu_697_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( exitcond1_fu_697_p2 );

    SC_METHOD(thread_c_1_fu_660_p2);
    sensitive << ( c_reg_306 );

    SC_METHOD(thread_c_aux_1_fu_597_p2);
    sensitive << ( c_aux_reg_318 );

    SC_METHOD(thread_exitcond1_fu_697_p2);
    sensitive << ( tmp_9_reg_888 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( i_reg_329 );

    SC_METHOD(thread_exitcond_fu_591_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( c_aux_reg_318 );

    SC_METHOD(thread_grp_fu_340_p0);
    sensitive << ( reg_386 );
    sensitive << ( reg_392 );
    sensitive << ( tmp_s_reg_1032 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_grp_fu_340_p1);
    sensitive << ( reg_364 );
    sensitive << ( RE_vec_128_c_load_ph_reg_1007 );
    sensitive << ( tmp_15_reg_1057 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_grp_fu_344_p0);
    sensitive << ( reg_399 );
    sensitive << ( tmp_17_reg_1037 );
    sensitive << ( tmp_18_reg_1042 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_grp_fu_344_p1);
    sensitive << ( reg_386 );
    sensitive << ( IM_vec_128_a_reg_935 );
    sensitive << ( IM_vec_128_c_load_ph_reg_1017 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state37 );

    SC_METHOD(thread_grp_fu_348_p0);
    sensitive << ( reg_375 );
    sensitive << ( tmp_14_reg_1047 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_grp_fu_348_p1);
    sensitive << ( reg_392 );
    sensitive << ( tmp_10_reg_994 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_grp_fu_352_p0);
    sensitive << ( tmp_10_reg_994 );
    sensitive << ( tmp_20_reg_1052 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_grp_fu_352_p1);
    sensitive << ( reg_399 );
    sensitive << ( RE_vec_128_d_load_ph_reg_1002 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_i_1_fu_702_p2);
    sensitive << ( i_reg_329 );

    SC_METHOD(thread_ind1_fu_518_p2);
    sensitive << ( c_reg_306 );

    SC_METHOD(thread_ind2_fu_564_p2);
    sensitive << ( c_reg_306 );

    SC_METHOD(thread_ind3_fu_570_p2);
    sensitive << ( c_reg_306 );

    SC_METHOD(thread_indexI_1_cast_fu_724_p1);
    sensitive << ( lut_reorder_I_1024_q0 );

    SC_METHOD(thread_indexI_2_cast_fu_732_p1);
    sensitive << ( lut_reorder_I_4096_q0 );

    SC_METHOD(thread_indexI_3_fu_762_p3);
    sensitive << ( sel_tmp7_reg_899 );
    sensitive << ( indexI_4_cast_fu_740_p1 );
    sensitive << ( indexI_6_fu_755_p3 );

    SC_METHOD(thread_indexI_4_cast_fu_740_p1);
    sensitive << ( lut_reorder_I_16384_q0 );

    SC_METHOD(thread_indexI_5_fu_748_p3);
    sensitive << ( tmp_reg_826 );
    sensitive << ( indexI_fu_102 );
    sensitive << ( indexI_1_cast_fu_724_p1 );

    SC_METHOD(thread_indexI_6_fu_755_p3);
    sensitive << ( sel_tmp2_reg_893 );
    sensitive << ( indexI_2_cast_fu_732_p1 );
    sensitive << ( indexI_5_fu_748_p3 );

    SC_METHOD(thread_indexJ_1_cast_fu_728_p1);
    sensitive << ( lut_reorder_J_1024_q0 );

    SC_METHOD(thread_indexJ_2_cast_fu_736_p1);
    sensitive << ( lut_reorder_J_4096_q0 );

    SC_METHOD(thread_indexJ_3_fu_783_p3);
    sensitive << ( sel_tmp7_reg_899 );
    sensitive << ( indexJ_4_cast_fu_744_p1 );
    sensitive << ( indexJ_6_fu_776_p3 );

    SC_METHOD(thread_indexJ_4_cast_fu_744_p1);
    sensitive << ( lut_reorder_J_16384_q0 );

    SC_METHOD(thread_indexJ_5_fu_769_p3);
    sensitive << ( tmp_reg_826 );
    sensitive << ( indexJ_fu_98 );
    sensitive << ( indexJ_1_cast_fu_728_p1 );

    SC_METHOD(thread_indexJ_6_fu_776_p3);
    sensitive << ( sel_tmp2_reg_893 );
    sensitive << ( indexJ_2_cast_fu_736_p1 );
    sensitive << ( indexJ_5_fu_769_p3 );

    SC_METHOD(thread_leng_reorder_2_fu_446_p3);
    sensitive << ( tmp_7_fu_440_p2 );
    sensitive << ( p_cast_fu_432_p3 );

    SC_METHOD(thread_lut_reorder_I_1024_address0);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( tmp_23_fu_708_p1 );

    SC_METHOD(thread_lut_reorder_I_1024_ce0);
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_lut_reorder_I_16384_address0);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( tmp_23_fu_708_p1 );

    SC_METHOD(thread_lut_reorder_I_16384_ce0);
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_lut_reorder_I_4096_address0);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( tmp_23_fu_708_p1 );

    SC_METHOD(thread_lut_reorder_I_4096_ce0);
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_lut_reorder_J_1024_address0);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( tmp_23_fu_708_p1 );

    SC_METHOD(thread_lut_reorder_J_1024_ce0);
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_lut_reorder_J_16384_address0);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( tmp_23_fu_708_p1 );

    SC_METHOD(thread_lut_reorder_J_16384_ce0);
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_lut_reorder_J_4096_address0);
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( tmp_23_fu_708_p1 );

    SC_METHOD(thread_lut_reorder_J_4096_ce0);
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_num_word_op_op_fu_461_p2);
    sensitive << ( num_word );

    SC_METHOD(thread_p_cast_fu_432_p3);
    sensitive << ( tmp_fu_422_p2 );

    SC_METHOD(thread_p_neg_fu_406_p2);
    sensitive << ( num_word );

    SC_METHOD(thread_p_neg_t_fu_474_p2);
    sensitive << ( p_lshr_reg_821 );

    SC_METHOD(thread_sel_tmp1_fu_543_p2);
    sensitive << ( tmp_reg_826 );

    SC_METHOD(thread_sel_tmp2_fu_548_p2);
    sensitive << ( tmp_1_reg_833 );
    sensitive << ( sel_tmp1_fu_543_p2 );

    SC_METHOD(thread_sel_tmp6_fu_553_p2);
    sensitive << ( tmp_7_reg_838 );

    SC_METHOD(thread_sel_tmp7_fu_558_p2);
    sensitive << ( tmp_8_fu_535_p2 );
    sensitive << ( sel_tmp6_fu_553_p2 );

    SC_METHOD(thread_sum8_cast_fu_692_p1);
    sensitive << ( sum8_reg_1022 );

    SC_METHOD(thread_sum8_fu_655_p2);
    sensitive << ( tmp_31_reg_965 );
    sensitive << ( tmp_cast_fu_603_p1 );

    SC_METHOD(thread_tmp_10_fu_611_p5);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( c_aux_reg_318 );

    SC_METHOD(thread_tmp_11_fu_466_p3);
    sensitive << ( num_word_op_op_fu_461_p2 );

    SC_METHOD(thread_tmp_1_fu_427_p2);
    sensitive << ( num_word );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_23_fu_708_p1);
    sensitive << ( i_reg_329 );

    SC_METHOD(thread_tmp_24_fu_790_p1);
    sensitive << ( indexI_3_fu_762_p3 );

    SC_METHOD(thread_tmp_25_fu_796_p1);
    sensitive << ( indexJ_3_fu_783_p3 );

    SC_METHOD(thread_tmp_26_fu_479_p4);
    sensitive << ( num_word_op_op_fu_461_p2 );

    SC_METHOD(thread_tmp_27_fu_489_p3);
    sensitive << ( tmp_11_fu_466_p3 );
    sensitive << ( p_neg_t_fu_474_p2 );
    sensitive << ( tmp_26_fu_479_p4 );

    SC_METHOD(thread_tmp_28_fu_497_p3);
    sensitive << ( tmp_2_fu_454_p3 );
    sensitive << ( tmp_27_fu_489_p3 );

    SC_METHOD(thread_tmp_29_fu_505_p3);
    sensitive << ( tmp_28_fu_497_p3 );

    SC_METHOD(thread_tmp_2_fu_454_p3);
    sensitive << ( num_word );

    SC_METHOD(thread_tmp_30_fu_513_p2);
    sensitive << ( tmp_29_reg_848 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( c_reg_306 );

    SC_METHOD(thread_tmp_31_fu_587_p1);
    sensitive << ( c_reg_306 );

    SC_METHOD(thread_tmp_32_fu_607_p1);
    sensitive << ( c_aux_reg_318 );

    SC_METHOD(thread_tmp_33_fu_625_p1);
    sensitive << ( c_aux_reg_318 );

    SC_METHOD(thread_tmp_3_fu_524_p1);
    sensitive << ( c_reg_306 );

    SC_METHOD(thread_tmp_4_fu_576_p1);
    sensitive << ( ind2_fu_564_p2 );

    SC_METHOD(thread_tmp_5_fu_529_p1);
    sensitive << ( ind1_fu_518_p2 );

    SC_METHOD(thread_tmp_6_fu_581_p1);
    sensitive << ( ind3_fu_570_p2 );

    SC_METHOD(thread_tmp_7_fu_440_p2);
    sensitive << ( tmp_fu_422_p2 );
    sensitive << ( tmp_1_fu_427_p2 );

    SC_METHOD(thread_tmp_8_fu_535_p2);
    sensitive << ( num_word );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_30_fu_513_p2 );

    SC_METHOD(thread_tmp_9_fu_540_p1);
    sensitive << ( leng_reorder_2_reg_843 );

    SC_METHOD(thread_tmp_cast_fu_603_p1);
    sensitive << ( c_aux_reg_318 );

    SC_METHOD(thread_tmp_fu_422_p2);
    sensitive << ( num_word );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_30_fu_513_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( exitcond_fu_591_p2 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( exitcond1_fu_697_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "0000000000000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Reorder_fft_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, num_word, "(port)num_word");
    sc_trace(mVcdFile, Real_r_address0, "(port)Real_r_address0");
    sc_trace(mVcdFile, Real_r_ce0, "(port)Real_r_ce0");
    sc_trace(mVcdFile, Real_r_we0, "(port)Real_r_we0");
    sc_trace(mVcdFile, Real_r_d0, "(port)Real_r_d0");
    sc_trace(mVcdFile, Real_r_q0, "(port)Real_r_q0");
    sc_trace(mVcdFile, Imag_address0, "(port)Imag_address0");
    sc_trace(mVcdFile, Imag_ce0, "(port)Imag_ce0");
    sc_trace(mVcdFile, Imag_we0, "(port)Imag_we0");
    sc_trace(mVcdFile, Imag_d0, "(port)Imag_d0");
    sc_trace(mVcdFile, Imag_q0, "(port)Imag_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, lut_reorder_I_1024_address0, "lut_reorder_I_1024_address0");
    sc_trace(mVcdFile, lut_reorder_I_1024_ce0, "lut_reorder_I_1024_ce0");
    sc_trace(mVcdFile, lut_reorder_I_1024_q0, "lut_reorder_I_1024_q0");
    sc_trace(mVcdFile, lut_reorder_J_1024_address0, "lut_reorder_J_1024_address0");
    sc_trace(mVcdFile, lut_reorder_J_1024_ce0, "lut_reorder_J_1024_ce0");
    sc_trace(mVcdFile, lut_reorder_J_1024_q0, "lut_reorder_J_1024_q0");
    sc_trace(mVcdFile, lut_reorder_I_4096_address0, "lut_reorder_I_4096_address0");
    sc_trace(mVcdFile, lut_reorder_I_4096_ce0, "lut_reorder_I_4096_ce0");
    sc_trace(mVcdFile, lut_reorder_I_4096_q0, "lut_reorder_I_4096_q0");
    sc_trace(mVcdFile, lut_reorder_J_4096_address0, "lut_reorder_J_4096_address0");
    sc_trace(mVcdFile, lut_reorder_J_4096_ce0, "lut_reorder_J_4096_ce0");
    sc_trace(mVcdFile, lut_reorder_J_4096_q0, "lut_reorder_J_4096_q0");
    sc_trace(mVcdFile, lut_reorder_I_16384_address0, "lut_reorder_I_16384_address0");
    sc_trace(mVcdFile, lut_reorder_I_16384_ce0, "lut_reorder_I_16384_ce0");
    sc_trace(mVcdFile, lut_reorder_I_16384_q0, "lut_reorder_I_16384_q0");
    sc_trace(mVcdFile, lut_reorder_J_16384_address0, "lut_reorder_J_16384_address0");
    sc_trace(mVcdFile, lut_reorder_J_16384_ce0, "lut_reorder_J_16384_ce0");
    sc_trace(mVcdFile, lut_reorder_J_16384_q0, "lut_reorder_J_16384_q0");
    sc_trace(mVcdFile, reg_364, "reg_364");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, reg_370, "reg_370");
    sc_trace(mVcdFile, reg_375, "reg_375");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, reg_381, "reg_381");
    sc_trace(mVcdFile, grp_fu_352_p2, "grp_fu_352_p2");
    sc_trace(mVcdFile, reg_386, "reg_386");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, grp_fu_340_p2, "grp_fu_340_p2");
    sc_trace(mVcdFile, reg_392, "reg_392");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, grp_fu_344_p2, "grp_fu_344_p2");
    sc_trace(mVcdFile, reg_399, "reg_399");
    sc_trace(mVcdFile, p_lshr_reg_821, "p_lshr_reg_821");
    sc_trace(mVcdFile, tmp_fu_422_p2, "tmp_fu_422_p2");
    sc_trace(mVcdFile, tmp_reg_826, "tmp_reg_826");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_1_fu_427_p2, "tmp_1_fu_427_p2");
    sc_trace(mVcdFile, tmp_1_reg_833, "tmp_1_reg_833");
    sc_trace(mVcdFile, tmp_7_fu_440_p2, "tmp_7_fu_440_p2");
    sc_trace(mVcdFile, tmp_7_reg_838, "tmp_7_reg_838");
    sc_trace(mVcdFile, leng_reorder_2_fu_446_p3, "leng_reorder_2_fu_446_p3");
    sc_trace(mVcdFile, leng_reorder_2_reg_843, "leng_reorder_2_reg_843");
    sc_trace(mVcdFile, tmp_29_fu_505_p3, "tmp_29_fu_505_p3");
    sc_trace(mVcdFile, tmp_29_reg_848, "tmp_29_reg_848");
    sc_trace(mVcdFile, tmp_3_fu_524_p1, "tmp_3_fu_524_p1");
    sc_trace(mVcdFile, tmp_3_reg_856, "tmp_3_reg_856");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_30_fu_513_p2, "tmp_30_fu_513_p2");
    sc_trace(mVcdFile, Real_addr_2_reg_866, "Real_addr_2_reg_866");
    sc_trace(mVcdFile, Imag_addr_reg_871, "Imag_addr_reg_871");
    sc_trace(mVcdFile, tmp_9_fu_540_p1, "tmp_9_fu_540_p1");
    sc_trace(mVcdFile, tmp_9_reg_888, "tmp_9_reg_888");
    sc_trace(mVcdFile, sel_tmp2_fu_548_p2, "sel_tmp2_fu_548_p2");
    sc_trace(mVcdFile, sel_tmp2_reg_893, "sel_tmp2_reg_893");
    sc_trace(mVcdFile, sel_tmp7_fu_558_p2, "sel_tmp7_fu_558_p2");
    sc_trace(mVcdFile, sel_tmp7_reg_899, "sel_tmp7_reg_899");
    sc_trace(mVcdFile, tmp_4_fu_576_p1, "tmp_4_fu_576_p1");
    sc_trace(mVcdFile, tmp_4_reg_905, "tmp_4_reg_905");
    sc_trace(mVcdFile, Real_addr_3_reg_915, "Real_addr_3_reg_915");
    sc_trace(mVcdFile, Imag_addr_1_reg_920, "Imag_addr_1_reg_920");
    sc_trace(mVcdFile, RE_vec_128_c_0_reg_930, "RE_vec_128_c_0_reg_930");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, IM_vec_128_a_reg_935, "IM_vec_128_a_reg_935");
    sc_trace(mVcdFile, RE_vec_128_d_0_reg_945, "RE_vec_128_d_0_reg_945");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, IM_vec_128_b_reg_950, "IM_vec_128_b_reg_950");
    sc_trace(mVcdFile, IM_vec_128_c_0_reg_955, "IM_vec_128_c_0_reg_955");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, IM_vec_128_c_1_reg_960, "IM_vec_128_c_1_reg_960");
    sc_trace(mVcdFile, tmp_31_fu_587_p1, "tmp_31_fu_587_p1");
    sc_trace(mVcdFile, tmp_31_reg_965, "tmp_31_reg_965");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, IM_vec_128_d_0_reg_970, "IM_vec_128_d_0_reg_970");
    sc_trace(mVcdFile, IM_vec_128_d_1_reg_975, "IM_vec_128_d_1_reg_975");
    sc_trace(mVcdFile, c_aux_1_fu_597_p2, "c_aux_1_fu_597_p2");
    sc_trace(mVcdFile, c_aux_1_reg_983, "c_aux_1_reg_983");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, tmp_32_fu_607_p1, "tmp_32_fu_607_p1");
    sc_trace(mVcdFile, tmp_32_reg_988, "tmp_32_reg_988");
    sc_trace(mVcdFile, exitcond_fu_591_p2, "exitcond_fu_591_p2");
    sc_trace(mVcdFile, tmp_10_fu_611_p6, "tmp_10_fu_611_p6");
    sc_trace(mVcdFile, tmp_10_reg_994, "tmp_10_reg_994");
    sc_trace(mVcdFile, RE_vec_128_d_load_ph_fu_629_p3, "RE_vec_128_d_load_ph_fu_629_p3");
    sc_trace(mVcdFile, RE_vec_128_d_load_ph_reg_1002, "RE_vec_128_d_load_ph_reg_1002");
    sc_trace(mVcdFile, RE_vec_128_c_load_ph_fu_636_p3, "RE_vec_128_c_load_ph_fu_636_p3");
    sc_trace(mVcdFile, RE_vec_128_c_load_ph_reg_1007, "RE_vec_128_c_load_ph_reg_1007");
    sc_trace(mVcdFile, IM_vec_128_d_load_ph_fu_643_p3, "IM_vec_128_d_load_ph_fu_643_p3");
    sc_trace(mVcdFile, IM_vec_128_d_load_ph_reg_1012, "IM_vec_128_d_load_ph_reg_1012");
    sc_trace(mVcdFile, IM_vec_128_c_load_ph_fu_649_p3, "IM_vec_128_c_load_ph_fu_649_p3");
    sc_trace(mVcdFile, IM_vec_128_c_load_ph_reg_1017, "IM_vec_128_c_load_ph_reg_1017");
    sc_trace(mVcdFile, sum8_fu_655_p2, "sum8_fu_655_p2");
    sc_trace(mVcdFile, sum8_reg_1022, "sum8_reg_1022");
    sc_trace(mVcdFile, c_1_fu_660_p2, "c_1_fu_660_p2");
    sc_trace(mVcdFile, grp_fu_348_p2, "grp_fu_348_p2");
    sc_trace(mVcdFile, tmp_s_reg_1032, "tmp_s_reg_1032");
    sc_trace(mVcdFile, grp_fu_356_p2, "grp_fu_356_p2");
    sc_trace(mVcdFile, tmp_17_reg_1037, "tmp_17_reg_1037");
    sc_trace(mVcdFile, grp_fu_360_p2, "grp_fu_360_p2");
    sc_trace(mVcdFile, tmp_18_reg_1042, "tmp_18_reg_1042");
    sc_trace(mVcdFile, tmp_14_fu_666_p6, "tmp_14_fu_666_p6");
    sc_trace(mVcdFile, tmp_14_reg_1047, "tmp_14_reg_1047");
    sc_trace(mVcdFile, tmp_20_fu_679_p6, "tmp_20_fu_679_p6");
    sc_trace(mVcdFile, tmp_20_reg_1052, "tmp_20_reg_1052");
    sc_trace(mVcdFile, tmp_15_reg_1057, "tmp_15_reg_1057");
    sc_trace(mVcdFile, i_1_fu_702_p2, "i_1_fu_702_p2");
    sc_trace(mVcdFile, i_1_reg_1065, "i_1_reg_1065");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, exitcond1_fu_697_p2, "exitcond1_fu_697_p2");
    sc_trace(mVcdFile, Real_addr_5_reg_1100, "Real_addr_5_reg_1100");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, Imag_addr_5_reg_1105, "Imag_addr_5_reg_1105");
    sc_trace(mVcdFile, Real_addr_6_reg_1110, "Real_addr_6_reg_1110");
    sc_trace(mVcdFile, Imag_addr_6_reg_1115, "Imag_addr_6_reg_1115");
    sc_trace(mVcdFile, c_reg_306, "c_reg_306");
    sc_trace(mVcdFile, c_aux_reg_318, "c_aux_reg_318");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, i_reg_329, "i_reg_329");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, tmp_5_fu_529_p1, "tmp_5_fu_529_p1");
    sc_trace(mVcdFile, tmp_6_fu_581_p1, "tmp_6_fu_581_p1");
    sc_trace(mVcdFile, sum8_cast_fu_692_p1, "sum8_cast_fu_692_p1");
    sc_trace(mVcdFile, tmp_23_fu_708_p1, "tmp_23_fu_708_p1");
    sc_trace(mVcdFile, tmp_24_fu_790_p1, "tmp_24_fu_790_p1");
    sc_trace(mVcdFile, tmp_25_fu_796_p1, "tmp_25_fu_796_p1");
    sc_trace(mVcdFile, indexJ_fu_98, "indexJ_fu_98");
    sc_trace(mVcdFile, indexJ_3_fu_783_p3, "indexJ_3_fu_783_p3");
    sc_trace(mVcdFile, indexI_fu_102, "indexI_fu_102");
    sc_trace(mVcdFile, indexI_3_fu_762_p3, "indexI_3_fu_762_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, grp_fu_340_p0, "grp_fu_340_p0");
    sc_trace(mVcdFile, grp_fu_340_p1, "grp_fu_340_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, grp_fu_344_p0, "grp_fu_344_p0");
    sc_trace(mVcdFile, grp_fu_344_p1, "grp_fu_344_p1");
    sc_trace(mVcdFile, grp_fu_348_p0, "grp_fu_348_p0");
    sc_trace(mVcdFile, grp_fu_348_p1, "grp_fu_348_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, grp_fu_352_p0, "grp_fu_352_p0");
    sc_trace(mVcdFile, grp_fu_352_p1, "grp_fu_352_p1");
    sc_trace(mVcdFile, p_neg_fu_406_p2, "p_neg_fu_406_p2");
    sc_trace(mVcdFile, p_cast_fu_432_p3, "p_cast_fu_432_p3");
    sc_trace(mVcdFile, num_word_op_op_fu_461_p2, "num_word_op_op_fu_461_p2");
    sc_trace(mVcdFile, tmp_11_fu_466_p3, "tmp_11_fu_466_p3");
    sc_trace(mVcdFile, p_neg_t_fu_474_p2, "p_neg_t_fu_474_p2");
    sc_trace(mVcdFile, tmp_26_fu_479_p4, "tmp_26_fu_479_p4");
    sc_trace(mVcdFile, tmp_2_fu_454_p3, "tmp_2_fu_454_p3");
    sc_trace(mVcdFile, tmp_27_fu_489_p3, "tmp_27_fu_489_p3");
    sc_trace(mVcdFile, tmp_28_fu_497_p3, "tmp_28_fu_497_p3");
    sc_trace(mVcdFile, ind1_fu_518_p2, "ind1_fu_518_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_543_p2, "sel_tmp1_fu_543_p2");
    sc_trace(mVcdFile, tmp_8_fu_535_p2, "tmp_8_fu_535_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_553_p2, "sel_tmp6_fu_553_p2");
    sc_trace(mVcdFile, ind2_fu_564_p2, "ind2_fu_564_p2");
    sc_trace(mVcdFile, ind3_fu_570_p2, "ind3_fu_570_p2");
    sc_trace(mVcdFile, tmp_10_fu_611_p5, "tmp_10_fu_611_p5");
    sc_trace(mVcdFile, tmp_33_fu_625_p1, "tmp_33_fu_625_p1");
    sc_trace(mVcdFile, tmp_cast_fu_603_p1, "tmp_cast_fu_603_p1");
    sc_trace(mVcdFile, indexI_1_cast_fu_724_p1, "indexI_1_cast_fu_724_p1");
    sc_trace(mVcdFile, indexI_2_cast_fu_732_p1, "indexI_2_cast_fu_732_p1");
    sc_trace(mVcdFile, indexI_5_fu_748_p3, "indexI_5_fu_748_p3");
    sc_trace(mVcdFile, indexI_4_cast_fu_740_p1, "indexI_4_cast_fu_740_p1");
    sc_trace(mVcdFile, indexI_6_fu_755_p3, "indexI_6_fu_755_p3");
    sc_trace(mVcdFile, indexJ_1_cast_fu_728_p1, "indexJ_1_cast_fu_728_p1");
    sc_trace(mVcdFile, indexJ_2_cast_fu_736_p1, "indexJ_2_cast_fu_736_p1");
    sc_trace(mVcdFile, indexJ_5_fu_769_p3, "indexJ_5_fu_769_p3");
    sc_trace(mVcdFile, indexJ_4_cast_fu_744_p1, "indexJ_4_cast_fu_744_p1");
    sc_trace(mVcdFile, indexJ_6_fu_776_p3, "indexJ_6_fu_776_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("Reorder_fft.hdltvin.dat");
    mHdltvoutHandle.open("Reorder_fft.hdltvout.dat");
}

Reorder_fft::~Reorder_fft() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete lut_reorder_I_1024_U;
    delete lut_reorder_J_1024_U;
    delete lut_reorder_I_4096_U;
    delete lut_reorder_J_4096_U;
    delete lut_reorder_I_16384_U;
    delete lut_reorder_J_16384_U;
    delete Reorder_fft_fadd_hbi_U1;
    delete Reorder_fft_fadd_hbi_U2;
    delete Reorder_fft_fmul_ibs_U3;
    delete Reorder_fft_fmul_ibs_U4;
    delete Reorder_fft_fmul_ibs_U5;
    delete Reorder_fft_fmul_ibs_U6;
    delete Reorder_fft_mux_4jbC_U7;
    delete Reorder_fft_mux_4jbC_U8;
    delete Reorder_fft_mux_4jbC_U9;
}

void Reorder_fft::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void Reorder_fft::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_3F800000;
}

void Reorder_fft::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_BF800000;
}

void Reorder_fft::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        c_aux_reg_318 = c_aux_1_reg_983.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        c_aux_reg_318 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_591_p2.read()))) {
        c_reg_306 = c_1_fu_660_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        c_reg_306 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(tmp_30_fu_513_p2.read(), ap_const_lv1_1))) {
        i_reg_329 = ap_const_lv13_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        i_reg_329 = i_1_reg_1065.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        IM_vec_128_a_reg_935 = Imag_q0.read();
        RE_vec_128_c_0_reg_930 = Real_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        IM_vec_128_b_reg_950 = Imag_q0.read();
        RE_vec_128_d_0_reg_945 = Real_r_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        IM_vec_128_c_0_reg_955 = Imag_q0.read();
        IM_vec_128_c_1_reg_960 = Real_r_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_591_p2.read()))) {
        IM_vec_128_c_load_ph_reg_1017 = IM_vec_128_c_load_ph_fu_649_p3.read();
        IM_vec_128_d_load_ph_reg_1012 = IM_vec_128_d_load_ph_fu_643_p3.read();
        RE_vec_128_c_load_ph_reg_1007 = RE_vec_128_c_load_ph_fu_636_p3.read();
        RE_vec_128_d_load_ph_reg_1002 = RE_vec_128_d_load_ph_fu_629_p3.read();
        sum8_reg_1022 = sum8_fu_655_p2.read();
        tmp_10_reg_994 = tmp_10_fu_611_p6.read();
        tmp_32_reg_988 = tmp_32_fu_607_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        IM_vec_128_d_0_reg_970 = Imag_q0.read();
        IM_vec_128_d_1_reg_975 = Real_r_q0.read();
        tmp_31_reg_965 = tmp_31_fu_587_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Imag_addr_1_reg_920 =  (sc_lv<14>) (tmp_6_fu_581_p1.read());
        Real_addr_3_reg_915 =  (sc_lv<14>) (tmp_6_fu_581_p1.read());
        tmp_4_reg_905 = tmp_4_fu_576_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        Imag_addr_5_reg_1105 =  (sc_lv<14>) (tmp_24_fu_790_p1.read());
        Imag_addr_6_reg_1115 =  (sc_lv<14>) (tmp_25_fu_796_p1.read());
        Real_addr_5_reg_1100 =  (sc_lv<14>) (tmp_24_fu_790_p1.read());
        Real_addr_6_reg_1110 =  (sc_lv<14>) (tmp_25_fu_796_p1.read());
        indexI_fu_102 = indexI_3_fu_762_p3.read();
        indexJ_fu_98 = indexJ_3_fu_783_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_30_fu_513_p2.read(), ap_const_lv1_0))) {
        Imag_addr_reg_871 =  (sc_lv<14>) (tmp_5_fu_529_p1.read());
        Real_addr_2_reg_866 =  (sc_lv<14>) (tmp_5_fu_529_p1.read());
        tmp_3_reg_856 = tmp_3_fu_524_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        c_aux_1_reg_983 = c_aux_1_fu_597_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        i_1_reg_1065 = i_1_fu_702_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        leng_reorder_2_reg_843 = leng_reorder_2_fu_446_p3.read();
        tmp_1_reg_833 = tmp_1_fu_427_p2.read();
        tmp_29_reg_848 = tmp_29_fu_505_p3.read();
        tmp_7_reg_838 = tmp_7_fu_440_p2.read();
        tmp_reg_826 = tmp_fu_422_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_lshr_reg_821 = p_neg_fu_406_p2.read().range(31, 2);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()))) {
        reg_364 = Real_r_q0.read();
        reg_370 = Imag_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()))) {
        reg_375 = Real_r_q0.read();
        reg_381 = Imag_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        reg_386 = grp_fu_352_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        reg_392 = grp_fu_340_p2.read();
        reg_399 = grp_fu_344_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_30_fu_513_p2.read(), ap_const_lv1_1))) {
        sel_tmp2_reg_893 = sel_tmp2_fu_548_p2.read();
        sel_tmp7_reg_899 = sel_tmp7_fu_558_p2.read();
        tmp_9_reg_888 = tmp_9_fu_540_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        tmp_14_reg_1047 = tmp_14_fu_666_p6.read();
        tmp_20_reg_1052 = tmp_20_fu_679_p6.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        tmp_15_reg_1057 = grp_fu_348_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tmp_17_reg_1037 = grp_fu_356_p2.read();
        tmp_18_reg_1042 = grp_fu_360_p2.read();
        tmp_s_reg_1032 = grp_fu_348_p2.read();
    }
}

void Reorder_fft::thread_IM_vec_128_c_load_ph_fu_649_p3() {
    IM_vec_128_c_load_ph_fu_649_p3 = (!tmp_33_fu_625_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_33_fu_625_p1.read()[0].to_bool())? IM_vec_128_c_1_reg_960.read(): IM_vec_128_c_0_reg_955.read());
}

void Reorder_fft::thread_IM_vec_128_d_load_ph_fu_643_p3() {
    IM_vec_128_d_load_ph_fu_643_p3 = (!tmp_33_fu_625_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_33_fu_625_p1.read()[0].to_bool())? IM_vec_128_d_1_reg_975.read(): IM_vec_128_d_0_reg_970.read());
}

void Reorder_fft::thread_Imag_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()))) {
        Imag_address0 = Imag_addr_6_reg_1115.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        Imag_address0 = Imag_addr_5_reg_1105.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        Imag_address0 =  (sc_lv<14>) (sum8_cast_fu_692_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        Imag_address0 = Imag_addr_1_reg_920.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        Imag_address0 = Imag_addr_reg_871.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        Imag_address0 =  (sc_lv<14>) (tmp_4_reg_905.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        Imag_address0 =  (sc_lv<14>) (tmp_3_reg_856.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Imag_address0 =  (sc_lv<14>) (tmp_6_fu_581_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        Imag_address0 =  (sc_lv<14>) (tmp_5_fu_529_p1.read());
    } else {
        Imag_address0 = "XXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_Imag_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        Imag_ce0 = ap_const_logic_1;
    } else {
        Imag_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Imag_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        Imag_d0 = reg_370.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        Imag_d0 = reg_381.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        Imag_d0 = reg_399.read();
    } else {
        Imag_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_Imag_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        Imag_we0 = ap_const_logic_1;
    } else {
        Imag_we0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_RE_vec_128_c_load_ph_fu_636_p3() {
    RE_vec_128_c_load_ph_fu_636_p3 = (!tmp_33_fu_625_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_33_fu_625_p1.read()[0].to_bool())? reg_370.read(): RE_vec_128_c_0_reg_930.read());
}

void Reorder_fft::thread_RE_vec_128_d_load_ph_fu_629_p3() {
    RE_vec_128_d_load_ph_fu_629_p3 = (!tmp_33_fu_625_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_33_fu_625_p1.read()[0].to_bool())? reg_381.read(): RE_vec_128_d_0_reg_945.read());
}

void Reorder_fft::thread_Real_r_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()))) {
        Real_r_address0 = Real_addr_6_reg_1110.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        Real_r_address0 = Real_addr_5_reg_1100.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        Real_r_address0 =  (sc_lv<14>) (sum8_cast_fu_692_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        Real_r_address0 = Real_addr_3_reg_915.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        Real_r_address0 = Real_addr_2_reg_866.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Real_r_address0 =  (sc_lv<14>) (tmp_4_fu_576_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        Real_r_address0 =  (sc_lv<14>) (tmp_3_fu_524_p1.read());
    } else {
        Real_r_address0 = "XXXXXXXXXXXXXX";
    }
}

void Reorder_fft::thread_Real_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        Real_r_ce0 = ap_const_logic_1;
    } else {
        Real_r_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_Real_r_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        Real_r_d0 = reg_364.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        Real_r_d0 = reg_375.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        Real_r_d0 = reg_392.read();
    } else {
        Real_r_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_Real_r_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()))) {
        Real_r_we0 = ap_const_logic_1;
    } else {
        Real_r_we0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Reorder_fft::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void Reorder_fft::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void Reorder_fft::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void Reorder_fft::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void Reorder_fft::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Reorder_fft::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void Reorder_fft::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void Reorder_fft::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void Reorder_fft::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void Reorder_fft::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Reorder_fft::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void Reorder_fft::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void Reorder_fft::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Reorder_fft::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void Reorder_fft::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void Reorder_fft::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void Reorder_fft::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void Reorder_fft::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void Reorder_fft::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void Reorder_fft::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Reorder_fft::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void Reorder_fft::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void Reorder_fft::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void Reorder_fft::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Reorder_fft::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Reorder_fft::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Reorder_fft::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void Reorder_fft::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_697_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Reorder_fft::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_697_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Reorder_fft::thread_c_1_fu_660_p2() {
    c_1_fu_660_p2 = (!c_reg_306.read().is_01() || !ap_const_lv32_4.is_01())? sc_lv<32>(): (sc_bigint<32>(c_reg_306.read()) + sc_biguint<32>(ap_const_lv32_4));
}

void Reorder_fft::thread_c_aux_1_fu_597_p2() {
    c_aux_1_fu_597_p2 = (!c_aux_reg_318.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(c_aux_reg_318.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Reorder_fft::thread_exitcond1_fu_697_p2() {
    exitcond1_fu_697_p2 = (!i_reg_329.read().is_01() || !tmp_9_reg_888.read().is_01())? sc_lv<1>(): sc_lv<1>(i_reg_329.read() == tmp_9_reg_888.read());
}

void Reorder_fft::thread_exitcond_fu_591_p2() {
    exitcond_fu_591_p2 = (!c_aux_reg_318.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(c_aux_reg_318.read() == ap_const_lv3_4);
}

void Reorder_fft::thread_grp_fu_340_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        grp_fu_340_p0 = reg_392.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_340_p0 = tmp_s_reg_1032.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_340_p0 = reg_386.read();
    } else {
        grp_fu_340_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_340_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        grp_fu_340_p1 = reg_364.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_340_p1 = tmp_15_reg_1057.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_340_p1 = RE_vec_128_c_load_ph_reg_1007.read();
    } else {
        grp_fu_340_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_344_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        grp_fu_344_p0 = reg_399.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_344_p0 = tmp_17_reg_1037.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_344_p0 = tmp_18_reg_1042.read();
    } else {
        grp_fu_344_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_344_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        grp_fu_344_p1 = IM_vec_128_a_reg_935.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        grp_fu_344_p1 = reg_386.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_344_p1 = IM_vec_128_c_load_ph_reg_1017.read();
    } else {
        grp_fu_344_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_348_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_348_p0 = tmp_14_reg_1047.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_348_p0 = reg_375.read();
    } else {
        grp_fu_348_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_348_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_348_p1 = reg_392.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_348_p1 = tmp_10_reg_994.read();
    } else {
        grp_fu_348_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_352_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_352_p0 = tmp_20_reg_1052.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_352_p0 = tmp_10_reg_994.read();
    } else {
        grp_fu_352_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_grp_fu_352_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_352_p1 = reg_399.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_fu_352_p1 = RE_vec_128_d_load_ph_reg_1002.read();
    } else {
        grp_fu_352_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void Reorder_fft::thread_i_1_fu_702_p2() {
    i_1_fu_702_p2 = (!i_reg_329.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_biguint<13>(i_reg_329.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void Reorder_fft::thread_ind1_fu_518_p2() {
    ind1_fu_518_p2 = (c_reg_306.read() | ap_const_lv32_1);
}

void Reorder_fft::thread_ind2_fu_564_p2() {
    ind2_fu_564_p2 = (c_reg_306.read() | ap_const_lv32_2);
}

void Reorder_fft::thread_ind3_fu_570_p2() {
    ind3_fu_570_p2 = (c_reg_306.read() | ap_const_lv32_3);
}

void Reorder_fft::thread_indexI_1_cast_fu_724_p1() {
    indexI_1_cast_fu_724_p1 = esl_zext<32,10>(lut_reorder_I_1024_q0.read());
}

void Reorder_fft::thread_indexI_2_cast_fu_732_p1() {
    indexI_2_cast_fu_732_p1 = esl_zext<32,10>(lut_reorder_I_4096_q0.read());
}

void Reorder_fft::thread_indexI_3_fu_762_p3() {
    indexI_3_fu_762_p3 = (!sel_tmp7_reg_899.read()[0].is_01())? sc_lv<32>(): ((sel_tmp7_reg_899.read()[0].to_bool())? indexI_4_cast_fu_740_p1.read(): indexI_6_fu_755_p3.read());
}

void Reorder_fft::thread_indexI_4_cast_fu_740_p1() {
    indexI_4_cast_fu_740_p1 = esl_zext<32,9>(lut_reorder_I_16384_q0.read());
}

void Reorder_fft::thread_indexI_5_fu_748_p3() {
    indexI_5_fu_748_p3 = (!tmp_reg_826.read()[0].is_01())? sc_lv<32>(): ((tmp_reg_826.read()[0].to_bool())? indexI_1_cast_fu_724_p1.read(): indexI_fu_102.read());
}

void Reorder_fft::thread_indexI_6_fu_755_p3() {
    indexI_6_fu_755_p3 = (!sel_tmp2_reg_893.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_reg_893.read()[0].to_bool())? indexI_2_cast_fu_732_p1.read(): indexI_5_fu_748_p3.read());
}

void Reorder_fft::thread_indexJ_1_cast_fu_728_p1() {
    indexJ_1_cast_fu_728_p1 = esl_zext<32,10>(lut_reorder_J_1024_q0.read());
}

void Reorder_fft::thread_indexJ_2_cast_fu_736_p1() {
    indexJ_2_cast_fu_736_p1 = esl_zext<32,12>(lut_reorder_J_4096_q0.read());
}

void Reorder_fft::thread_indexJ_3_fu_783_p3() {
    indexJ_3_fu_783_p3 = (!sel_tmp7_reg_899.read()[0].is_01())? sc_lv<32>(): ((sel_tmp7_reg_899.read()[0].to_bool())? indexJ_4_cast_fu_744_p1.read(): indexJ_6_fu_776_p3.read());
}

void Reorder_fft::thread_indexJ_4_cast_fu_744_p1() {
    indexJ_4_cast_fu_744_p1 = esl_zext<32,14>(lut_reorder_J_16384_q0.read());
}

void Reorder_fft::thread_indexJ_5_fu_769_p3() {
    indexJ_5_fu_769_p3 = (!tmp_reg_826.read()[0].is_01())? sc_lv<32>(): ((tmp_reg_826.read()[0].to_bool())? indexJ_1_cast_fu_728_p1.read(): indexJ_fu_98.read());
}

void Reorder_fft::thread_indexJ_6_fu_776_p3() {
    indexJ_6_fu_776_p3 = (!sel_tmp2_reg_893.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_reg_893.read()[0].to_bool())? indexJ_2_cast_fu_736_p1.read(): indexJ_5_fu_769_p3.read());
}

void Reorder_fft::thread_leng_reorder_2_fu_446_p3() {
    leng_reorder_2_fu_446_p3 = (!tmp_7_fu_440_p2.read()[0].is_01())? sc_lv<12>(): ((tmp_7_fu_440_p2.read()[0].to_bool())? p_cast_fu_432_p3.read(): ap_const_lv12_F80);
}

void Reorder_fft::thread_lut_reorder_I_1024_address0() {
    lut_reorder_I_1024_address0 =  (sc_lv<9>) (tmp_23_fu_708_p1.read());
}

void Reorder_fft::thread_lut_reorder_I_1024_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        lut_reorder_I_1024_ce0 = ap_const_logic_1;
    } else {
        lut_reorder_I_1024_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_lut_reorder_I_16384_address0() {
    lut_reorder_I_16384_address0 =  (sc_lv<13>) (tmp_23_fu_708_p1.read());
}

void Reorder_fft::thread_lut_reorder_I_16384_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        lut_reorder_I_16384_ce0 = ap_const_logic_1;
    } else {
        lut_reorder_I_16384_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_lut_reorder_I_4096_address0() {
    lut_reorder_I_4096_address0 =  (sc_lv<11>) (tmp_23_fu_708_p1.read());
}

void Reorder_fft::thread_lut_reorder_I_4096_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        lut_reorder_I_4096_ce0 = ap_const_logic_1;
    } else {
        lut_reorder_I_4096_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_lut_reorder_J_1024_address0() {
    lut_reorder_J_1024_address0 =  (sc_lv<9>) (tmp_23_fu_708_p1.read());
}

void Reorder_fft::thread_lut_reorder_J_1024_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        lut_reorder_J_1024_ce0 = ap_const_logic_1;
    } else {
        lut_reorder_J_1024_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_lut_reorder_J_16384_address0() {
    lut_reorder_J_16384_address0 =  (sc_lv<13>) (tmp_23_fu_708_p1.read());
}

void Reorder_fft::thread_lut_reorder_J_16384_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        lut_reorder_J_16384_ce0 = ap_const_logic_1;
    } else {
        lut_reorder_J_16384_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_lut_reorder_J_4096_address0() {
    lut_reorder_J_4096_address0 =  (sc_lv<11>) (tmp_23_fu_708_p1.read());
}

void Reorder_fft::thread_lut_reorder_J_4096_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        lut_reorder_J_4096_ce0 = ap_const_logic_1;
    } else {
        lut_reorder_J_4096_ce0 = ap_const_logic_0;
    }
}

void Reorder_fft::thread_num_word_op_op_fu_461_p2() {
    num_word_op_op_fu_461_p2 = (!num_word.read().is_01() || !ap_const_lv32_3.is_01())? sc_lv<32>(): (sc_biguint<32>(num_word.read()) + sc_biguint<32>(ap_const_lv32_3));
}

void Reorder_fft::thread_p_cast_fu_432_p3() {
    p_cast_fu_432_p3 = (!tmp_fu_422_p2.read()[0].is_01())? sc_lv<12>(): ((tmp_fu_422_p2.read()[0].to_bool())? ap_const_lv12_1E0: ap_const_lv12_7E0);
}

void Reorder_fft::thread_p_neg_fu_406_p2() {
    p_neg_fu_406_p2 = (!ap_const_lv32_FFFFFFFD.is_01() || !num_word.read().is_01())? sc_lv<32>(): (sc_bigint<32>(ap_const_lv32_FFFFFFFD) - sc_biguint<32>(num_word.read()));
}

void Reorder_fft::thread_p_neg_t_fu_474_p2() {
    p_neg_t_fu_474_p2 = (!ap_const_lv30_0.is_01() || !p_lshr_reg_821.read().is_01())? sc_lv<30>(): (sc_biguint<30>(ap_const_lv30_0) - sc_biguint<30>(p_lshr_reg_821.read()));
}

void Reorder_fft::thread_sel_tmp1_fu_543_p2() {
    sel_tmp1_fu_543_p2 = (tmp_reg_826.read() ^ ap_const_lv1_1);
}

void Reorder_fft::thread_sel_tmp2_fu_548_p2() {
    sel_tmp2_fu_548_p2 = (tmp_1_reg_833.read() & sel_tmp1_fu_543_p2.read());
}

void Reorder_fft::thread_sel_tmp6_fu_553_p2() {
    sel_tmp6_fu_553_p2 = (tmp_7_reg_838.read() ^ ap_const_lv1_1);
}

void Reorder_fft::thread_sel_tmp7_fu_558_p2() {
    sel_tmp7_fu_558_p2 = (tmp_8_fu_535_p2.read() & sel_tmp6_fu_553_p2.read());
}

void Reorder_fft::thread_sum8_cast_fu_692_p1() {
    sum8_cast_fu_692_p1 = esl_sext<64,16>(sum8_reg_1022.read());
}

void Reorder_fft::thread_sum8_fu_655_p2() {
    sum8_fu_655_p2 = (!tmp_31_reg_965.read().is_01() || !tmp_cast_fu_603_p1.read().is_01())? sc_lv<16>(): (sc_biguint<16>(tmp_31_reg_965.read()) + sc_biguint<16>(tmp_cast_fu_603_p1.read()));
}

void Reorder_fft::thread_tmp_10_fu_611_p5() {
    tmp_10_fu_611_p5 = c_aux_reg_318.read().range(2-1, 0);
}

void Reorder_fft::thread_tmp_11_fu_466_p3() {
    tmp_11_fu_466_p3 = num_word_op_op_fu_461_p2.read().range(31, 31);
}

void Reorder_fft::thread_tmp_1_fu_427_p2() {
    tmp_1_fu_427_p2 = (!num_word.read().is_01() || !ap_const_lv32_1000.is_01())? sc_lv<1>(): sc_lv<1>(num_word.read() == ap_const_lv32_1000);
}

void Reorder_fft::thread_tmp_23_fu_708_p1() {
    tmp_23_fu_708_p1 = esl_zext<64,13>(i_reg_329.read());
}

void Reorder_fft::thread_tmp_24_fu_790_p1() {
    tmp_24_fu_790_p1 = esl_sext<64,32>(indexI_3_fu_762_p3.read());
}

void Reorder_fft::thread_tmp_25_fu_796_p1() {
    tmp_25_fu_796_p1 = esl_sext<64,32>(indexJ_3_fu_783_p3.read());
}

void Reorder_fft::thread_tmp_26_fu_479_p4() {
    tmp_26_fu_479_p4 = num_word_op_op_fu_461_p2.read().range(31, 2);
}

void Reorder_fft::thread_tmp_27_fu_489_p3() {
    tmp_27_fu_489_p3 = (!tmp_11_fu_466_p3.read()[0].is_01())? sc_lv<30>(): ((tmp_11_fu_466_p3.read()[0].to_bool())? p_neg_t_fu_474_p2.read(): tmp_26_fu_479_p4.read());
}

void Reorder_fft::thread_tmp_28_fu_497_p3() {
    tmp_28_fu_497_p3 = (!tmp_2_fu_454_p3.read()[0].is_01())? sc_lv<30>(): ((tmp_2_fu_454_p3.read()[0].to_bool())? ap_const_lv30_0: tmp_27_fu_489_p3.read());
}

void Reorder_fft::thread_tmp_29_fu_505_p3() {
    tmp_29_fu_505_p3 = esl_concat<30,2>(tmp_28_fu_497_p3.read(), ap_const_lv2_0);
}

void Reorder_fft::thread_tmp_2_fu_454_p3() {
    tmp_2_fu_454_p3 = num_word.read().range(31, 31);
}

void Reorder_fft::thread_tmp_30_fu_513_p2() {
    tmp_30_fu_513_p2 = (!c_reg_306.read().is_01() || !tmp_29_reg_848.read().is_01())? sc_lv<1>(): sc_lv<1>(c_reg_306.read() == tmp_29_reg_848.read());
}

void Reorder_fft::thread_tmp_31_fu_587_p1() {
    tmp_31_fu_587_p1 = c_reg_306.read().range(16-1, 0);
}

void Reorder_fft::thread_tmp_32_fu_607_p1() {
    tmp_32_fu_607_p1 = c_aux_reg_318.read().range(2-1, 0);
}

void Reorder_fft::thread_tmp_33_fu_625_p1() {
    tmp_33_fu_625_p1 = c_aux_reg_318.read().range(1-1, 0);
}

void Reorder_fft::thread_tmp_3_fu_524_p1() {
    tmp_3_fu_524_p1 = esl_sext<64,32>(c_reg_306.read());
}

void Reorder_fft::thread_tmp_4_fu_576_p1() {
    tmp_4_fu_576_p1 = esl_zext<64,32>(ind2_fu_564_p2.read());
}

void Reorder_fft::thread_tmp_5_fu_529_p1() {
    tmp_5_fu_529_p1 = esl_zext<64,32>(ind1_fu_518_p2.read());
}

void Reorder_fft::thread_tmp_6_fu_581_p1() {
    tmp_6_fu_581_p1 = esl_zext<64,32>(ind3_fu_570_p2.read());
}

void Reorder_fft::thread_tmp_7_fu_440_p2() {
    tmp_7_fu_440_p2 = (tmp_fu_422_p2.read() | tmp_1_fu_427_p2.read());
}

void Reorder_fft::thread_tmp_8_fu_535_p2() {
    tmp_8_fu_535_p2 = (!num_word.read().is_01() || !ap_const_lv32_4000.is_01())? sc_lv<1>(): sc_lv<1>(num_word.read() == ap_const_lv32_4000);
}

void Reorder_fft::thread_tmp_9_fu_540_p1() {
    tmp_9_fu_540_p1 = esl_sext<13,12>(leng_reorder_2_reg_843.read());
}

void Reorder_fft::thread_tmp_cast_fu_603_p1() {
    tmp_cast_fu_603_p1 = esl_zext<16,3>(c_aux_reg_318.read());
}

void Reorder_fft::thread_tmp_fu_422_p2() {
    tmp_fu_422_p2 = (!num_word.read().is_01() || !ap_const_lv32_400.is_01())? sc_lv<1>(): sc_lv<1>(num_word.read() == ap_const_lv32_400);
}

void Reorder_fft::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(tmp_30_fu_513_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state46;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_591_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 35184372088832 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_697_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state47;
            }
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 140737488355328 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state51;
            break;
        case 1125899906842624 : 
            ap_NS_fsm = ap_ST_fsm_state52;
            break;
        case 2251799813685248 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<52>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void Reorder_fft::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"num_word\" :  \"" << num_word.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_r_address0\" :  \"" << Real_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_r_ce0\" :  \"" << Real_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_r_we0\" :  \"" << Real_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Real_r_d0\" :  \"" << Real_r_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Real_r_q0\" :  \"" << Real_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_address0\" :  \"" << Imag_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_ce0\" :  \"" << Imag_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_we0\" :  \"" << Imag_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"Imag_d0\" :  \"" << Imag_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"Imag_q0\" :  \"" << Imag_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

